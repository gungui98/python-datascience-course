,id,name,email,date,message,file-changed-count
0,2c0ca63b3100f419da42365e5efe2d1c74d9aa3e,Yuki,drsuaimqjgar@gmail.com,2023-06-03 04:01:06,DOC: Fix `NPY_OUT_ARRAY` to `NPY_ARRAY_OUT_ARRAY` in how-to-extend guide,1
1,2fa0965bcaf013a141052211e94e4567a9690f6b,Leo Singer,leo.singer@ligo.org,2023-05-31 12:15:53,"MAINT: make PyUFuncObject.types const

Numpy's internals do not modify this field, and C extensions that
call `PyUFunc_FromFuncAndDataAndSignature` and friends are likely
to pass a (static) const char array for the types argument. Make
this field const so that calling code does not see discarded
qualifier warnings.",4
2,5889605f216908e3d10af54caf7d4842cbb54e31,Leo Singer,leo.singer@ligo.org,2023-06-02 19:06:43,MAINT: make PyUFuncObject.data const,2
3,6385f8eeda6ffd80769fde2c199cb40b453357b6,Raghuveer Devulapalli,raghuveer.devulapalli@intel.com,2023-05-30 18:11:53,TST: Add tests for np.argsort,1
4,9eceb85c7156ddf5a04b00831971d4904eb84588,Raghuveer Devulapalli,raghuveer.devulapalli@intel.com,2023-05-30 19:14:29,DOC: Add release note for np.argsort speed up,1
5,cad6b0651f8a5ae4fd49aae288e0ecce3e68c4e0,Raghuveer Devulapalli,raghuveer.devulapalli@intel.com,2023-06-01 04:49:57,Minor changes based on feedback,1
6,d5e6712054b04cd325d600f4431a7eda75025367,Raghuveer Devulapalli,raghuveer.devulapalli@intel.com,2023-06-01 16:17:16,"Use preferred alias random instead of rand.

Co-authored-by: Robert Kern <robert.kern@gmail.com>",1
7,e6d8a8b0f5d05125d4cb751aa0bb9fe383677e27,Chris Sidebottom,chris.sidebottom@arm.com,2023-04-04 19:40:51,"ENH: float64 tan using Numpy intrinsics

This builds on top of #23399 and introduces a NumPy intrinsic variant for [float64 tan](https://github.com/ARM-software/optimized-routines/blob/master/pl/math/v_tan_3u5.c), taken from Optimized Routines under MIT license.

CPU features:
```
NumPy CPU features: NEON NEON_FP16 NEON_VFPV4 ASIMD ASIMDHP* ASIMDDP* ASIMDFHM
```

Relevant benchmarks:
```
     <main>           <optimized-routines-tan-f64>
+     82.1±0.03μs        103±0.2μs     1.26  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 2, 4, 'd')
+     81.6±0.03μs        102±0.2μs     1.25  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 2, 2, 'd')
+     82.4±0.08μs        103±0.2μs     1.25  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 4, 4, 'd')
+      81.9±0.2μs        102±0.3μs     1.24  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 4, 2, 'd')
+     81.5±0.03μs        101±0.4μs     1.24  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 2, 1, 'd')
+     81.6±0.04μs       99.9±0.4μs     1.22  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 4, 1, 'd')
+     82.8±0.05μs        101±0.4μs     1.22  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 1, 4, 'd')
+     82.4±0.04μs        100±0.3μs     1.22  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 1, 2, 'd')
+      82.6±0.3μs       97.2±0.3μs     1.18  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 1, 1, 'd')
-       200±0.1μs       63.9±0.1μs     0.32  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 4, 4, 'd')
-       199±0.1μs      63.4±0.07μs     0.32  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 4, 2, 'd')
-       201±0.6μs      63.4±0.04μs     0.32  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 2, 4, 'd')
-       200±0.1μs      63.2±0.03μs     0.32  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 2, 2, 'd')
-       200±0.1μs      59.4±0.03μs     0.30  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 1, 4, 'd')
-       201±0.2μs      59.3±0.03μs     0.30  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 1, 2, 'd')
-       200±0.2μs      57.7±0.03μs     0.29  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 4, 1, 'd')
-       200±0.3μs      57.6±0.02μs     0.29  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 2, 1, 'd')
-       200±0.1μs      53.7±0.01μs     0.27  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 1, 1, 'd')
```",12
8,f6c14d7df6c8194ac2017f3b0f59c5929690088a,Chris Sidebottom,chris.sidebottom@arm.com,2023-04-17 17:04:24,"Intrinsicify negative

Use neg instruction if available, that seems safer, else fallback to
previously created intrinsics which are now available centrally.",5
9,cf4b70141225bcaa30b28267d454d247e968fb85,Chris Sidebottom,chris.sidebottom@arm.com,2023-04-25 22:49:08,Correct Estrin implementation,1
10,3c3abfd4eeed1efe70ff44da267595d6db1ac8fb,Chris Sidebottom,chris.sidebottom@arm.com,2023-05-26 21:15:44,"Re-arrange files to better suit codebase

* Removes npyv_cvt functions in favour of subtraction method
* Moves Estrin implementation to umath
* Minor text fixes to simd.h for negative.h",12
11,61fb035f56e8436510c4c992192732fcbc7c3759,Chris Sidebottom,chris.sidebottom@arm.com,2023-04-25 12:27:21,"ENH: float32 tan using NumPy intrinsics

This builds on top of #23603, and introduces a NumPy intrinsic variant for [float32 tan](https://github.com/ARM-software/optimized-routines/blob/master/pl/math/v_tanf_3u5.c), taken from Optimized Routines under MIT license.

CPU features:
```
NumPy CPU features: NEON NEON_FP16 NEON_VFPV4 ASIMD ASIMDHP* ASIMDDP* ASIMDFHM
```

Relevant benchmarks:
```
+     45.3±0.07μs       73.0±0.1μs     1.61  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 4, 2, 'f')
+     45.5±0.07μs       73.1±0.1μs     1.61  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 4, 4, 'f')
+     45.1±0.05μs      68.2±0.02μs     1.51  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 2, 2, 'f')
+     45.3±0.04μs      68.3±0.02μs     1.51  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 2, 4, 'f')
+     46.4±0.09μs      65.3±0.04μs     1.41  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 1, 4, 'f')
+     46.5±0.05μs      65.3±0.02μs     1.40  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 1, 2, 'f')
+      45.4±0.1μs       63.3±0.2μs     1.40  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 4, 1, 'f')
+     45.2±0.09μs       60.3±0.2μs     1.33  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 2, 1, 'f')
+     46.3±0.02μs       57.1±0.2μs     1.24  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 1, 1, 'f')
-      127±0.08μs      38.2±0.02μs     0.30  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 4, 2, 'f')
-      127±0.05μs      38.3±0.01μs     0.30  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 4, 4, 'f')
-      128±0.05μs      35.6±0.01μs     0.28  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 2, 2, 'f')
-       129±0.3μs      35.6±0.01μs     0.28  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 2, 4, 'f')
-      128±0.04μs      32.5±0.01μs     0.25  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 1, 4, 'f')
-       129±0.4μs         32.5±0μs     0.25  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 1, 2, 'f')
-      127±0.06μs      31.4±0.02μs     0.25  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 4, 1, 'f')
-      128±0.09μs      27.8±0.02μs     0.22  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 2, 1, 'f')
-      128±0.05μs      24.8±0.01μs     0.19  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 1, 1, 'f')
```",11
12,62bf056702f8ff688567a3eb338edac5c59f0c82,Cristian Tatu,ctatu@bsc.es,2023-05-29 13:59:08,add offset parameter to lib.format.open_memmap,2
13,ad6a16fa02d6dd4271522c9458a741605ef45362,Ralf Gommers,ralf.gommers@gmail.com,2023-05-29 14:16:41,BLD: default to using meson-python as build backend,3
14,24327ca7559bb5e0b9fd679b044bddb4699a1a67,Ralf Gommers,ralf.gommers@gmail.com,2023-05-29 14:23:41,CI: tweak CI for the change to meson-python as default build backend,2
15,055345b73d1715f008780a596196111863f048c3,Ralf Gommers,ralf.gommers@gmail.com,2023-05-29 16:11:09,"CI: drop 32-bit Windows Azure testing, adjust 64-bit for Meson

Closes gh-23717",2
16,23f2ab537ef8bd10e20744271d100f06072251f0,Ralf Gommers,ralf.gommers@gmail.com,2023-05-29 16:51:54,BLD: fix bug with CMake fallback detection of BLAS/LAPACK,1
17,4203751c1fbbd733c1fe5d12d935b3c87e5c8f97,Ralf Gommers,ralf.gommers@gmail.com,2023-05-29 17:07:24,"CI: upgrade rtools to 4.3 to get a new enough GCC version in Azure

The rtools 4.0 used GCC 8.3 and we set the minimum to 8.3 for the Meson
build. That was to avoid workarounds for SIMD support for old GCCs,
and seems to still be a reasonable lower bound.",1
18,7ed70a2bb3bb5f0d860728aa8a36f9b2a83ca778,Ralf Gommers,ralf.gommers@gmail.com,2023-05-29 17:15:29,CI: keep the Emscripten/Pyodide job on a setup.py-based build,2
19,d64f35db1c1359163a7b9f5f4d1f186d7bdf90ac,Dimitri Papadopoulos,3234522+DimitriPapadopoulos@users.noreply.github.com,2023-05-28 18:00:30,"MAINT: Turn old string formatting into f-strings

Do not modify f2py yet, it's perhaps the most complex part.",64
20,63b5edcbaaf1af4a488a1856929989042feb8192,Mateusz Sokół,mat646@gmail.com,2023-05-28 12:49:37,API: deprecate compat and selected lib utils,6
21,1ee3971ad96865ba03067ac42c27567c91abcd46,Christian Clauss,cclauss@me.com,2023-05-28 07:34:32,"pyproject.toml: Upgrade setuptools for Python 3.12 beta 1

Related to #23808

https://www.python.org/download/pre-releases
https://docs.python.org/3.12/whatsnew/3.12.html",3
22,e14fdd6f34be9319d08d1c4a2c30e74e76756a10,Christian Clauss,cclauss@me.com,2023-05-28 11:34:48,Python 3.12-dev,1
23,6b08994fb8ba63f9be1cf7ee2800e63dd642ab90,ganesh-k13,ganesh3597@gmail.com,2023-05-28 06:37:19,"ENH: Add mmap support for `NpzFile`

- Added mmap_mode to `NpzFile`
- Added zip support for `np.lib.format.open_memmap`",2
24,6d0890702f0522c358b6f7c4e900c0707895f07f,Brigitta Sipőcz,bsipocz@gmail.com,2023-05-25 17:25:39,MAINT: removing the deprecated submodule,1
25,decc15d3859650aa681b26c1f21d3f5697c44387,Brigitta Sipőcz,bsipocz@gmail.com,2023-05-25 17:42:48,MAINT: removing all mentions of umath_tests,4
26,011d5fab9b4897f086d6ff7b0b58d3aeb3de4966,Brigitta Sipőcz,bsipocz@gmail.com,2023-05-25 18:05:16,MAINT: making pytest with doctestplus collect without errors,4
27,50554c97f612409ddcddbb4252d88f45d1a18881,Brigitta Sipőcz,bsipocz@gmail.com,2023-05-25 23:15:53,TMP: some fixes,10
28,c9525efceeee7fa3fa07fe12a62ed75b5b7e2f79,Brigitta Sipőcz,bsipocz@gmail.com,2023-05-26 00:49:35,DOC: switching to use the plot directive,2
29,c7d5c27b2db70e229d0ae1e91181488af282247d,Brigitta Sipőcz,bsipocz@gmail.com,2023-05-26 01:05:48,MAINT: adding doctestplus to test requirements,1
30,6742db7bdbcf026a98a360418af42fa21a0a85a5,Edward E,develinthedetail@gmail.com,2023-04-21 21:04:38,"MAINT: Overhaul and refactor NPY_OS_WIN*

An addendum to #20884 that fixes and deobfuscates Windows OS defines.
NPY_OS_WIN64 was never defined, as _WIN32 is defined whenever _WIN64 is.
Rename NPY_OS_WIN* constants to be less ambiguous, to avoid future
confusion about their meanings.

Also remove NPY_OS_MINGW, since it too never got defined. Note that
MINGW is not an OS anyway, but a build environment like MSVC.

All changes either preserve functionality or restore original intent.",5
31,c19e84e012da65828f62f54f721337d873fd04fe,Brian Walshe,walshe.brian@gmail.com,2023-05-22 10:43:44,"BUG: add copy parameter for api.reshape function

This adds a parameter to api.reshape to specify if data
should be copied. This parameter is required so that
api.reshape conforms to the standard. See #23410",2
32,78923f0fa0cf8ff163d0f35f322ccf4411b1e742,Brian Walshe,walshe.brian@gmail.com,2023-05-22 10:58:11,fixup: linting issue,1
33,8bc147808c0c5967e52f54a988cd75de45404347,Brian Walshe,walshe.brian@gmail.com,2023-05-22 11:02:08,fixup: linting issue,1
34,6535f88db0af9f881ab3b410ccf71c8531f6afb5,Brian Walshe,walshe.brian@gmail.com,2023-05-25 10:13:00,enable copy=False,2
35,38444c54aa905d064510e742f19c46129d9f4928,Brian Walshe,walshe.brian@gmail.com,2023-05-25 11:50:35,fixup: more linter issues,1
36,0d831f03fd46ff22d14889ad0146adf792439973,Brian Walshe,walshe.brian@gmail.com,2023-06-03 08:48:02,release note,1
37,d1023081d920de5cb7073120b0ef41f5adedeaf1,Nathan Goldbaum,nathan.goldbaum@gmail.com,2023-05-18 18:46:14,"BUG: Create complex scalars from real and imaginary parts

fixes gh-19125",2
38,d3ff38ca79ceff52b306826bd973d6ae6bc0b89c,Nathan Goldbaum,nathan.goldbaum@gmail.com,2023-05-19 00:59:14,MAINT: substantially simplify complex scalar creation logic,1
39,efe4c13f213461a12efaf9305a6b0113b61104a7,Bas van Beek,bas.vanbeek@hotmail.com,2023-04-24 15:30:24,"CI,TYP: Bump mypy to 1.3.0",12
40,7140c76c6ef7a16a7d14de6d2e7912f5c05bae07,Bas van Beek,bas.vanbeek@hotmail.com,2023-05-15 11:58:50,TYP: Improve function-based annotations with `typing.Concatenate`,1
41,1431ad30b83cb88eac0829164ab394003434c321,Bas van Beek,bas.vanbeek@hotmail.com,2023-05-17 15:00:53,"CI: Avoid overriding `MYPYPATH`

This practice is actively discouraged by mypy",2
42,a6e59dd577ac75528fbc5d21a5ba4d259afc716b,Bas van Beek,bas.vanbeek@hotmail.com,2023-05-22 12:27:49,"TYP,TST: Run mypy over the numpy source rather than the build artifact",1
43,23f365100dc39c83cb4afc4aa8c70479505ee626,Kai Striega,kaistriega@gmail.com,2023-05-15 02:58:28,ENH: Add .mT attribute for arrays,2
44,cdf850ed0eaa5f4339d74c33eb130d0265c142d1,Kai Striega,kaistriega@gmail.com,2023-05-15 07:30:18,"TST: Fix test names to reflect test behaviour

The lower dimensional (1d and 2d) tests compare the behaviour of `.mT` against
`.T` not swapaxes.",1
45,13f0a2efedf33b389b2bc55289e2852af364af8f,Kai Striega,kaistriega@gmail.com,2023-05-15 07:33:53,"TST: Increase max_dims for matrix_transpose test

The test generates random shapes of a given length. This was previously used
with min_dims=3. This excludes arrays of dimension 0, 1, 2 which we want.
Instead we test all dimensions up to 7.",1
46,086a9194a0f3aed144e857f946612260d3237abd,Kai Striega,kaistriega@gmail.com,2023-05-17 04:10:05,"TST: Use `np.broadcast_to` to save memory in test

This commit reduces the memory required by the test. Instead of explicitly
constructing an array of shape `shape`, we now construct only the last dim
and broadcast over that.",1
47,95da479f33974dbacbcb148babf427114d9e20ac,Kai Striega,kaistriega@gmail.com,2023-05-17 04:20:01,"TST: Avoid using hypothesis in test case

Hypothesis seems to be overkill for the provided situation. Use explicitly
defined values instead.",1
48,e33c0024a0284113557a23219ab58ced3e5930f8,Kai Striega,kaistriega@gmail.com,2023-05-17 04:22:33,TST/MAINT: Rename file to be more generic,1
49,5c346a3295fa01093679ab4abc24e860f32afc19,Kai Striega,kaistriega@gmail.com,2023-05-17 07:09:39,"ENH: Raise ValueError for ndim < 2 in .mT

This commit causes `.mT` to raise a ValueError if ndim < 2. This is because
the matrix transpose is undefined for 0 or 1 dimensional arrays and having
it implemented may lead to confusion by users.",2
50,58a0e0dba2fa1fa23c59a47107b30dfe89545ebd,Kai Striega,kaistriega@gmail.com,2023-05-20 10:47:28,TST: Add test for the existence of `matrix_transpose`,1
51,710aaedd5715ae0a2f46f5fc2d9db1478e0d71d0,Kai Striega,kaistriega@gmail.com,2023-05-20 11:29:18,ENH: Try to create a `matrix_transpose` function,4
52,0304796ffa017ecf005e9ddbb77601b2f8c7509f,Kai Striega,kaistriega@gmail.com,2023-05-22 00:10:43,"REV: Remove PyArray_MatrixTranspose from C-API

This was decided to not be needed in the PR review.
Skipping CI as I know it doesn't work and don't need
CI to tell me that.

[skip ci]",4
53,bd40405912d4457f1c0fd9a72c9cee15312a00b4,Kai Striega,kaistriega@gmail.com,2023-05-22 05:22:34,"DOC: Add release note for matrix transpose

[skip ci]",1
54,81159191bcfadf06d580bd46dfb5434eade3012a,Kai Striega,kaistriega@gmail.com,2023-05-26 07:37:45,TYP: Add typehint for new `.mT` attribute,1
55,716e85cd5e3113e6059d4f025134c191ea556522,Kai Striega,kaistriega@gmail.com,2023-05-30 08:51:19,ENH: Include PyArray_MatrixTranspose in shape.h,2
56,6185d1962f7455eee5b404b3d0eb3344c82ad541,Kai,kaistriega+github@gmail.com,2023-05-31 06:36:45,Merge branch 'numpy:main' into mT,181
57,219de26ec571e8c1f38909b4697ddddb67bc632c,Michael Siebert,michael.siebert2k@gmail.com,2023-05-31 14:46:37,speed up matmul #23588,1
58,9b8769750042d6fff0adc9676775434ee907916b,Sebastian Cajas,ulsordonez@unicauca.edu.co,2023-05-03 00:32:40,"Update absolute_beginners.rst

Updating example descriptions",1
59,258f7cd9e49cbd2b6f3185c478e56ceea75c564f,Sebastian Cajas,ulsordonez@unicauca.edu.co,2023-05-03 06:44:27,"Update absolute_beginners.rst

Breaking long lines",1
60,319835f8a1e42b686fdda8645df0c6a91b4306e3,Sebastian Cajas,ulsordonez@unicauca.edu.co,2023-05-03 07:34:10,Update absolute_beginners.rst,1
61,3a3a84a43245342dfcd524546921914f73667b2b,aviralsomani,avisomani@gmail.com,2022-11-08 17:45:57,Includes example for Beta documentation,1
62,ebe47daed918f9a0e046f3f43f64ecf209749125,ValeryVal,85856176+ValeryVal@users.noreply.github.com,2023-04-22 23:02:48,DOC: change comment style,1
63,db577feadcf6e0aeb4d758c75b9ea0934ad33b72,ValeryVal,85856176+ValeryVal@users.noreply.github.com,2023-04-27 21:16:16,"DOC: relace greek symbols, make right formatting",1
64,03003a44cac03eaee89ab7c87daa3b8dbb6659bb,Alex Gregory,alex.gregory1@outlook.com,2023-04-22 14:48:02,Add support for complex weights,1
65,66ae571d6b50e4ea12ffdc23ccc8132f45a3baf1,Alex Gregory,alex.gregory1@outlook.com,2023-04-28 17:25:51,Add support for integers,1
66,c9ef986a5b56ca38f9cf7f7460081afa78b78150,Alex Gregory,alex.gregory1@outlook.com,2023-04-28 20:16:32,Switch to unsigned integers for the weights,1
67,2cfe3a7307929389ee313a4232f0a2d95bc1b4d9,Alex Gregory,alex.gregory1@outlook.com,2023-04-28 21:00:04,Change to npy_uintp to reflect type at initialization,1
68,6ee969cd9345c825948c2c78cd5078a3fbfebc86,Alex Gregory,alex.gregory1@outlook.com,2023-04-28 21:05:08,Initialise weights for the complex case,1
69,e6f58beae52b52a455d83573d6134eee164871e8,Mike-gag,t8200234@aueb.gr,2023-04-19 09:07:23,ENH: add no_whitespace to numpy.fromstring,2
70,4e14818b2c666d14d7288bc5f64dab4e77281e33,Mike-gag,t8200234@aueb.gr,2023-04-22 19:35:28,add documentation,1
71,9fc805fa75400a7ec903130ec91a285c43d95e35,Mike-gag,t8200234@aueb.gr,2023-04-22 19:41:24,added documentation,1
72,c6a8197e031187b93e1012ef81b8bd547ebeffdb,Mike-gag,t8200234@aueb.gr,2023-04-19 09:07:23,ENH: add no_whitespace to numpy.fromstring,2
73,3de9eeede4e213862da72372d068f1b2e2856a90,Mike-gag,t8200234@aueb.gr,2023-04-22 19:35:28,add documentation,1
74,3f4a3868c8f89f7e374cfe79d51ff19a1dafd053,Mike-gag,t8200234@aueb.gr,2023-04-22 19:41:24,added documentation,1
75,c908d2eebbc75c5765f485592334b014a5f6a627,Mike-gag,t8200234@aueb.gr,2023-04-29 18:09:46,removing  which seemed to create bugs,1
76,de6c1c51e53b1daa30764489c002fec8dc04e900,Mike-gag,t8200234@aueb.gr,2023-04-29 18:14:35,Merge branch 'no_whitespace' of https://github.com/Mike-gag/numpy into no_whitespace,0
77,3b5919683479c9877ff0af4a6ee544c893125c55,Mike-gag,t8200234@aueb.gr,2023-05-20 13:24:46,whitespace is replaced by the value user provides,1
78,6948d64570f324fd7addd964f7d6b2ce6b054cd1,Mike-gag,t8200234@aueb.gr,2023-05-20 13:39:30,minor bug fix,1
79,329e36c5238ad5f9d21e4d7d7e7aa20bd228beea,Sarah Wang,sarahwang688@fb.com,2023-04-19 01:25:09,correct scimath typos,1
80,fbb07ef735bc54db103cfce1b53f21730d78afec,Sarah Wang,sarahwang688@fb.com,2023-04-20 12:39:14,make input and output consistent,1
81,e6d8a8b0f5d05125d4cb751aa0bb9fe383677e27,Chris Sidebottom,chris.sidebottom@arm.com,2023-04-04 19:40:51,"ENH: float64 tan using Numpy intrinsics

This builds on top of #23399 and introduces a NumPy intrinsic variant for [float64 tan](https://github.com/ARM-software/optimized-routines/blob/master/pl/math/v_tan_3u5.c), taken from Optimized Routines under MIT license.

CPU features:
```
NumPy CPU features: NEON NEON_FP16 NEON_VFPV4 ASIMD ASIMDHP* ASIMDDP* ASIMDFHM
```

Relevant benchmarks:
```
     <main>           <optimized-routines-tan-f64>
+     82.1±0.03μs        103±0.2μs     1.26  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 2, 4, 'd')
+     81.6±0.03μs        102±0.2μs     1.25  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 2, 2, 'd')
+     82.4±0.08μs        103±0.2μs     1.25  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 4, 4, 'd')
+      81.9±0.2μs        102±0.3μs     1.24  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 4, 2, 'd')
+     81.5±0.03μs        101±0.4μs     1.24  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 2, 1, 'd')
+     81.6±0.04μs       99.9±0.4μs     1.22  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 4, 1, 'd')
+     82.8±0.05μs        101±0.4μs     1.22  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 1, 4, 'd')
+     82.4±0.04μs        100±0.3μs     1.22  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 1, 2, 'd')
+      82.6±0.3μs       97.2±0.3μs     1.18  bench_ufunc_strides.UnaryFPSpecial.time_unary(<ufunc 'tan'>, 1, 1, 'd')
-       200±0.1μs       63.9±0.1μs     0.32  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 4, 4, 'd')
-       199±0.1μs      63.4±0.07μs     0.32  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 4, 2, 'd')
-       201±0.6μs      63.4±0.04μs     0.32  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 2, 4, 'd')
-       200±0.1μs      63.2±0.03μs     0.32  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 2, 2, 'd')
-       200±0.1μs      59.4±0.03μs     0.30  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 1, 4, 'd')
-       201±0.2μs      59.3±0.03μs     0.30  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 1, 2, 'd')
-       200±0.2μs      57.7±0.03μs     0.29  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 4, 1, 'd')
-       200±0.3μs      57.6±0.02μs     0.29  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 2, 1, 'd')
-       200±0.1μs      53.7±0.01μs     0.27  bench_ufunc_strides.UnaryFP.time_unary(<ufunc 'tan'>, 1, 1, 'd')
```",12
82,f6c14d7df6c8194ac2017f3b0f59c5929690088a,Chris Sidebottom,chris.sidebottom@arm.com,2023-04-17 17:04:24,"Intrinsicify negative

Use neg instruction if available, that seems safer, else fallback to
previously created intrinsics which are now available centrally.",5
83,cf4b70141225bcaa30b28267d454d247e968fb85,Chris Sidebottom,chris.sidebottom@arm.com,2023-04-25 22:49:08,Correct Estrin implementation,1
84,3c3abfd4eeed1efe70ff44da267595d6db1ac8fb,Chris Sidebottom,chris.sidebottom@arm.com,2023-05-26 21:15:44,"Re-arrange files to better suit codebase

* Removes npyv_cvt functions in favour of subtraction method
* Moves Estrin implementation to umath
* Minor text fixes to simd.h for negative.h",12
85,11df95ef7c56f1e960fd1eed70c2dfec2cfa2a00,Gregor Riepl,onitake@gmail.com,2023-04-07 09:50:11,DOC: clarify int type constraint in numpy.bincount,1
86,44c1d06663187654e56e6f3ddfe437f31e994a82,Gregor Riepl,onitake@gmail.com,2023-04-08 10:23:26,DOC: clarify upper limit of bincount input dtype,1
87,4fdf66a8d51df75bf563548a9330a2419b20c766,Gregor Riepl,onitake@gmail.com,2023-04-09 17:00:44,DOC: correct text as requested in review,1
88,41436db2790832667f14898bae403d688582e094,Jianyu Wen,jianyuwen2000@gmail.com,2023-04-06 16:08:19,modify the description of tensordot,1
89,2d03d2404da94da8f0d15354c270d7c76f3f52f8,Jianyu Wen,jianyuwen2000@gmail.com,2023-04-07 00:21:17,modify the description of tensordot (#174 of numpy-tutorials),1
90,54e309d07350b2d30617a8ebf2a9d847989f48a1,Jianyu Wen,jianyuwen2000@gmail.com,2023-04-07 00:38:31,modify the description of tensordot (#174 of numpy-tutorials),1
91,ca6a8720170a68089f164b4cb44a08d4fb1d16a2,Jianyu_Wen,jianyuwen2000@gmail.com,2023-04-07 06:01:24,Update numeric.py,1
92,78280b1eff5e95705133efe89266dd90c6ab96c6,Johnnie Gray,johnniemcgray@gmail.com,2023-03-31 00:25:04,ENH: implement einsum with optimize using batched matmul,1
93,b5ffc5b2181987061e6f078f1c2993b1a11f9092,Charles Harris,charlesr.harris@gmail.com,2023-04-02 01:22:16,STY: Break some long lines.,1
94,88950df3438ca77b84154402fbe4de25465e14fb,yuki,drsuaimqjgar@gmail.com,2023-03-30 11:35:33,DOC: Update scalar types in `Py{TYPE}ArrType_Type`,1
95,31737559ad6a43deb6418914f210b820cb20a69d,julian,jpryde44@gmail.com,2023-02-28 03:03:09,"BUG: fix gh-23082, allow Sequence[Union[type, np.dtype]] in ufuncs",1
96,986f5c5f797098bdd286a9e67e17a78343f2fb77,julian,jpryde44@gmail.com,2023-02-28 03:04:46,DOC: Remove warning against using TypeVars in _NestedSequence,1
97,6bfe742a8a978c596203ab7adae61714547ec737,julian,jpryde44@gmail.com,2023-03-04 21:09:33,TST: test cases for gh-23081,2
98,f08fec257dbef098eef08006bb5d36414c8d28fe,julian,jpryde44@gmail.com,2023-03-27 17:57:00,TST: Do not ignore mypy errors,1
99,3382806496fcd724d9b47184fafeebe5655ed16d,Rajarshi Banerjee,rajarshiban13@gmail.com,2023-03-26 07:23:30,alias of np.concatenate added as np.concat #16469,1
100,a23209b390c463a0020861eef3c94f54e7edc949,Rajarshi Banerjee,rajarshiban13@gmail.com,2023-03-27 05:27:59,test added for np.concat (np.concatenate) #16469,2
101,1d0b8306459e5afa13ed54bf2fa25e6c39acacef,Rajarshi Banerjee,rajarshiban13@gmail.com,2023-03-28 20:06:50,"Update numpy/core/multiarray.py

Co-authored-by: Matteo Raso <33975162+MatteoRaso@users.noreply.github.com>",1
102,04099bf9882edda8943ac2b316f97ef142eb642a,Rajarshi Banerjee,rajarshiban13@gmail.com,2023-03-28 20:14:49,#16469 concatenation alias function fixed,2
103,780282fd875d919fd94007c831e7ea6b484aad4d,Rajarshi Banerjee,rajarshiban13@gmail.com,2023-03-28 20:18:42,Merge branch 'concatenate_alias' of github.com:GSAUC3/numpy into concatenate_alias,0
104,df4a8892fcb1893279752cf6daaca02628b1747b,Gigon Bae,gigony@gmail.com,2023-03-09 01:31:45,"ENH: improve dlpack protocol detection

Currently, dlpack protocol detection is done by checking the existence
of `__dlpack__` method on the object's type. This is not enough to
detect the dlpack protocol support, because the method can be defined on
the object itself, not on the object's type.
This patch improves the detection by checking the existence of
`__dlpack__` method on the object itself.

Signed-off-by: Gigon Bae <gigony@gmail.com>",3
105,ecdceca0ebcb3551bd461410cf259c430f13c12f,Raghuveer Devulapalli,raghuveer.devulapalli@intel.com,2022-07-25 20:05:04,ENH: Vectorize FP16 math functions on Intel Sapphire Rapids,3
106,56f424fe800e666dec7c2a8233ef115ce59d599a,Raghuveer Devulapalli,raghuveer.devulapalli@intel.com,2023-03-14 20:26:13,BLD: Link SVML FP16 only for latest assembler,1
107,ae9e178a5aec54b8b7110e18dd253bdb168e2c66,Raghuveer Devulapalli,raghuveer.devulapalli@intel.com,2023-03-14 20:31:24,Fix linter errors,1
108,fcadf6a51da13ff905ea57705e92bc81b1cf3b4b,Raghuveer Devulapalli,raghuveer.devulapalli@intel.com,2023-03-21 19:14:32,TST: Adjust for ULP errors in FP16 math functions,2
109,8a09d6f410a98d6df1304b67f6ad4e25d0ad07c1,Raghuveer Devulapalli,raghuveer.devulapalli@intel.com,2023-03-23 19:25:44,MAINT: Correct svml function signature,1
110,e114179065bd1243c54c4be23f2d58b109d5db55,Raghuveer Devulapalli,raghuveer.devulapalli@intel.com,2023-05-23 20:28:55,Update SVML submodule to latest commit,1
111,c5a4de1f32101c5f99df51dfb19755045f1e1d01,Michael Kiffer,michaelkiffer@gmail.com,2023-03-06 04:38:50,changed formula in random.Generator.pareto doc,1
112,502f623d00cbbbc188bcad9f033f7e74d065e894,jiwaszki,jiwaszkiewicz6@gmail.com,2023-02-27 07:02:37,BUG: fix for np.unique with nan values,3
113,7ef3abf389f0c71fca7bf3a9f7ab8298212c3c45,jiwaszki,jiwaszkiewicz6@gmail.com,2023-02-27 08:49:27,Remove comments,1
114,7e7cd9f5af1273fbabd47983e1c93d1efd88da8e,jiwaszki,jiwaszkiewicz6@gmail.com,2023-03-15 22:47:32,ENH/BUG: optimizations and fixes for np.unique,3
115,bc072e430e4dd853a18b4730ecc13eabe252d829,jiwaszki,jiwaszkiewicz6@gmail.com,2023-03-16 00:17:58,STY: fix lines length,2
116,e58232362243a1701bbe5f7ff8d6477b4484aed0,jiwaszki,jiwaszkiewicz6@gmail.com,2023-03-16 00:23:13,STY: fix lines length 2,2
117,c69fcff4a5d31f158fff6edeeb53753a5db7bad6,jiwaszki,jiwaszkiewicz6@gmail.com,2023-03-16 00:33:27,STY: remove leftover comment,1
118,67f12f3376ce53ff2e953a024248886ce6dee8f7,jiwaszki,jiwaszkiewicz6@gmail.com,2023-05-15 19:25:49,Merge remote-tracking branch 'upstream/main' into jiwaszki/np_unique_nan_bug,300
119,1d02e2ba1b780524b1fb9f9a2c1af9cd4df02312,Rohit Goswami,rog32@hi.is,2023-04-15 18:04:25,TST: Add test for gh-23276,2
120,e12392ddb2b4b8782743f5b01376906933301e3b,Rohit Goswami,rog32@hi.is,2023-04-15 18:07:52,BUG: Simplify and fix gh-23276,1
121,e2288b3aeccd56aff298b7cc58535dda1fcc7934,Rohit Goswami,rog32@hi.is,2023-04-15 18:59:50,TST: Add tests for edge case with data statements,1
122,3d58d8cbce4a6172bc9e798c1ce621b0ef63a673,Rohit Goswami,rog32@hi.is,2023-04-15 19:00:09,MAINT: Add a helper,1
123,a97f209fe33fa5611f9d286a86e70fda230e6784,Rohit Goswami,rog32@hi.is,2023-04-15 19:00:16,BUG: Handle data statements in pyf files correctly,1
124,fec7209fc9c793e83b15b11958ff26a42561c205,Brock,jbrockmendel@gmail.com,2023-02-13 23:08:37,"BUG/API: dt64.astype(object), dt64.item()",6
125,7b605832503da76019e7272d9dca89435f382cb5,Brock,jbrockmendel@gmail.com,2023-02-14 17:27:45,fix tests,3
126,c764ec7842173e416c40be055628aa33097c4242,Brock,jbrockmendel@gmail.com,2023-02-15 00:57:47,fix test,1
127,9ac161791cf3478018509afccc3508a11bc4e8b9,Sebastian Berg,sebastianb@nvidia.com,2023-05-10 20:07:28,"BUG: Fix segfault in timedelta related to int/float

gentype having int/float that goes to array, and array having one
that goes to the scalar doesn't make sense.  So just solve the issue
by making the gentype version always an error.

(Could put it on the datetime, but it seems not useful.
Simply not implementing it isn't great, because `int()` seems to try
to interpret things as a buffer somehow.)",3
128,fa1953571d564c17bf6d43afb2ae8f0bfe8cb218,dshin,b.u.billeder@gmail.com,2023-01-28 13:40:53,DEP: deprecate np.dtype(None),11
129,06d388eedadd77db78d8814cbddeeb5691e75742,dshin,b.u.billeder@gmail.com,2023-03-19 15:16:28,use PyArray_DescrConverter2,5
130,3b80c8b7c4acb72e4c412b4d4504797e486c33b0,dshin,b.u.billeder@gmail.com,2023-03-20 15:46:23,fix Array.__new__(),2
131,5664902b02fe2d83a54074933969201a79a0beda,Sayed Adel,seiko@imavr.com,2023-01-26 02:02:46,"ENH, SIMD: Add new CPU feature group AVX512_COMMON",2
132,e5e50657e1f96d430a89f4323b62fc1dd64f6e7a,Sayed Adel,seiko@imavr.com,2023-01-26 02:03:03,"ENH, SIMD: The meson CPU dispatcher implementation

  Almost gives the same functionality as Distutils/CCompiler Opt,
  with a few changes to the way we specify the targets, also its
  abend idea of wrap the dispatchable sources, instead it counts
  on static libraries to enable different paths and flags.",8
133,8b514f1edf28b01b800b87d4fff7c0c7b34658ea,Sayed Adel,seiko@imavr.com,2023-01-26 02:28:49,Try to install meson feature module,1
134,e1a763a249ec4b9f1ae9aa9666790e161f02d6d5,Dang Pham,dcp237@cornell.edu,2023-01-20 01:18:30,ENH: extend chebinterpolate to 2 and 3-D.,1
135,efb8f20b7b3233905304c1655885ade0e4c19fbf,Dang Pham,dcp237@cornell.edu,2023-01-20 03:04:57,TST: new tests for chebinterpolate,2
136,2a38d3084d8ec3d6fe93cd651e7e22319ca7627b,Dang Pham,dcp237@cornell.edu,2023-01-20 03:45:18,DOC: chebinterpolate better linting,2
137,7aacba9c05c7ea0a05e72f15c03d3d3bee022b2b,Dang Pham,dcp237@cornell.edu,2023-01-20 04:09:37,DOC: another linting attempt,1
138,ab732d0196691ee0fb6e87468b6b776634a5e801,Greg Lucas,greg.lucas@lasp.colorado.edu,2020-04-15 16:28:02,"ENH: Adding __array_ufunc__ capability to MaskedArrays.

This enables any ufunc numpy operations that are called on a
MaskedArray to use the masked version of that function automatically
without needing to resort to np.ma.func() calls.",4
139,63df46060e87ef188d404ee5e8c8f9de31832055,Greg Lucas,greg.m.lucas@gmail.com,2021-04-14 02:06:14,DOC: Adding improvement note for MaskedArray ufunc,1
140,a63e97ae753ae75148ea25081590caada0caf462,Ruth Comer,ruth.comer@metoffice.gov.uk,2022-07-13 14:55:14,nomask in nomask out,1
141,eca1e3c26d2e6a7e50b075005855c0a9a1bb49a9,Ruth Comer,ruth.comer@metoffice.gov.uk,2022-07-16 14:04:53,"BUG: fix ma.minimum.reduce with axis keyword

Fixes the problem reported at
https://github.com/numpy/numpy/pull/21977#issuecomment-1186082534

The reduce method here effectively calls itself with an unmasked
MaskedArray (mask=nomask) and then expects either a MaskedArray or
a scalar.  This change ensures that an ordinary ndarray is
converted to a MaskedArray, following the pattern already used in
mean and var in this module.",1
142,997d27db0f8b665a9528cfa67902300a2d1d9869,Ruth Comer,ruth.comer@metoffice.gov.uk,2022-07-16 13:40:27,"TST: add a test for ma.minimum.reduce with axis keyword

Adapted from the problem reported at
https://github.com/numpy/numpy/pull/21977#issuecomment-1186082534",1
143,bd091a61f531301657e7365f01597e6313b650a6,Greg Lucas,greg.m.lucas@gmail.com,2022-07-23 22:34:52,MNT: Remove __add__ and other unnecessary overrides,1
144,b5b9ad34c8505efe0f15be53521d28ead319b3ef,Greg Lucas,greg.m.lucas@gmail.com,2022-07-23 23:25:50,ENH: Add sign ufunc to masked arrays,2
145,d0ac064248422b1e45e6f751a2c1b7fa8ed33c46,Greg Lucas,greg.m.lucas@gmail.com,2022-07-23 23:37:14,"ENH: Remove masked ufunc power restriction

Now we are calling np.power() in std() which goes through the ufunc
machinery, so we don't want to pass any additional unsafe casting
kwargs that aren't allowed within the masked implementation.",1
146,dd7462022e97778fbc9dd5c73a6358e33342501a,Greg Lucas,greg.m.lucas@gmail.com,2022-07-23 23:42:59,ENH: Add masked invert ufunc,1
147,c638cdc005bef2f674ca68206634a0e081bb14f8,Greg Lucas,greg.m.lucas@gmail.com,2022-07-23 23:56:43,MNT: Remove some restrictions on masked array ufunc implementations,1
148,b35c309f4f5a258cb991ebad211169a69620380c,Greg Lucas,greg.m.lucas@gmail.com,2022-07-24 00:40:45,"FIX: Rearrange handling of ndarray-like ufuncs

Move the np-ufunc check to the top of the routine so we immediately
go to super() when necessary. Before we were returning NotImplemented
if an arg wasn't able to be handled.

Update the arg instance check to defer for everything but another
class that has implemented __array_ufunc__",1
149,de22beb51b2821357a4ed0d73907d56fc183eb7e,Greg Lucas,greg.m.lucas@gmail.com,2022-07-24 19:20:22,FIX: Pass kwargs through ufunc reduce,1
150,9564f27fd03bcade82cfdd6aa350f394b701b961,Greg Lucas,greg.m.lucas@gmail.com,2022-07-24 20:11:33,MNT: Add power ufunc to masked arrays,1
151,a7ba76fb9c8b51c26fa8052ee35f1beccb6f39c1,Greg Lucas,greg.m.lucas@gmail.com,2022-07-24 20:18:20,FIX: add back getmaskarray to __array_wrap__ of masked arrays,1
152,fa6c56f67c0e4725fc6966c5f094633394a27e43,Greg Lucas,greg.m.lucas@gmail.com,2022-07-24 20:21:00,"FIX: view should return the type(self) rather than MaskedArray

This allows for subclasses to be handled correctly",1
153,cbfd86f80a4d42d822132b4e45740d8cca5698e5,Greg Lucas,greg.m.lucas@gmail.com,2022-07-24 20:26:42,FIX: Revert sum and trace overrides from masked arrays,1
154,4a58583f46760f548cb4f27521ff79f548c35681,Greg Lucas,greg.m.lucas@gmail.com,2022-07-24 20:47:18,ENH: Add rint and update round method,1
155,2acf5302f209352653c5a79679e47b4c8ebd5f9c,Greg Lucas,greg.m.lucas@gmail.com,2022-07-24 20:57:08,FIX: Change back partition/argpartition,1
156,e6e80e6f7e27f4fdc4fa29d9803128b540c122c2,Greg Lucas,greg.m.lucas@gmail.com,2022-07-24 21:12:53,FIX: Remove compress updates,1
157,366dfc36a25e7c08dbffbf00388ebbff4f601a93,Greg Lucas,greg.m.lucas@gmail.com,2023-01-02 03:31:03,"MAINT: Remove unused delegate_binop code

This is handled in the C code now within the ufunc machinery.",3
158,9b7bc3cb945e66134524d29a948cd89c60bff09e,Greg Lucas,greg.m.lucas@gmail.com,2023-01-02 21:46:44,"ENH: Add __array_function__ implementation to MaskedArray

Previously, calling np.stack(ma, a) with a masked and normal array
would stack the nd-data from the items, but wrap it in a MaskedArray
class without implementing the mask. This implementation intercepts
the np.func calls and checks whether there is a compatible masked
version that we can use instead. Now, the mask gets propagated with
the stack as expected.",5
159,e6d8f5e179b6fca69aeb7c8673937059c2bcdc72,huangqinjin,huangqinjin@gmail.com,2022-12-11 09:40:56,ENH: Support export PyArray_API and PyUFunc_API from shared libraries,2
160,0ff4e7a752a77f167dba9f07a15dd68495932037,huangqinjin,huangqinjin@gmail.com,2022-12-13 16:31:46,DOC: Document PY_ARRAY_ATTRIBUTE,2
161,3bf639f74c6d181b6ab36e4c94f90889166c4506,Tyler Reddy,tyler.je.reddy@gmail.com,2022-12-10 22:08:14,"BUG: `assert...nulp` longdouble

Fixes #21520

* allow `assert_array_almost_equal_nulp` to properly
handle `np.longdouble` + regression test",2
162,97fb78cb5500f02eeee539927663e38f0450cd10,Tyler Reddy,tyler.je.reddy@gmail.com,2022-12-27 18:42:34,"TST: PR 22770 revisions

* add some larger value test cases--so
far, none of these are failing on a machine
with 128-bit longdouble

* also, adjust the test to enforce a match
within 2 nulp (the truth)--so far, this passes
as well",1
163,6b0ebadff38a65104dd7049a66e467989e284450,Tyler Reddy,tyler.je.reddy@gmail.com,2022-12-28 22:07:05,"TST: PR 22770 revisions

* use a more rigorous `hypothesis`-based test",1
164,2b6521730b998f96aa6caf2f30ce406aaa0e23a1,Aaron Meurer,asmeurer@gmail.com,2022-12-10 01:46:51,"ENH: Add np.linalg.matrix_transpose

Unlike np.transpose(), matrix_transpose() only operates on the last 2
dimensions of an array, and raises an exception if it is 0- or 1-dimensional.

This is a function from the array API specification. See https://data-apis.org/array-api/latest/API_specification/generated/signatures.linear_algebra_functions.matrix_transpose.html",2
165,b9b32b0719895b98303682f161d053242d90f1f8,jpbianchi,jpbianchi@gmail.com,2022-12-03 18:39:05,BUG: savez raises exception for masked arrays,2
166,e4249d2123e0a0a13402edb1a9769652f1ad4a20,Jean-Pierre Bianchi,jpbianchi@gmail.com,2022-12-03 19:32:59,"Update numpy/ma/tests/test_core.py

Co-authored-by: Rohit Goswami <r95g10@gmail.com>",1
167,0d2a79d4fa9162491d4aa23fd9bbd1b5c4144576,Jean-Pierre Bianchi,jpbianchi@gmail.com,2022-12-03 19:33:08,"Update numpy/ma/tests/test_core.py

Co-authored-by: Rohit Goswami <r95g10@gmail.com>",1
168,f39f3d1365dae0caa4adf3fbcd1f0e8c2e64a089,Jean-Pierre Bianchi,jpbianchi@gmail.com,2022-12-03 19:42:11,"Update numpy/ma/tests/test_core.py

Co-authored-by: Rohit Goswami <r95g10@gmail.com>",1
169,7de61d8d1a3b02bbdb5d13297b0692f8d40a5ae1,jpbianchi,jpbianchi@gmail.com,2022-12-04 11:29:04,BUG: savez raises exception for masked arrays - fixed match pattern in test & tested,1
170,2c0f8634f824800b339f0728d6dd25a4f7d3734f,Inessa Pawson,inessapawson@gmail.com,2022-12-02 20:36:18,Create development_ghcodespaces.rst and add the doc outline,1
171,18bc0524849aabcce02716da104b963dedcaebff,Inessa Pawson,inessapawson@gmail.com,2022-12-03 04:42:40,"Add reviewer feedback

Co-authored-by: Craig Peters <craiglpeters@github.com>",1
172,eebfe7eaf357cb336c69caaaa9baea1d26b4f4e5,Inessa Pawson,inessapawson@gmail.com,2022-12-03 04:43:29,"Add reviewer feedback

Co-authored-by: Craig Peters <craiglpeters@github.com>",1
173,928f0a246a00629df85d11de32b0d9a32106e415,Inessa Pawson,inessapawson@gmail.com,2022-12-03 04:43:46,"Add reviewer feedback

Co-authored-by: Craig Peters <craiglpeters@github.com>",1
174,68da466f99108086339fdc0d1c7ff0b08aba545b,Inessa Pawson,inessapawson@gmail.com,2022-12-03 04:44:00,"Add reviewer feedback

Co-authored-by: Craig Peters <craiglpeters@github.com>",1
175,b873b15e867b9b0c8f65d466070d30125e8a65fd,Inessa Pawson,inessapawson@gmail.com,2022-12-03 04:44:22,"Add reviewer feedback

Co-authored-by: Craig Peters <craiglpeters@github.com>",1
176,11c3a70bffc9cea70bf82c6b21448f95f7d45712,Inessa Pawson,inessapawson@gmail.com,2022-12-03 04:44:57,"Add reviewer feedback

Co-authored-by: Craig Peters <craiglpeters@github.com>",1
177,256efb3f876915e37cf477350d26ab0bf0d73d90,Inessa Pawson,inessapawson@gmail.com,2022-12-03 04:45:05,"Update doc/source/dev/development_ghcodespaces.rst

Co-authored-by: Craig Peters <craiglpeters@github.com>",1
178,a7f66c1df2a159f0fdbf5d83d69b2781c99d36a7,Inessa Pawson,inessapawson@gmail.com,2022-12-03 05:27:39,Clean up the formatting,1
179,f44534282a274d767aa0dacd14e186e1241bc189,Inessa Pawson,inessapawson@gmail.com,2022-12-03 05:52:01,Add links to the references,1
180,0577b75bc79521d57cbdc980cef50f19ad8fb244,Inessa Pawson,inessapawson@gmail.com,2022-12-03 06:30:04,Add content to the FAQs and troubleshooting section,1
181,d124a034d599010a8514566c0964cc5837710b5c,Inessa Pawson,inessapawson@gmail.com,2022-12-03 13:11:15,Merge branch 'numpy:main' into ghcodespaces-docs,3
182,a69d6a9bd8aaddc5b56e855f46f9503ebd5ca99d,Inessa Pawson,inessapawson@gmail.com,2022-12-03 16:20:28,Clean up the formatting,1
183,f45ffe854bb2e3906d66e2e926cb770bfeddcd96,Inessa Pawson,inessapawson@gmail.com,2022-12-09 17:35:59,Create 'ghcodespaces-imgs' folder and add image for the quickstart,1
184,75d87becf99e8894ae3e5db4aecdfa0923ef7c9f,Inessa Pawson,inessapawson@gmail.com,2022-12-09 17:43:09,Clean up the formatting of some sections,1
185,48f7c0b3c16a2f7bda18eed6c76ffef000dfb218,Rohit Goswami,rog32@hi.is,2022-11-23 05:25:15,BUG: Hotfix for handling common blocks in f2py,1
186,6398addb9fed15f38368bdcca6fc25b58caf287e,Rohit Goswami,rog32@hi.is,2023-01-29 23:01:50,TST: Add a test for gh-22648,2
187,3c06dd4b7afe569e90c4ab2ee0bef87993e90971,mfkasim1,firman.kasim@gmail.com,2022-11-17 16:04:11,BUG: Increase accuracy of log1p for small inputs,2
188,c57b5a2fecefac096c0bf01fae3a7293f90be621,mfkasim1,firman.kasim@gmail.com,2022-11-18 11:06:17,BUG: Handle overflow and underflow for log1p complex,2
189,59ab5bd034216ff70593db57e40dd33e9306bedc,mfkasim1,firman.kasim@gmail.com,2022-11-18 11:09:43,STY: split lines that are too long for log1p complex test,1
190,efd5c8242c5781204bbb69a466ddb582cc0f4a5c,mfkasim1,firman.kasim@gmail.com,2022-11-18 11:13:41,TST: Added infj test for log1p complex,1
191,d559bcad2cc8f342d4240e6ce2f202deabb71ad4,mfkasim1,firman.kasim@gmail.com,2022-11-18 11:22:44,TST: Added decimal arg in testing small numbers,1
192,c1729cf5c562bd507660709348e4b634ebe0e132,mfkasim1,firman.kasim@gmail.com,2022-11-18 12:27:59,TST: Using assert_array_almost_equal_nulp for small numbers,1
193,3ad9ec34c4ecd27c2cd55a42f355a0919fd20a9f,mfkasim1,firman.kasim@gmail.com,2022-11-18 14:25:30,STY: Put a space after a comma,1
194,96542b535f6547bad5c309ba525acd2e67dd4979,Sebastian Berg,sebastianb@nvidia.com,2022-11-09 14:22:06,"API: Disallow promoting timedelta64 with other types

None of that makes sense, so lets get rid of it!",2
195,6b73f2d6c7e4989ffe4e968abd99e2285712da5e,Sebastian Berg,sebastianb@nvidia.com,2022-11-10 15:25:39,"API: No, timedelta64 is NOT an integer...

And yes, the printing elif logic thought it was...",2
196,7c552fb11686bda02c89a3ec4f47477bf8ca6992,Sebastian Berg,sebastianb@nvidia.com,2022-11-10 15:26:07,"MAINT: Doing float comparisons in DivisionSafeDomain only makes sense for floats

Sure, it barely makes sense there as well, but at least this way we can
bypass it and only do the ""nonzero"" check, which also makes sense for
timedelta64.

And we need timedelta64 to work, because `np.nanmedian` uses the Masked
median internally, and that ends up here :tada: (sarcasm).",1
197,6d89b69296f8c3299cdf3d0e808039d8113080f7,Sebastian Berg,sebastianb@nvidia.com,2022-11-10 15:27:53,"TST: Fix up tests which relied directly on int -> timdelta ""promotion""",2
198,21d27756dbcbb4f7d86095cf54179631c5f3d5cd,Sebastian Berg,sebastianb@nvidia.com,2022-12-13 14:21:04,MAINT: Remove now unnecessary type-resolution path,1
199,fdbda5881b736afc4f4bd32062c826e71d4d2871,Sebastian Berg,sebastianb@nvidia.com,2022-12-13 15:46:52,DOC: Add release note for timedelta/datetime promotion deprecation,1
200,baa3b37ae4c2c78124a36d5bf33e8598ceed9430,Sebastian Berg,sebastianb@nvidia.com,2022-12-13 15:47:05,"TYP,WIP: Try to fix up the typing for datetime/timedelta promotion deprecation",4
201,981d3a71daf36a14e77e8d37694937c8836510ae,Sebastian Berg,sebastianb@nvidia.com,2023-05-15 14:44:52,TST: fixup test for time promotion change,1
202,a4d4f0cb6eee7650f3103deb78131da69bb857d2,Sebastian Berg,sebastianb@nvidia.com,2023-05-15 15:53:37,"BUG: Add _ArrayLikeTD64_comp_co rexport, thanks to Bas",1
203,cd87a7814a596ea74d1c79cd0e864540dab3b79f,Sebastian Berg,sebastianb@nvidia.com,2023-05-15 17:35:24,TYP: Fixup typing and typing tests,2
204,61213db92720db18f9773fb5e1322db7df1e15d1,HOLZSCHUCH Nicolas,nicolas.holzschuch@inria.fr,2022-11-09 13:35:52,"getdata relies on the _data member. In some cases, _data can exist, but
not be a sybtype of ndarray. We check for that.",1
205,eb31a6aab27028d4a65d5965e8a1339809547488,HOLZSCHUCH Nicolas,nicolas.holzschuch@inria.fr,2022-11-09 13:50:38,Fixed lint issue with multiple spaces after = sign,1
206,3129ca6bdf820b24552e78245c9b0c92e564a581,Christian Sachs,sachs.christian@gmail.com,2022-11-01 21:27:58,ENH: add `out` parameter to arange,8
207,450b9c6762988643a9736fc06d5d572a2fca8027,Ganesh Kathiresan,ganesh3597@gmail.com,2020-10-20 09:52:12,ENH: Changed repr of np.bool_,1
208,ab7d20b8dbf2b1f31ff945e95640906d300a1cc1,Ganesh Kathiresan,ganesh3597@gmail.com,2020-10-20 10:50:43,ENH: Used raw boolean value,1
209,9022a0b2629c8a1584774064ace51bc57b259695,Ganesh Kathiresan,ganesh3597@gmail.com,2020-10-20 16:55:19,ENH: Refactored to use PyUnicode_FromString,1
210,1b990dec5b931cf929f07bd4e27ad5e664dd8df8,Ganesh Kathiresan,ganesh3597@gmail.com,2020-10-21 13:36:32,ENH: Fixed doc-string,1
211,3e0a802de58cbeb41ce133642c604b7e16ec4272,Ganesh Kathiresan,ganesh3597@gmail.com,2020-10-26 13:40:42,ENH: Added release notes (#17592),1
212,cdd00f4b22b2e0d068fa4b23d71535a563c0bd56,Ganesh Kathiresan,ganesh3597@gmail.com,2020-10-27 13:42:29,ENH: Fixed release notes `np.bool_` repr (#17592),1
213,d7e5d8f91685328b9b4f029beaa1b55ae58460f6,Eric Wieser,wieser.eric@gmail.com,2020-11-01 22:15:43,Update doc/release/upcoming_changes/17592.improvement.rst,1
214,97895b502f1f4fbd54f7660befe7e2e95f6c606d,Ganesh Kathiresan,ganesh3597@gmail.com,2020-11-20 09:58:00,ENH: Changed repr of ints,1
215,0d857153f36e5052bf0abfd3c65bc0292de0c48c,Ganesh Kathiresan,ganesh3597@gmail.com,2020-11-20 10:14:49,ENH: Changed repr of ints to use tp_name,1
216,b785b1f3e595db199e15f85a4b6fa314857c8f35,Sebastian Berg,sebastianb@nvidia.com,2022-09-14 13:20:34,WIP: Get to the NEP 51 state (and try to figure that out...),1
217,751f5499ebf328f80d2307a268402c902ca11e5f,Sebastian Berg,sebastianb@nvidia.com,2022-09-14 20:00:15,TST: Fixup tests for repr changes,3
218,50bc643b4f3f71648e1e7727db3fee26cef1aaf4,Sebastian Berg,sebastianb@nvidia.com,2022-09-19 13:42:06,"TST: Some more test fixups for repr changes

still quite a few to do, and there are some things that we need to
figure out...",5
219,3c242de94b9179ecffcee815410516f59720f5c7,Sebastian Berg,sebastianb@nvidia.com,2022-09-19 13:51:52,"TST: STrengthen test on newer Python versions

It seems older Python versions rounded `str` sometimes, I do not
think this is strictly true anymore.
IF this is wrong on certain systems, we need to rethink some things!",1
220,60735f588a5949f14f6469093b3595cae5fcc287,Sebastian Berg,sebastianb@nvidia.com,2022-09-27 13:48:46,"Fixup tests, repr, and guard against using full repr in array printing",5
221,1de2078394ab87d28b6e9c575394c772e1d6a95c,Sebastian Berg,sebastianb@nvidia.com,2022-09-29 14:58:23,WIP: Continue with refactoring more...,1
222,d990d99c94806b10bb4ffb73795d695f1008b5e2,Sebastian Berg,sebastianb@nvidia.com,2022-10-12 15:10:45,WIP: Refactor array formatter with a new `get_formatter`,1
223,dc45bb3168415d3984227bc8749e68d9bba58960,Sebastian Berg,sebastianb@nvidia.com,2022-10-14 13:39:56,ENH: Fixup records and void scalar printing,5
224,f3557d8b52ed53f11b83b17f7d3fbe849ca6b8c6,Sebastian Berg,sebastianb@nvidia.com,2022-10-14 15:22:27,ENH: Only print type information when helpful for MA fill value,3
225,44fac145bb3fd5b6f9324990c46e41bc03768b45,Sebastian Berg,sebastianb@nvidia.com,2022-10-18 09:56:09,"API: Switch `ndarray.tofile` back to defaulting to `str()` usage

`tofile()` should probably be improved in either case, but this changes
it back to using `str()` in order to fix storing of longdouble numbers.
Note that, it still goes via Python float for float32, which is OK
but maybe not ideal (stores more digit than useful, which may be misleading).

This also changes `object` arrays, and fixes(?) string/bytes arrays since
these would previously print with quotes or `b''` prefix (which seems just
undesired).

The use of `repr` may have been useful/desired on Python 2 for floats, but
Python 3 makes no real distinction between both.",1
226,7f3f318fa73e8480716225f3f144f07fd026f06d,Sebastian Berg,sebastianb@nvidia.com,2022-10-18 10:30:13,TST: Fixup tests to make windows/32bit systems and linter happy,4
227,8000b5b156cab3743fc496a9ef1f2745fb68693d,Sebastian Berg,sebastianb@nvidia.com,2022-10-21 13:03:08,"Adapt format to not block s and r format codes

Not sure that is really necessary, but I think empty string for
`s` should be OK in practice (in principle `!s` exists in formatting
syntax which calls `str` explicitly...)",4
228,5e54fabe9f57064c282addff24a92c36dc652566,Sebastian Berg,sebastianb@nvidia.com,2022-10-21 14:39:42,WIP: Fixup arrayprint for scalar values,1
229,a7510a9d1e0b5ade4daff15c8f773092f2ec84d0,Sebastian Berg,sebastianb@nvidia.com,2022-10-24 12:08:19,"MAINT: Switch to also have str explicitly, fixup MA and forward str/repr to scalar

Most importantly, use the scalar `str()` for formatting str/repr of
""array elements"" when a format code is given (for floats).
The reason is that floats to print differently currently and falling back is
simplest.",2
230,387e26ada8da1305a7ee548a4f7ee00741f8aa63,Sebastian Berg,sebastianb@nvidia.com,2022-10-24 12:33:09,"DOC: Update reference to pass refguide

This makes things pass even though there should be a massive amount
of types added in other places, so that it is not complete.

But I think this may be useful, since the complete change would be
quite verbose...

One thing to note may be that `np.float64(nan)` currently does not
round-trip correctly of course, this would require adding `np.`
to the repr (or quotes).",9
231,9b3ae9ff113ac8b6c8e10fd6278ca2225bdf7072,Sebastian Berg,sebastianb@nvidia.com,2022-10-24 12:47:01,STY: Fix linter,1
232,9a64758ab0fc860a105d7ceaea1d37a77e1ad50b,Sebastian Berg,sebastianb@nvidia.com,2022-10-24 13:29:55,"BUG: Fixups for last changes to make CI pass

I had tested the refguide mainly (the functions part only), which missed
a lot of smaller errors in the last iteration...",3
233,eea188615fb398365155456bc001150cfd27cb93,Sebastian Berg,sebastianb@nvidia.com,2022-10-24 15:41:48,"DOC: First small refdoc update (very verbose update required, too large for PR)",1
234,79482bb025ca37c7fad6c359a6868f5529a93cc0,Sebastian Berg,sebastianb@nvidia.com,2022-10-24 16:23:59,DOC: Remove outdated release note (eventually need new referencing NEP),1
235,decdee0c4605cc95ec6f8e067ec5bef84a5b4269,Sebastian Berg,sebastianb@nvidia.com,2022-10-24 17:50:33,"DOC: Fixup docs; only ""big"" changes not all scalars

As said before, all scalars would be noisy, while this gives at
least an idea of what is off (and makes CI happy)",2
236,899ee42a09f2f9f62ec48e5bc8790443ee727456,va-mai-daly,mai.daly6@gmail.com,2022-10-12 09:31:22,Update function_base.py,1
237,9be9ad4eb49fea8ea24bca845bf714f25e23632a,va-mai-daly,mai.daly6@gmail.com,2022-10-12 11:51:50,add dtype parameter to append function,1
238,38bbc8af86f11a10d93e910a4424ec943865b11b,va-mai-daly,mai.daly6@gmail.com,2022-10-12 13:08:29,add dtype parameter to append function,1
239,29cbd356f7cf1b797cc98fa8b5fc92533670ba4d,mai-daly,mai.daly6@gmail.com,2022-10-12 22:43:46,add dtype parameter to append docs,1
240,5c31c5df4dc80c95b508f32f06d276f46953a0e2,mai-daly,mai.daly6@gmail.com,2022-10-13 09:18:39,delete dtype check and depend on passing it concatenate function,1
241,054904f202aabac1501e011b1663d0f2dce59db8,Matteo Raso,matteo_luigi_raso@protonmail.com,2022-10-08 05:29:54,"ENH: Added mant_dig attribute to finfo (#22333)

The normal attribute for getting the mantissa is
nmant, but this is always off by 1. However, other
packages (like sympy) require the nmant attribute,
so we would end up breaking code downstream if we
changed it. Instead, I introduced a new attribute
called mant_dig, as member Sebastian Berg suggested.
In the documentation for finfo, I added a small
disclaimer saying that nmant should not be used
anymore. Since nmant is going to have to be
deprecated eventually, I also added a small
disclaimer that nmant is inaccurate, set for
depreciation at some point in the future,
and that mant_dig should be used from here on out.",2
242,441134c2aaa7144f4f767d8c253af136c92cc4a6,Matteo Raso,matteo_luigi_raso@protonmail.com,2022-10-12 19:39:45,Fixed note.,1
243,706a20c740c95cf5e874b310e371b662636ad602,Matteo Raso,matteo_luigi_raso@protonmail.com,2022-10-12 19:42:58,"Reduced line length

The linter doesn't like it when lines are too long.",1
244,a6189fddecd49e6dfd50a11c2a1a65f587762c57,Matteo Raso,matteo_luigi_raso@protonmail.com,2022-11-11 20:29:40,Fixed note,1
245,1208d9d08bd1a6c918f61a4586ddbf737a653903,Matteo Raso,matteo_luigi_raso@protonmail.com,2022-11-11 20:36:03,Fixed note,1
246,003c95b6e91ce861773ce385899ab484fbf4b29b,UCSC,ucsc@UCSCs-iMac.local,2022-09-16 18:41:49,"DOC: Update compress_cols,compress_rows

issue-22269 compress_cols

issue-22269 compress_cols

issue-22269 compress_cols,compress_rows",1
247,cd90fc0dff099664154a3bb3ed3131b807ca7bc4,UCSC,ucsc@UCSCs-iMac.local,2022-09-16 19:36:18,"issue-22269 compress_cols,compress_rows,compress_nd",1
248,b12dc8b81c4a175f727c630f69ad19c1190c3563,UCSC,ucsc@UCSCs-iMac.local,2022-09-17 01:00:34,"issue-22269 compress_cols,compress_rows,compress_nd,cov",1
249,0b36f5cc4492c200c813712ed110264572e228e3,UCSC,ucsc@UCSCs-iMac.local,2022-09-17 01:25:36,"issue-22269 compress_cols,compress_rows,compress_nd,cov,compressed",2
250,865cd2406cfa493343a011c199bdbee1301a1657,UCSC,ucsc@UCSCs-iMac.local,2022-09-17 02:10:42,"issue-22269 compress_cols,compress_rows,compress_nd,cov,compressed,putmask,ediff1d",2
251,86ebff02ec64b0f408d18cbd8e68d20627e0b77e,UCSC,ucsc@UCSCs-iMac.local,2022-09-17 02:17:38,"issue-22269 compress_cols,compress_rows,compress_nd,cov,compressed,putmask,ediff1d",1
252,bb6c0abc5a51ae667f3b13f6eb393094ac7cc81d,UCSC,ucsc@UCSCs-iMac.local,2022-09-17 02:21:37,"issue-22269 compress_cols,compress_rows,compress_nd,cov,compressed,putmask,ediff1d",2
253,794dad3edfa45833ad605fad2fbfe42c9c6ec240,UCSC,ucsc@UCSCs-iMac.local,2022-09-17 03:05:59,"issue-22269 compress_cols,compress_rows,compress_nd,cov,compressed,putmask,ediff1d,power,max",1
254,4a8c9572969a662a839f52b9a5a4f7fdc8408879,UCSC,ucsc@UCSCs-iMac.local,2022-09-17 03:16:59,"issue-22269 compress_cols,compress_rows,compress_nd,cov,compressed,putmask,ediff1d,power,max,min",1
255,82197a60f53c78cbb55e34a44dcb06e168fa0fec,UCSC,ucsc@UCSCs-iMac.local,2022-10-21 22:59:33,last edit,1
256,ca6ad6138e8ccaeb35cc963714fddd452de0d9c5,Mukulika,60316606+Mukulikaa@users.noreply.github.com,2023-03-13 06:16:39,Merge branch 'main' into my334sol,300
257,26af068f4d6cd0950fb72bf7cb55fa1c494d141c,Kentaro Kawakami,kawakami.k@fujitsu.com,2022-09-15 14:50:20,ENH: Add SVE flags and args,6
258,693861a2e198832f766e761d05a9051d9c39592f,Kentaro Kawakami,kawakami.k@fujitsu.com,2022-09-16 00:03:44,"ENH, SIMD: Add SVE intrinsics",10
259,b910144fe323f5a2bec246d1a09ac5694850e1d3,Kentaro Kawakami,kawakami.k@fujitsu.com,2022-10-03 12:04:27,"ENH, SIMD: Add SVE simd functions",10
260,cb3c08f23f62546d718c368970a7026ecf6a8424,Kentaro Kawakami,kawakami.k@fujitsu.com,2022-09-16 00:04:18,TST: Add test for SVE,3
261,a3fee10774323388d3ce2ee609de92bfae4b55a5,Kentaro Kawakami,kawakami.k@fujitsu.com,2022-09-16 00:44:27,"ENH, SIMD: fix coding style",1
262,a200644eeb1f21321277ec1b6cd07a53e1b39a8a,Kentaro Kawakami,kawakami.k@fujitsu.com,2022-10-03 15:04:09,ENH: SIMD: rebase to 86cd584b81385508f7d939fc66393a6a27f02659,3
263,40246bcd974f9149951ffb2cfbc69ced8655281a,Kentaro Kawakami,kawakami.k@fujitsu.com,2022-10-03 15:34:01,ENH: SIMD: add support for SVE 256,4
264,99ca3cd1209d1320bed75981be9919ba6f7d0a3d,Kentaro Kawakami,kawakami.k@fujitsu.com,2022-10-03 15:34:01,"ENH, SIMD: Add SVE intrinsics",3
265,a5dfd6839140376aef9b54e94d4efb56a79bff85,Rohit Goswami,rog32@hi.is,2021-10-05 01:11:43,ENH: Start refactoring f2py front-end,1
266,1eacfb0b7ac99a13c2c1a0fd4effe42c4fda84f8,Rohit Goswami,rog32@hi.is,2021-10-05 01:12:28,ENH: Start using logging,1
267,173a7bbcd575f0c4c80540ed54b9dd055ded0ff3,Rohit Goswami,rog32@hi.is,2021-10-05 01:55:26,ENH: Add more options for the new front-end,1
268,52762a966d13f970509c166cd6731e5615a29bde,Rohit Goswami,rog32@hi.is,2021-10-05 03:09:39,ENH: Half the f2py options,1
269,c0689cb6cb7554c7ae6e999546878572da096f4e,Rohit Goswami,rog32@hi.is,2021-10-18 19:12:28,ENH: Switch to using f2pyarg,5
270,44bec87edaa9221bcf8d324131e97629c0140824,Rohit Goswami,rog32@hi.is,2021-10-18 19:12:58,ENH: Add f2py frontend stuff,1
271,81b14f43a07a8c03cd2b544729c897523e2671d3,Namami Shanker,namami2011@gmail.com,2022-06-30 19:28:54,FIX: f2pyarg --build-dir create directory if not present,1
272,7c68149d1c43546dbcf32d9c6c5d4cb97fad4544,Namami Shanker,namami2011@gmail.com,2022-06-30 19:50:53,MAINT: Move f2pyarg helpers to service,2
273,9ab806a5f7464047f4157d978eebef7b174c94c1,Namami Shanker,namami2011@gmail.com,2022-06-30 20:00:42,FIX: Fix incorrect imports in f2pyarg service,1
274,c70272c324e36ab705fe8591930755fe45354c1b,Namami Shanker,namami2011@gmail.com,2022-06-30 20:34:02,MAINT: f2py check if input f2cmap file exists,1
275,9fde95331fa487450efc97dfcc389abb8be7bb6d,Namami Shanker,namami2011@gmail.com,2022-06-30 21:20:29,MAINT: Fix --wrap-functions docs,1
276,4c4b99aeaafd46b5a4b30e0e5a5026a46707a05f,Namami Shanker,namami2011@gmail.com,2022-07-02 12:58:37,MAINT: f2pyarg Remove unnecessary flags,1
277,bbb44a7e1fdc0ddd480caa38c48282e66023f27e,Namami Shanker,namami2011@gmail.com,2022-07-02 12:59:15,MAINT: f2pyarg remove unnecessary flags,1
278,d26bd6a342a5fb95a7afb96795dc9a13f086172a,Namami Shanker,namami2011@gmail.com,2022-07-02 13:00:05,MAINT: f2pyarg fix default values,1
279,9ce21405423c3049971dbd985869b7b1aeb5c360,Namami Shanker,namami2011@gmail.com,2022-07-02 13:01:07,FIX: f2pyarg transfer -h flag to generate_wrappers parser,1
280,bcf79029f639fc5b0c3f4edb527e9367562d17d4,Namami Shanker,namami2011@gmail.com,2022-07-02 13:05:57,ENH: f2pyarg add file segregation method,1
281,568b94dcf4535ffc568c3255434d7c88d71deb3d,Namami Shanker,namami2011@gmail.com,2022-07-02 13:11:29,ENH: Create temp dir for null builddir value,2
282,b3d8a2b9ac7cac97e68a691a0ac77f48789003b8,Namami Shanker,namami2011@gmail.com,2022-07-02 13:14:02,ENH: Chop callcrackfortran and move it to service. Add other helpers.,2
283,4180fcae262d33da2a1cde5ec1d44706d9ab55e4,Namami Shanker,namami2011@gmail.com,2022-07-02 13:15:45,ENH: Initial f2pyarg main arg process function,2
284,a0eab32cc58118eb281078bb72d336223610d244,Namami Shanker,namami2011@gmail.com,2022-07-03 08:13:49,FIX: fix imports,1
285,528dc4ff2557efef73008c85f6aff8a4c5ecb8f4,Namami Shanker,namami2011@gmail.com,2022-07-03 08:22:22,FIX: Set default verbosity to true like f2py2e,1
286,d2a72b1f97f3d21097d1b1dad07373ea308aaa09,Namami Shanker,namami2011@gmail.com,2022-07-03 09:54:08,MAINT: Remove unneccessary imports,1
287,475f4df3e60a8eb5ffcc355cdd543dafbec71a04,Namami Shanker,namami2011@gmail.com,2022-07-03 09:54:38,ENH: Handle overwrite-signature flag,1
288,aa3d300927a15e17d43796c9b75ea676925882e4,Namami Shanker,namami2011@gmail.com,2022-07-04 10:57:04,ENH: update auxfuncs,1
289,885c7727c123d24effbc7893d3e1c4345c05cf3b,Namami Shanker,namami2011@gmail.com,2022-07-04 11:32:13,ENH: Segregate pyf files,2
290,f39eb6d01dc3ab9aa3bd5557d3bcd550506ab5e4,Namami Shanker,namami2011@gmail.com,2022-07-04 12:26:30,MAINT: Refactoring,2
291,1df8ee2476fb1a0266738db05c15e1843a31f47e,Namami Shanker,namami2011@gmail.com,2022-07-04 12:27:36,MAINT: Rename _parse_postlist to _check_postlist,1
292,15be187957cb4c1e7d15f47f9622aaedae1a18b5,Namami Shanker,namami2011@gmail.com,2022-07-05 12:21:53,"Revert ""ENH: update auxfuncs""

This reverts commit b334020a6b4d57831b7963826abf731fef6d3d5e.",1
293,e13faa1fb98883fff13c539c3541395cc9ba6632,Namami Shanker,namami2011@gmail.com,2022-07-05 13:21:02,FIX: Accept array of debug options rather that boolean flag,1
294,28e5bebaea0e8f0bf87cdaccb76e96fbc46fab0c,Namami Shanker,namami2011@gmail.com,2022-07-05 13:22:27,FIX: Default module name and default build directories,1
295,810aad7012382aea806880fc11f07f2bf90161ea,Namami Shanker,namami2011@gmail.com,2022-07-05 13:23:17,MAINT: Fix typo and send pyf files to generate_files,1
296,bc8dfa947e457683413f0243bf3638a789a88b1e,Namami Shanker,namami2011@gmail.com,2022-07-05 13:25:41,ENH: Send all required options to rules file,2
297,fc68223ea3778e09f97b008eb329e6179fb58f8b,Namami Shanker,namami2011@gmail.com,2022-07-05 13:26:58,MAINT: Refactoring service,2
298,be8a4b06159ba65286c772ec60a39b164b8f1799,Namami Shanker,namami2011@gmail.com,2022-07-08 08:20:35,MAINT: Refactor for -c flag,1
299,d7ad3ecc3520367c37a342a255fbf856cceef4ba,Namami Shanker,namami2011@gmail.com,2022-07-08 08:21:53,FIX: Change -c flag default val,1
300,7409f5a237b5ec0fbf3eb670b0d34d0a8c257f96,Namami Shanker,namami2011@gmail.com,2022-07-08 08:23:04,ENH: Remove alternative macro flags for easier handling,1
301,da01606c7701f92dfa451d3630da0fdf1e1bbb2c,Namami Shanker,namami2011@gmail.com,2022-07-08 08:23:49,ENH: Add action class to process macros,1
302,c2f600f010f6c343e4d706a789943699e4efd983,Namami Shanker,namami2011@gmail.com,2022-07-08 08:24:34,FIX: BoolAction string has no contains method error,1
303,fd587884b89aa32fc74e94a3a9cf433460a9ed6d,Namami Shanker,namami2011@gmail.com,2022-07-08 08:25:18,FIX: NPDLinkHelper setattr failure,1
304,526d37407c238385197c5dab7c019d0f775ac0d6,Namami Shanker,namami2011@gmail.com,2022-07-08 08:26:06,ENH: Add initial -c flag handling,1
305,70352a375531b8b01b7efec6a86a48b199416e80,Namami Shanker,namami2011@gmail.com,2022-07-08 08:28:41,ENH: Add get_f2py_modulename function from np.distutils,2
306,c8fc7495518c5aaaa70589d6ac9472e48810e02a,Namami Shanker,namami2011@gmail.com,2022-07-08 08:30:21,FIX: _check_postlist verbosity error,1
307,15b7baa586caad6e84c9d8a96056f668ca12507b,Namami Shanker,namami2011@gmail.com,2022-07-08 14:23:45,FIX: Change module_name to module,1
308,dea01ca29ebff3641f3adf8e999f418398993813,Namami Shanker,namami2011@gmail.com,2022-07-08 15:19:10,FIX: Parse skip and only arguments,1
309,392101b4de09144e562e17b1911aeb5c412d9257,Namami Shanker,namami2011@gmail.com,2022-07-08 15:23:30,FIX: Segregate and return path of input files,1
310,50e2c8585f2ae5fe387e49060a6c57f15e73a050,Namami Shanker,namami2011@gmail.com,2022-07-11 14:55:11,FIX: data type of f77flags and f90flags,1
311,9f3efd172992ed0237bf42f1f0e6227aa3d19d4f,Namami Shanker,namami2011@gmail.com,2022-07-11 14:55:54,FIX: Return signature file,1
312,e902559009fe1e39ff6179ecdc3dc251e7740338,Namami Shanker,namami2011@gmail.com,2022-07-11 15:00:36,MAINT: Refactor file segregation,1
313,bb41e540d5a1bac7990545ce10ad4ebb74c1d646,Namami Shanker,namami2011@gmail.com,2022-07-11 15:03:40,ENH: Support for -include<header> flag,1
314,39ef20589fa5cbaf2ef2a53625c4a5bac8742c3c,Namami Shanker,namami2011@gmail.com,2022-07-11 15:10:02,MAINT: Refactor wrapper generation settings,1
315,5d9f60717d6fa5f155b1e7f713e8ca9576dd5784,Namami Shanker,namami2011@gmail.com,2022-07-11 15:10:43,FIX: Import f2py2e rather than f2py for run_main,1
316,9ad8f8183354706f141a7932686490bf1085d639,Namami Shanker,namami2011@gmail.com,2022-07-11 15:12:21,ENH: Generate comp flagsfrom parser namespace,1
317,02e9ecd5b109da2f645cc2df3e1f4ab14cb57e21,Namami Shanker,namami2011@gmail.com,2022-07-11 15:15:09,ENH: Add f2pyarg distutils compilation,2
318,19b39484e754f5c54bac3fe0a9b164d98bc4f2f0,Namami Shanker,namami2011@gmail.com,2022-07-11 15:15:42,FIX: link_resource default value,1
319,f10121185628716f72c1a2fb531d8a1333b71dd7,Namami Shanker,namami2011@gmail.com,2022-07-11 15:16:04,ENH: Add util file for f2py,1
320,fc2a70871745f08dc4257c4ead77ace735c2147c,Namami Shanker,namami2011@gmail.com,2022-07-11 15:16:43,MAINT: Minor refactoring,1
321,2e38e83889a8bf4432ffb5530badf383002a2c82,Namami Shanker,namami2011@gmail.com,2022-07-12 14:01:20,FIX: Import f2py2e instead of f2py,1
322,bbad3ea423e21f207b9acd9fc5d2cc9455dea0c9,Namami Shanker,namami2011@gmail.com,2022-07-12 14:03:14,MAINT: Remove unused imports,1
323,80192f9042b66bac3f1df185426de2eac8c1bf30,Namami Shanker,namami2011@gmail.com,2022-07-12 14:34:32,ENH: Use context manager for build_dir management,3
324,d0f7d3eb5de97f2a4ed95f70ec477288d6111f8e,Namami Shanker,namami2011@gmail.com,2022-07-12 14:35:42,MAINT: Remove whitespaces,1
325,68b79ebda971329d76e9491e908f36d4da78e716,Namami Shanker,namami2011@gmail.com,2022-07-12 14:36:15,FIX: Return after generating signature,1
326,691059e0b1827a6eaccad8cd637241c685550f07,Namami Shanker,namami2011@gmail.com,2022-07-12 15:03:17,FIX: Return string path of files,1
327,21cfaf166572e6e3d7f7e8ebab9c9008648bd14a,Namami Shanker,namami2011@gmail.com,2022-07-12 15:28:48,FIX: Remove sneaky breakpoint,1
328,30748db32f188a4d0cb7ffae6629d05c3b668877,Namami Shanker,namami2011@gmail.com,2022-07-12 15:31:28,MAINT: Remove unused build_dir function,1
329,5539245a2d81b14bdf236f2e958fa5ff7fe41a69,Namami Shanker,namami2011@gmail.com,2022-07-12 17:15:10,FIX: Processing macros,1
330,8226050a191455d933855f44322befba4b0c8f87,Namami Shanker,namami2011@gmail.com,2022-07-12 17:15:51,FIX: f2cmap flag picking up positional args,1
331,4f9c84774509c220646f0b7270f1cc03f86bceef,Namami Shanker,namami2011@gmail.com,2022-07-12 17:35:07,FIX: Print f2py version,1
332,f4ab7fa6631f933338da29a518df5f5c3dab3c90,Namami Shanker,namami2011@gmail.com,2022-07-13 08:09:27,TST: Add f2pyarg modules to public api list,1
333,7782efee9d645a7c7474fe3e941edbef8396bd81,Namami Shanker,namami2011@gmail.com,2022-07-13 12:50:12,ENH: Add f2cmap support to f2pyarg compilation,1
334,51290b1e89c6783d102eedba02a666bcd2906186,Namami Shanker,namami2011@gmail.com,2022-07-24 08:24:04,ENH: Add typing support,1
335,69d3a2fe2cd7d18f1a63674ae87abc874dcfdbfb,Namami Shanker,namami2011@gmail.com,2022-07-24 08:40:00,ENH: Add typing support to f2pyarg,1
336,1c8d67eb582ebb9d559368460fa6cb746383e322,Namami Shanker,namami2011@gmail.com,2022-07-24 08:40:35,FIX: Typing in f2py service file,1
337,8cec8623371ee91ce60f6395ee27a51fa4d37730,Namami Shanker,namami2011@gmail.com,2022-07-24 08:42:18,MAINT: Remove unnecessary imports,1
338,1b2d883f98b81a347677a6372ad174e9b1db5b91,Namami Shanker,namami2011@gmail.com,2022-07-24 09:16:49,FIX: Add pyf.src file support to f2pyarg,1
339,8217138452b58e1994bdda6bfb5077beb7a8fac5,Namami Shanker,namami2011@gmail.com,2022-07-24 09:17:59,FIX: Remove os.path dependency from f2pyarg,1
340,b3823b15aa7712b6abddffae8020fdf3cfebbcdb,Namami Shanker,namami2011@gmail.com,2022-07-24 09:18:25,FIX: Remove os.path dependency from f2py service,1
341,499c45cc27bab7af18a4b6d12dfe2f2ca6f88a48,Namami Shanker,namami2011@gmail.com,2022-07-24 09:43:33,FIX: Replace os.path with pathlib.Path,1
342,f20254ee40d80139260d1721aee79b6f088cf5da,Namami Shanker,namami2011@gmail.com,2022-07-24 09:43:57,FIX: Typing,1
343,68789c5cb1f67cdda3e7f2770320f558a34845ad,Namami Shanker,namami2011@gmail.com,2022-07-24 09:53:31,MAINT: Use boolean values instead of integers,1
344,91b77bf37727be203505f50048810e6c8d987ded,Namami Shanker,namami2011@gmail.com,2022-07-24 10:05:47,MAINT: Refactorings,1
345,776234156cff0ba1cff8db12b603d59ce14b5c43,Namami Shanker,namami2011@gmail.com,2022-07-24 10:08:55,MAINT: Remove unnecessary comments,1
346,6bd3e6ca559abe3475fd80563801b5c88e7aa506,Namami Shanker,namami2011@gmail.com,2022-07-24 10:09:43,FIX: set_dependecies_dist potential bug,1
347,5fd51235fb7c0a4aa8908ff988184597d44044b1,Namami Shanker,namami2011@gmail.com,2022-07-24 10:12:21,MAINT: Rename regex variables as module constants,1
348,911fd6a49613faf56fe5743aa625a8ae95a006ce,Namami Shanker,namami2011@gmail.com,2022-07-24 10:17:56,MAINT: Replace os.path with pathlib.Path,1
349,dac9dd42fd4700a81b56623fad80b4cb16571ff0,Namami Shanker,namami2011@gmail.com,2022-07-24 10:26:22,MAINT: Typing and pathlib related refactoring,1
350,b8911884166c5e8a06685ea6ab8a7e6cceffb714,Namami Shanker,namami2011@gmail.com,2022-07-24 10:47:08,FIX: Passing rem to f2pyflags_dist,1
351,47a94268e6719dd3e1fcff034370f07194adc6e4,Namami Shanker,namami2011@gmail.com,2022-07-24 10:49:57,FIX: Always convert f2cmap_file to Path type,1
352,5772ec62814ad7d66abf2e4e8d6b6fb1109ef54d,Namami Shanker,namami2011@gmail.com,2022-07-24 10:52:01,MAINT: Apply changes from code review,1
353,04558471297cea6972e74ca9e4401c57fab85b04,Namami Shanker,namami2011@gmail.com,2022-07-24 10:53:19,MAINT: No need to use try..finally,1
354,e1f722fd27db034da913262b72a50f0d589b0b52,Namami Shanker,namami2011@gmail.com,2022-07-24 11:46:33,FIX: Return full path string,1
355,302c77c0616c917b5e3a83fa60c3ad13f3525ae1,Namami Shanker,namami2011@gmail.com,2022-07-24 11:47:03,FIX: Print name of PosiPath type variable,1
356,f105eecd324ab4909945a7eece8a5bed673cc808,Namami Shanker,namami2011@gmail.com,2022-07-24 12:10:37,MAINT: Refactorings from code review,1
357,1cc1ab908501e3a53807fe57fb888bc513724572,Namami Shanker,namami2011@gmail.com,2022-07-24 12:16:30,MAINT: Refactorings from code review,1
358,116315e0e8efb4a286370590b79817a9bb3a6319,Namami Shanker,namami2011@gmail.com,2022-07-24 12:31:26,FIX: Typing errors,1
359,4b55a17d687212b3f391b0b80c4e0695fd699f37,Namami Shanker,namami2011@gmail.com,2022-07-24 13:42:31,"FIX: Replace builtin types with typing

python 3.8 does not support substriptable builtin types.",3
360,232decfefe7dc78289ea8fd585c7c58486089dac,Namami Shanker,namami2011@gmail.com,2022-07-24 13:58:51,MAINT: Add docstring to explain open_build_dir,1
361,257b44394df5f4cf6d5d2a1375b9b06fa86267cd,Namami Shanker,namami2011@gmail.com,2022-07-24 18:11:10,ENH: Add temporary comments,2
362,d8061f4f071f2d67d7288fdef4abe1cf223c6ac2,Namami Shanker,namami2011@gmail.com,2022-07-25 04:47:31,ENH: Use builtin types in place of typing,3
363,3aa40b722d90b6528fd0a5a62a6b6b350970d3a7,Namami Shanker,namami2011@gmail.com,2022-08-05 10:19:42,ENH: Return c wrapper path,1
364,ac164c7514eb05961a5fe9f7da08bd7746cda10d,Namami Shanker,namami2011@gmail.com,2022-08-07 14:42:48,ENH: Add --backend flag for meson integration,1
365,58fb9c38545a42931a09569457e23473dcb83115,Namami Shanker,namami2011@gmail.com,2022-08-07 14:45:26,BUG: Seperate paths by colon,1
366,e4c5d0bd0c7e546baa2ab2cbb9994edc2bf6fec1,Namami Shanker,namami2011@gmail.com,2022-08-07 14:46:27,BUG: Add default values and pass paths as strings,1
367,5f599aa3f03ad6226f9b737850c5b2710c83d869,Namami Shanker,namami2011@gmail.com,2022-08-07 14:48:51,ENH: Add initial meson plugin,4
368,e9fe1ce5dd49befe6f25e363b8ca06bcb184fe4d,Namami Shanker,namami2011@gmail.com,2022-08-07 14:49:20,ENH: Use meson backend in f2pyarg,1
369,379bb56892af96cb3ac757cf0da0c1cc6f597e0e,Namami Shanker,namami2011@gmail.com,2022-08-07 14:51:01,MAINT: Sort by alphabetical order,1
370,f1d93c0fcede2e46e73d78e5b34f4bd8f2158ad0,Namami Shanker,namami2011@gmail.com,2022-08-12 16:13:07,MAINT: Fix typo,1
371,8c0858b64d726b1cd7a920cd6fdeb33645bbafcb,Namami Shanker,namami2011@gmail.com,2022-08-12 16:14:34,ENH: Add custom string flags parsing,1
372,5b99e87b5eef027a16d15feea7554eba2e2015b6,Namami Shanker,namami2011@gmail.com,2022-08-18 18:07:00,FIX: Flag nargs,1
373,af364d0d2682eb700726e99cc65ebf4c4025c9db,Namami Shanker,namami2011@gmail.com,2022-08-18 18:07:22,MAINT: Correct docstring,1
374,2154c47a322aa2fd491ea6fa7bff123cda690f77,Namami Shanker,namami2011@gmail.com,2022-08-18 18:09:04,MAINT:Refactor variable names according to f2pyarg,1
375,2803ac5d9b0818418a643569a385673965c22e2e,Namami Shanker,namami2011@gmail.com,2022-08-18 18:09:27,MAINT: Fix docstring,1
376,5a2706fe0c3caea497a74137072581f4120f6b33,Namami Shanker,namami2011@gmail.com,2022-08-18 18:10:28,FIX: Add flags,1
377,198895cb66ade5f134968d91290add1658db703f,Namami Shanker,namami2011@gmail.com,2022-08-20 06:22:30,ENH: Update f2pyarg with full meson backend params,1
378,6f8ccbbeafa61c11ceeb4bca13d632e6d3054b41,Namami Shanker,namami2011@gmail.com,2022-08-20 06:23:32,ENH: Basic prototype meson backend,2
379,28414fae501fd44342fd87b21629f6999334eaca,Namami Shanker,namami2011@gmail.com,2022-08-24 17:44:22,BUG: f2pyarg bugfixes,1
380,66fd50a2e87a51147eefc7a8eaa90c4a96175a38,Namami Shanker,namami2011@gmail.com,2022-08-24 17:44:43,MAINT: Return Path object of tempdir,1
381,dd08d47f1c60b51989e793a1a9eaf6390adc8d3b,Namami Shanker,namami2011@gmail.com,2022-08-24 17:46:12,ENH: Add F2PY backend directory to install config,1
382,9ab0c9d4d4b231b2723709f3e3a4f0ccd20fad04,Namami Shanker,namami2011@gmail.com,2022-08-25 17:05:25,BUG: Generate using pyf files,1
383,706443c50b180afe498f669b2f4d9833216004ad,Namami Shanker,namami2011@gmail.com,2022-08-25 17:06:30,"ENH: Accept f77, f90 and object files seperately",2
384,4a114ce693bbf04663f57cc0cee2cc01a9287547,Namami Shanker,namami2011@gmail.com,2022-08-25 17:06:59,ENH: Add f2py backends to public API list,1
385,26cc090c99b51641108ead1ace31774eda5bc1e0,Namami Shanker,namami2011@gmail.com,2022-08-26 10:02:57,BUG: Lower C wrapper defs by default for less buggy imports,1
386,ee41f1e974965241ae79e5dcc40141b5307bfb48,Namami Shanker,namami2011@gmail.com,2022-08-26 10:04:07,BUG: Read module name from pyf file without -c,1
387,76ab74b7a026719dfb2186674b1bd23a15a501aa,Namami Shanker,namami2011@gmail.com,2022-08-26 10:04:45,BUG: Fix enum action for switching backends,1
388,bfd5c86d3b6187f8f86a493c4c170aa07193230d,Namami Shanker,namami2011@gmail.com,2022-08-29 15:03:06,"Revert ""BUG: Read module name from pyf file without -c""

This reverts commit 31ec0660526cf7b3374d5a4e89fe91508c7f16aa.",1
389,24d7087b8a6acf24665ea1ebfd053b035f7e890c,Namami Shanker,namami2011@gmail.com,2022-08-31 08:53:43,BUG: Change default value of lower flag,1
390,46c466f98c860992c901afce6b034e26b879e19d,Namami Shanker,namami2011@gmail.com,2022-08-31 08:55:18,BUG: Change default module name,1
391,29c31ee78d21c55c3fd313a42a324ca34acd8718,Namami Shanker,namami2011@gmail.com,2022-08-31 08:58:41,MAINT: Set Default empty gen False,1
392,64fdd3e549f209cd92b3b6fb0743014fca41866d,Namami Shanker,namami2011@gmail.com,2022-08-31 09:00:39,BUG: Return list of wrappers from generate_files,4
393,5888fbf740c8a050aa9e4ba79c7225bca91e2426,Namami Shanker,namami2011@gmail.com,2022-08-31 09:01:04,BUG: Get module name from postlist,1
394,5664a9885a88f61c02e158548b90ac128b774c6a,Namami Shanker,namami2011@gmail.com,2022-09-07 14:32:47,BUG: Shift files to the end of sys.argv,1
395,a1b82193e9a405bf4c478c97abe4be0b708d0542,Namami Shanker,namami2011@gmail.com,2022-09-07 19:06:55,BUG: Import annotations for python3.8,1
396,cf21444b65cd3007c53311ac43fe36eaf5c6eee4,Namami Shanker,namami2011@gmail.com,2022-09-07 15:44:53,BUG: f2pyarg sort args fix,1
397,09fcaaeb6266c3e405cd378d23a8a0b18d59fb4b,Mike Alexandersen,mike.alexandersen@alumni.ubc.ca,2022-08-25 15:37:39,Add 'nanmean' and 'nanmedian' as modes for numpy.pad,1
398,1f6172a51a19fc1662f0ae06d1cd96f0657f02a9,kc611,ckaustubhm06@gmail.com,2023-03-08 18:19:48,Documented Numba support for NumPy Generators,2
399,61e2d97cb53c4d4db0b7975a588c0b91deb53df8,kc611,ckaustubhm06@gmail.com,2023-03-08 18:27:31,Fixed Linter issues,1
400,012777ce330ffae056b47837dfc0fb748a7a88e5,99991,99991@users.noreply.github.com,2022-07-30 17:42:35,ENH: Optimize `np.lib.arraysetops.in1d` for python strings (#21804),1
401,ce2f9e71684268cc5ad0968e846c3a419414a724,99991,99991@users.noreply.github.com,2022-07-31 09:16:55,"ENH: Add test case for `np.lib.arraysetops.in1d` with string objects

Co-authored-by: Prateek Garg <gargprateek35@gmail.com>",1
402,05651bcedb825e050f70a4b1c216c657a0112b33,Evin Sellin,evinism@gmail.com,2022-07-17 21:12:33,"BUG: Better np.inf behavior for quantile and percentile calcs

Addresses #21932",2
403,5a0024097127d7537192f6b229b6334e085cae3e,Evin Sellin,evinism@gmail.com,2022-07-17 06:11:08,"ENH: Allow ndarray subtype preservation through np.tensordot

Addresses #21958",2
404,45d880f07650a003d86b791e5dc2cc19d744546e,Sean Atukorala,shehanatuk@gmail.com,2022-07-14 01:52:35,added RuntimeWarning suppression to numpy/polynomial/polynomial.py,3
405,cf0f9e7c8d26fa135feed2cdafc4c9eb88fd93e4,Sean Atukorala,shehanatuk@gmail.com,2022-07-14 01:57:46,fixed lint check error,1
406,b27dd3e7695f358b54836209191eaa4bb51552d8,Sean Atukorala,shehanatuk@gmail.com,2022-07-14 02:11:32,"BUG: Removed `RuntimeWarning` when Polynomial([inf]) divided by a float, closes Issue #21343",1
407,8b89782d58c74c5fdb5b54195569cfcb93665ca2,Sean Atukorala,shehanatuk@gmail.com,2022-07-15 02:06:25,refactored potential solution to being more localized with `suppress_warning()`,1
408,a51aaf57b686b2693449b2a23233fce3456efdec,Sean Atukorala,shehanatuk@gmail.com,2022-07-17 00:10:50,removed redundant code & lines from random/_generator.pyx & polynomial/tests/test_classes.py,2
409,5afe15e45bf087e5267b1da482f0e311fbbcf8ff,Sean Atukorala,shehanatuk@gmail.com,2022-07-19 01:43:49,added solution to Issue #21358 based on @seberg's advice,1
410,0ad338f97547851cecc3e90cfc95e36aaf2655d3,Sean Atukorala,shehanatuk@gmail.com,2022-07-19 01:47:35,Merge branch 'main' of https://github.com/numpy/numpy into issue-21961-random-uniform-datetime-ShehanAT,13
411,1baf9093f9d084b3e16d20b2962a3452624500f7,Sean Atukorala,shehanatuk@gmail.com,2022-07-19 01:55:58,added solution to Issue #21358 based on @seberg's advice,1
412,98f865a3508b38232da56cc573414ac8398df90f,Sean Atukorala,shehanatuk@gmail.com,2022-07-19 02:01:13,removed redundant import from numpy/polynomial/polynomial.py,1
413,fd2001feb625f557d95a6b54645118767362714a,Kevin Sheppard,kevin.k.sheppard@gmail.com,2022-07-12 16:35:16,"ENH: Add binding for random pyx files

Add binding so that inspect will work correctly

closes #21908",7
414,2953d4141c8483f3136c195c6757130d48c10f26,Evgeni Burovski,evgeny.burovskiy@gmail.com,2022-07-09 21:26:05,WIP: initial version of doctest_public_modules.py,1
415,9eb1dbf8921dca81718eec6f4b0fe36b9164d400,Evgeni Burovski,evgeny.burovskiy@gmail.com,2022-07-10 08:15:27,"BUG: doctests: fix an example in `np.ma.__init__`

Missing commas in `masked_array(data=[1 2 3], ...)` confuse the checker.",1
416,e9748a0d2afa444e003f02608085cc4b028f824a,Evgeni Burovski,evgeny.burovskiy@gmail.com,2022-07-10 10:29:06,MAINT: doctests: add the skiplists from refguide-check,1
417,4447e717b1171855f6b78a20dd0563c26869a050,Evgeni Burovski,evgeny.burovskiy@gmail.com,2022-07-10 12:53:18,DOC: polynomial: make the Chebyshev.fit example runnable,1
418,3188c14cb98570021ae69965f13b6b76f2d8a908,Evgeni Burovski,evgeny.burovskiy@gmail.com,2022-07-10 12:55:42,WIP: doctest doc/source/user and /dev *rst files,2
419,897730e7e4a177286cc1f9078f830d849698e066,Evgeni Burovski,evgeny.burovskiy@gmail.com,2022-07-10 18:01:42,"MAINT: plumb doctesting through runtests.py

$ python runtests.py --doctests -s core -v

to run doctests in `numpy.core` etc",1
420,b967bc604a0a3d2fedf69904e1b29dc40da606c8,Evgeni Burovski,evgeny.burovskiy@gmail.com,2022-07-10 18:14:51,CI: run doctests on CI,1
421,93834d481d0c47fab9d8842d468e332de9636cec,Rohit Goswami,rog32@hi.is,2021-10-05 01:11:43,ENH: Start refactoring f2py front-end,1
422,cedc7ef196ded0601ba1180414d5c9aab63f26e1,Rohit Goswami,rog32@hi.is,2021-10-05 01:12:28,ENH: Start using logging,1
423,44a84d9c32a29be5885f43b642a08ec3cc6b1dcb,Rohit Goswami,rog32@hi.is,2021-10-05 01:55:26,ENH: Add more options for the new front-end,1
424,23710f8a612fbd8db4ab6de933fd2e89698a10b2,Rohit Goswami,rog32@hi.is,2021-10-05 03:09:39,ENH: Half the f2py options,1
425,32dab62cb49086ca2cc0c2206a71b85cb05072ad,Rohit Goswami,rog32@hi.is,2021-10-18 19:12:28,ENH: Switch to using f2pyarg,5
426,ce2d933c13e564bd0daa49d9e2af2065035094c1,Rohit Goswami,rog32@hi.is,2021-10-18 19:12:58,ENH: Add f2py frontend stuff,1
427,84ef9d2cc721c708bc6f2d534609ed5df0993984,Namami Shanker,namami2011@gmail.com,2022-06-30 19:28:54,FIX: f2pyarg --build-dir create directory if not present,1
428,c54f315867ec00ee60dc5360e06669febb37a0c5,Namami Shanker,namami2011@gmail.com,2022-06-30 19:50:53,MAINT: Move f2pyarg helpers to service,2
429,d075fe34e8c07faebdc396f35c4a2cb56c286444,Namami Shanker,namami2011@gmail.com,2022-06-30 20:00:42,FIX: Fix incorrect imports in f2pyarg service,1
430,20ef1333739ea887d07bde333f1b3e0afdcbc3e9,Namami Shanker,namami2011@gmail.com,2022-06-30 20:34:02,MAINT: f2py check if input f2cmap file exists,1
431,b6d347df56bdc0f1c153234b0d8933baa426db78,Namami Shanker,namami2011@gmail.com,2022-06-30 21:20:29,MAINT: Fix --wrap-functions docs,1
432,492aa6f21e71086340c0a0d4f2e9ed40c0dacb8a,Namami Shanker,namami2011@gmail.com,2022-07-02 12:58:37,MAINT: f2pyarg Remove unnecessary flags,1
433,b33c51f63122cc5b5e4a1fe028334b43add06f7f,Namami Shanker,namami2011@gmail.com,2022-07-02 12:59:15,MAINT: f2pyarg remove unnecessary flags,1
434,bacf0088ad8ce2ba14814d5ef90b2bbacc127794,Namami Shanker,namami2011@gmail.com,2022-07-02 13:00:05,MAINT: f2pyarg fix default values,1
435,4d4801c81615648926f8241d2e818323337c14e4,Namami Shanker,namami2011@gmail.com,2022-07-02 13:01:07,FIX: f2pyarg transfer -h flag to generate_wrappers parser,1
436,7a1c8078421dd496c9cd1412fcac55dcccbdbce8,Namami Shanker,namami2011@gmail.com,2022-07-02 13:05:57,ENH: f2pyarg add file segregation method,1
437,642f9f747b0120df1d8922028f7ae9da6957200b,Namami Shanker,namami2011@gmail.com,2022-07-02 13:11:29,ENH: Create temp dir for null builddir value,2
438,d8ac07d47f9ea22edf0a3a19072288fda8ce298e,Namami Shanker,namami2011@gmail.com,2022-07-02 13:14:02,ENH: Chop callcrackfortran and move it to service. Add other helpers.,2
439,313c9b3aa13e8f29c68f2da544b766e7a1cc6c99,Namami Shanker,namami2011@gmail.com,2022-07-02 13:15:45,ENH: Initial f2pyarg main arg process function,2
440,ea5545f0b764dabee9490abad0301afa3f5f3c97,Namami Shanker,namami2011@gmail.com,2022-07-03 08:13:49,FIX: fix imports,1
441,1817d348bc6ac5f4b7f7096681ee1fb8a8de210a,Namami Shanker,namami2011@gmail.com,2022-07-03 08:22:22,FIX: Set default verbosity to true like f2py2e,1
442,797badc70dbfcd99bc9b4c0db5eb64f3193844ab,Namami Shanker,namami2011@gmail.com,2022-07-03 09:54:08,MAINT: Remove unneccessary imports,1
443,d24131a3261f1627c7232f6f05bb7a20e325e68f,Namami Shanker,namami2011@gmail.com,2022-07-03 09:54:38,ENH: Handle overwrite-signature flag,1
444,55f2280218ecc796a5bc2616bdd6f7a2872f7aee,Namami Shanker,namami2011@gmail.com,2022-07-04 10:57:04,ENH: update auxfuncs,1
445,d4b8a310670c7dbe420f03200b843ba866732c31,Namami Shanker,namami2011@gmail.com,2022-07-04 11:32:13,ENH: Segregate pyf files,2
446,2bc3731dcc84718a74f9b5e51113180f5af204aa,Namami Shanker,namami2011@gmail.com,2022-07-04 12:26:30,MAINT: Refactoring,2
447,49130fc360df213ab0fbc04ade22100665e836f4,Namami Shanker,namami2011@gmail.com,2022-07-04 12:27:36,MAINT: Rename _parse_postlist to _check_postlist,1
448,6f736b98ee36c01bbc9b293e15d66e2c05e5a95e,Namami Shanker,namami2011@gmail.com,2022-07-05 12:21:53,"Revert ""ENH: update auxfuncs""

This reverts commit b334020a6b4d57831b7963826abf731fef6d3d5e.",1
449,e6eaa60258ba226ac55bff4ce4a3243104e4ec23,Namami Shanker,namami2011@gmail.com,2022-07-05 13:21:02,FIX: Accept array of debug options rather that boolean flag,1
450,3f32b5f27885d6ca8c2f10498955a07623a14c94,Namami Shanker,namami2011@gmail.com,2022-07-05 13:22:27,FIX: Default module name and default build directories,1
451,dc8aa16e4ebe178044be436aa17d3b15a3bf73af,Namami Shanker,namami2011@gmail.com,2022-07-05 13:23:17,MAINT: Fix typo and send pyf files to generate_files,1
452,a9e06f54e5cfeafea93319a61cbb0f68dc4ef012,Namami Shanker,namami2011@gmail.com,2022-07-05 13:25:41,ENH: Send all required options to rules file,2
453,15979dabbeed117526acdf9d85a87d5ca5ba0206,Namami Shanker,namami2011@gmail.com,2022-07-05 13:26:58,MAINT: Refactoring service,2
454,1b9bc482546e8362afbe0b14501f18145a17896b,Namami Shanker,namami2011@gmail.com,2022-07-08 08:20:35,MAINT: Refactor for -c flag,1
455,1b39c9fdeb9c4b5b5b07f720843b22184d9c5653,Namami Shanker,namami2011@gmail.com,2022-07-08 08:21:53,FIX: Change -c flag default val,1
456,fb905bda04f5d2bf063cdd0445a4a8ef204bb6aa,Namami Shanker,namami2011@gmail.com,2022-07-08 08:23:04,ENH: Remove alternative macro flags for easier handling,1
457,219836af525072187e4bcf51773604847f07a38c,Namami Shanker,namami2011@gmail.com,2022-07-08 08:23:49,ENH: Add action class to process macros,1
458,3c12c2402a59d41d820b7d26e47cfdac50b61e30,Namami Shanker,namami2011@gmail.com,2022-07-08 08:24:34,FIX: BoolAction string has no contains method error,1
459,81fd0f721c7be9689d26e634536cf32d06541dc0,Namami Shanker,namami2011@gmail.com,2022-07-08 08:25:18,FIX: NPDLinkHelper setattr failure,1
460,2fc023af3a0ef3201ed49ff33e6e6112acbec48d,Namami Shanker,namami2011@gmail.com,2022-07-08 08:26:06,ENH: Add initial -c flag handling,1
461,66871d307d9eca62194acbf83ce10ccaff0b02d6,Namami Shanker,namami2011@gmail.com,2022-07-08 08:28:41,ENH: Add get_f2py_modulename function from np.distutils,2
462,dd122774d89c517b6943b373f853b29755db2499,Namami Shanker,namami2011@gmail.com,2022-07-08 08:30:21,FIX: _check_postlist verbosity error,1
463,76e81c16ec5019d56d91c8de1ce97747ea9a300a,Namami Shanker,namami2011@gmail.com,2022-07-08 14:23:45,FIX: Change module_name to module,1
464,066d4cb7fd4b2f908bbc58c445755a6ce9b0fa59,Namami Shanker,namami2011@gmail.com,2022-07-08 15:19:10,FIX: Parse skip and only arguments,1
465,616f9847725ccaa5185f4065d747d43cd5c5ad9f,Namami Shanker,namami2011@gmail.com,2022-07-08 15:23:30,FIX: Segregate and return path of input files,1
466,d5355be98cf234b36e576cd3651355a426db106b,Namami Shanker,namami2011@gmail.com,2022-07-11 14:55:11,FIX: data type of f77flags and f90flags,1
467,468d2554605949a29638387bf1bd4ee192d54d7c,Namami Shanker,namami2011@gmail.com,2022-07-11 14:55:54,FIX: Return signature file,1
468,20dbde2a6dd127002ab351add06ae74a18c26130,Namami Shanker,namami2011@gmail.com,2022-07-11 15:00:36,MAINT: Refactor file segregation,1
469,e43c5a5915d9b5a97d383e651f02a0957824a1a6,Namami Shanker,namami2011@gmail.com,2022-07-11 15:03:40,ENH: Support for -include<header> flag,1
470,a294730aa4d5aef0a0bc0e4ac6dfa1c4ce402887,Namami Shanker,namami2011@gmail.com,2022-07-11 15:10:02,MAINT: Refactor wrapper generation settings,1
471,207523a0f8bec95840073b7d31159049418136e5,Namami Shanker,namami2011@gmail.com,2022-07-11 15:10:43,FIX: Import f2py2e rather than f2py for run_main,1
472,4e5e029206f6390e9fff080280cf0c363791484e,Namami Shanker,namami2011@gmail.com,2022-07-11 15:12:21,ENH: Generate comp flagsfrom parser namespace,1
473,724c29ba8ddda15f03ae5ad570ce4ec6acacb1a7,Namami Shanker,namami2011@gmail.com,2022-07-11 15:15:09,ENH: Add f2pyarg distutils compilation,2
474,c02ff2fe94a42429681e50219f0b78e0224c7bb6,Namami Shanker,namami2011@gmail.com,2022-07-11 15:15:42,FIX: link_resource default value,1
475,cc4a8b0d0705c3219bf7965ebf3e6fbdc7a7c9f9,Namami Shanker,namami2011@gmail.com,2022-07-11 15:16:04,ENH: Add util file for f2py,1
476,6b55a20934d12b9d1c08580e59161bff2760a820,Namami Shanker,namami2011@gmail.com,2022-07-11 15:16:43,MAINT: Minor refactoring,1
477,da1243d03ca3dce701bff0447cbe2a04a34f5749,Namami Shanker,namami2011@gmail.com,2022-07-12 14:01:20,FIX: Import f2py2e instead of f2py,1
478,90a9e54be07b9a3a1ac6dba2f22aa2ab7bd0acae,Namami Shanker,namami2011@gmail.com,2022-07-12 14:03:14,MAINT: Remove unused imports,1
479,9f14f9af75021693703600c7916ccdb9199460bb,Namami Shanker,namami2011@gmail.com,2022-07-12 14:34:32,ENH: Use context manager for build_dir management,3
480,0082fa63030fbf171080e1700b75b7b63feaadc3,Namami Shanker,namami2011@gmail.com,2022-07-12 14:35:42,MAINT: Remove whitespaces,1
481,52001a1dbd4b0de222a4fb59789e8c996bfdf591,Namami Shanker,namami2011@gmail.com,2022-07-12 14:36:15,FIX: Return after generating signature,1
482,e3d7b6f5cb25fb136d953c42f2ab5b1f4f07175f,Namami Shanker,namami2011@gmail.com,2022-07-12 15:03:17,FIX: Return string path of files,1
483,496f2d39b14b5241f785af690eeb158353bd6cec,Namami Shanker,namami2011@gmail.com,2022-07-12 15:28:48,FIX: Remove sneaky breakpoint,1
484,c3c0d42da4041ed7baa3a079c37da626367ca6b5,Namami Shanker,namami2011@gmail.com,2022-07-12 15:31:28,MAINT: Remove unused build_dir function,1
485,5611b69e2b0807725f5bdfddd203683f3340dfa5,Namami Shanker,namami2011@gmail.com,2022-07-12 17:15:10,FIX: Processing macros,1
486,ea4f5a4239f199b785a5adb0b9095b8aded8827a,Namami Shanker,namami2011@gmail.com,2022-07-12 17:15:51,FIX: f2cmap flag picking up positional args,1
487,c974cd3a192fabd13badf3fa497ca37314459e54,Namami Shanker,namami2011@gmail.com,2022-07-12 17:35:07,FIX: Print f2py version,1
488,bd02010a87a6bb1e9344e58b29f706d08ec19bbb,Namami Shanker,namami2011@gmail.com,2022-07-13 08:09:27,TST: Add f2pyarg modules to public api list,1
489,f388c96cec2c5ec0b2c17d54b7928c484eb01148,Namami Shanker,namami2011@gmail.com,2022-07-13 12:50:12,ENH: Add f2cmap support to f2pyarg compilation,1
490,0697d488b73b7ec9c07d4f22b569f28e8484edee,Namami Shanker,namami2011@gmail.com,2022-07-24 08:24:04,ENH: Add typing support,1
491,1101bbb25ea26b3499e48b7a1ecbc592f3991dfc,Namami Shanker,namami2011@gmail.com,2022-07-24 08:40:00,ENH: Add typing support to f2pyarg,1
492,ae36d73eafb4726427a189cb79f249565e85afb2,Namami Shanker,namami2011@gmail.com,2022-07-24 08:40:35,FIX: Typing in f2py service file,1
493,ce701c1d0fc7aa326cc704847c7ca3f1abec8bfb,Namami Shanker,namami2011@gmail.com,2022-07-24 08:42:18,MAINT: Remove unnecessary imports,1
494,3efc55836ac1df4901c319a4650b86bf57a4ea01,Namami Shanker,namami2011@gmail.com,2022-07-24 09:16:49,FIX: Add pyf.src file support to f2pyarg,1
495,a72e4c64bd945487e8b3a594282d8d29c53d9483,Namami Shanker,namami2011@gmail.com,2022-07-24 09:17:59,FIX: Remove os.path dependency from f2pyarg,1
496,f81f58090687c6006189905ae0b92fc7f3d5f370,Namami Shanker,namami2011@gmail.com,2022-07-24 09:18:25,FIX: Remove os.path dependency from f2py service,1
497,8401463cec5aeb33208d5be52e8f4caf58f62c3b,Namami Shanker,namami2011@gmail.com,2022-07-24 09:43:33,FIX: Replace os.path with pathlib.Path,1
498,62ddb3a7cc4813468c415e07b6c8b50259948502,Namami Shanker,namami2011@gmail.com,2022-07-24 09:43:57,FIX: Typing,1
499,4c552f94be82353563a17d7d443bbb59b3a299c4,Namami Shanker,namami2011@gmail.com,2022-07-24 09:53:31,MAINT: Use boolean values instead of integers,1
500,e6b0fc89b795fe4f24928d863a423fa2048b251e,Namami Shanker,namami2011@gmail.com,2022-07-24 10:05:47,MAINT: Refactorings,1
501,bafe5f947e39818dda592df9979ca44009e4f02c,Namami Shanker,namami2011@gmail.com,2022-07-24 10:08:55,MAINT: Remove unnecessary comments,1
502,2a431f035f5d3b1c42e77add4827cc6a43122748,Namami Shanker,namami2011@gmail.com,2022-07-24 10:09:43,FIX: set_dependecies_dist potential bug,1
503,338f05fa801b07ded186fc7d3435e0475547dd94,Namami Shanker,namami2011@gmail.com,2022-07-24 10:12:21,MAINT: Rename regex variables as module constants,1
504,2ad17614855445a92116930b86770e78a6e29ece,Namami Shanker,namami2011@gmail.com,2022-07-24 10:17:56,MAINT: Replace os.path with pathlib.Path,1
505,965d9ce2ee741ea70db5615da4a92adf8ed7b815,Namami Shanker,namami2011@gmail.com,2022-07-24 10:26:22,MAINT: Typing and pathlib related refactoring,1
506,15b35fe0eadc2d3c47a4821f33dbc848ca88a77b,Namami Shanker,namami2011@gmail.com,2022-07-24 10:47:08,FIX: Passing rem to f2pyflags_dist,1
507,b3c6104a4226c8b3b6d9d7ec0fcafb9c60a86854,Namami Shanker,namami2011@gmail.com,2022-07-24 10:49:57,FIX: Always convert f2cmap_file to Path type,1
508,ea87c293eb6df0143752969258487c0b02e3cf32,Namami Shanker,namami2011@gmail.com,2022-07-24 10:52:01,MAINT: Apply changes from code review,1
509,b1ecabf2faba4112d05ba03ce148181685072a23,Namami Shanker,namami2011@gmail.com,2022-07-24 10:53:19,MAINT: No need to use try..finally,1
510,2e9244fd48d2925d65c34c9b9f7dea80931a8a91,Namami Shanker,namami2011@gmail.com,2022-07-24 11:46:33,FIX: Return full path string,1
511,263448c105d04e2c48ad7caff9ed1b9c9e967ca1,Namami Shanker,namami2011@gmail.com,2022-07-24 11:47:03,FIX: Print name of PosiPath type variable,1
512,f33a4617954840824d676e91d8246e73d2e881d0,Namami Shanker,namami2011@gmail.com,2022-07-24 12:10:37,MAINT: Refactorings from code review,1
513,5a44c5d4928d50d72bb5d21960b7de342cfb1865,Namami Shanker,namami2011@gmail.com,2022-07-24 12:16:30,MAINT: Refactorings from code review,1
514,2846d22fcef96eb44407eb94b069088bb74d5bab,Namami Shanker,namami2011@gmail.com,2022-07-24 12:31:26,FIX: Typing errors,1
515,29d2b8e306f4610227a910b10fef9f01f3b24d0f,Namami Shanker,namami2011@gmail.com,2022-07-24 13:42:31,"FIX: Replace builtin types with typing

python 3.8 does not support substriptable builtin types.",3
516,517c38e48994af5d8e4f7d9f6a0b886eef80d24f,Namami Shanker,namami2011@gmail.com,2022-07-24 13:58:51,MAINT: Add docstring to explain open_build_dir,1
517,904cc2e9474dc94edda407e3763ab4bb843f9a16,Namami Shanker,namami2011@gmail.com,2022-07-24 18:11:10,ENH: Add temporary comments,2
518,be4ed83b1408a147540785477e8eb82c1d486558,Namami Shanker,namami2011@gmail.com,2022-07-25 04:47:31,ENH: Use builtin types in place of typing,3
519,cac1aa4a00588fda2305a180e68f56a3ef986953,Namami Shanker,namami2011@gmail.com,2022-08-07 14:45:26,BUG: Seperate paths by colon,1
520,8c35886473d685d04f60dfe0b2a5f0de1232b1a3,Namami Shanker,namami2011@gmail.com,2022-08-07 14:51:01,MAINT: Sort by alphabetical order,1
521,2ce561c43b25422126ce22ab49b0dc0da97253f5,Namami Shanker,namami2011@gmail.com,2022-08-12 16:13:07,MAINT: Fix typo,1
522,5f9e4b3a2cc51a585b302f9ede2a81565d141759,Namami Shanker,namami2011@gmail.com,2022-08-12 16:14:34,ENH: Add custom string flags parsing,1
523,3ea8b39b7616730779feb0d7e0e41cee244840cb,Namami Shanker,namami2011@gmail.com,2022-08-18 18:07:00,FIX: Flag nargs,1
524,4d958d69eea6789629cea7a440da9b8fb250ab26,Namami Shanker,namami2011@gmail.com,2022-08-18 18:07:22,MAINT: Correct docstring,1
525,10fe442a5474b52aa25eb0684a66227b0288d513,Namami Shanker,namami2011@gmail.com,2022-09-07 14:25:26,"BUG: ""--noopt"" flag bugfix",1
526,9a70c408c0317e27d5ea62f0e1792d3f89a410e2,Namami Shanker,namami2011@gmail.com,2022-08-24 17:44:43,MAINT: Return Path object of tempdir,1
527,c0d87bff2a786504c4d4053bd93172206835eb48,Namami Shanker,namami2011@gmail.com,2022-08-26 10:02:57,BUG: Lower C wrapper defs by default for less buggy imports,1
528,b721f3b2fb8ca7a16f66b910a91589e012e66f0b,Namami Shanker,namami2011@gmail.com,2022-08-26 10:04:07,BUG: Read module name from pyf file without -c,1
529,260d56f35a6cce7bb747837603916c432c06af34,Namami Shanker,namami2011@gmail.com,2022-08-29 15:03:06,"Revert ""BUG: Read module name from pyf file without -c""

This reverts commit 31ec0660526cf7b3374d5a4e89fe91508c7f16aa.",1
530,1d65f9ad56b8dcf8d7abf610fefa00c12c5f27e0,Namami Shanker,namami2011@gmail.com,2022-08-31 08:53:43,BUG: Change default value of lower flag,1
531,f900f91ba48724ce08134fec52a854b33ec7eb80,Namami Shanker,namami2011@gmail.com,2022-08-31 08:55:18,BUG: Change default module name,1
532,ab148a4bdc4fae0b4d21c24e16664aa4eeda5c5a,Namami Shanker,namami2011@gmail.com,2022-08-31 08:58:41,MAINT: Set Default empty gen False,1
533,2167fcbf27476ef9ba31eb9c27872d219548821b,Namami Shanker,namami2011@gmail.com,2022-08-31 09:01:04,BUG: Get module name from postlist,1
534,2e6604aeda547053f6c79b19c84817c0f1da5759,Namami Shanker,namami2011@gmail.com,2022-09-07 14:32:47,BUG: Shift files to the end of sys.argv,1
535,3977d5086a1a34bcbaef4e14ee57d6c49ab8b85a,Namami Shanker,namami2011@gmail.com,2022-09-07 15:44:53,BUG: f2pyarg sort args fix,1
536,9056b75e76b8d7ee65c028260c430a1c71d0f35f,Miles Cranmer,miles.cranmer@gmail.com,2022-06-24 05:12:40,MAINT: Optimize np.unique for integer arrays,1
537,c0ad80be48a9218b29eced11fb73cdb7ca4faa6c,Miles Cranmer,miles.cranmer@gmail.com,2022-06-26 00:40:45,MAINT: Fast unique with `return_counts=True`,1
538,80bf1d70409a0730b8ace4eeb6e12ce6719b2ccf,Miles Cranmer,miles.cranmer@gmail.com,2022-06-26 00:51:51,MAINT: Allow empty arrays for unique `kind='table'`,1
539,ee90cd0014f0f25d904eb1b3af46181345c0b9a1,Miles Cranmer,miles.cranmer@gmail.com,2022-06-26 00:52:31,MAINT: Clean up error messages for unique `kind='table'`,1
540,8cfca178e0d22090ac20a017dca1adac3244dd4f,Miles Cranmer,miles.cranmer@gmail.com,2022-06-26 01:04:05,MAINT: Clean up error messages,1
541,1373493597889a8787c79f91e7e1ef24cf0e3f24,Miles Cranmer,miles.cranmer@gmail.com,2022-06-26 01:18:19,MAINT: Safe type conversion for bincounts,1
542,2fcf1e7fb05cccd52b126feb9dd4fb2b499b5c68,Miles Cranmer,miles.cranmer@gmail.com,2022-06-27 05:14:50,"MAINT: `kind=""table""` unsupported along an axis",1
543,df7930360419d1258a6ae0d96f9b4ed26f641eca,Miles Cranmer,miles.cranmer@gmail.com,2022-06-27 05:16:57,"TST: Test for unique with kind in None, sort",1
544,70d8a2e6a82664b7f45870db86207dfeb25b9a2a,Miles Cranmer,miles.cranmer@gmail.com,2022-06-27 05:30:38,"TST: Extend unique tests to `kind=""table""`",1
545,d7c9486dc8f9db54907576e94cddc0a8bc0bcc3b,Miles Cranmer,miles.cranmer@gmail.com,2022-06-27 06:38:42,BENCH: Create benchmark for np.unique,1
546,158f25b30533c5d062d1548c18e73cf79c3a6577,Miles Cranmer,miles.cranmer@gmail.com,2022-06-27 07:01:17,BENCH: Increase parameter range for testing unique,1
547,ee3b16771e48ae374349da1342bd8209e64ff111,MilesCranmer,miles.cranmer@gmail.com,2022-06-27 16:00:07,DOC: Describe `kind` parameter for unique,1
548,837101ad52cc879c87f0b0762a76952b97f7d856,MilesCranmer,miles.cranmer@gmail.com,2022-06-27 22:06:21,MAINT: Clean up int type checking in unique,1
549,ec644a5d36b43fccc6282499e5e9ffbd0eb5bf10,MilesCranmer,miles.cranmer@gmail.com,2023-04-16 04:29:11,Merge branch 'main' into unique-speed,300
550,ddc2fa2863bf21de04ea946b0c9317c56afc4705,MilesCranmer,miles.cranmer@gmail.com,2023-04-16 05:11:36,MAINT: Fix unique for bool input,1
551,366b2f6c28c8f393034c55ff03fde2a519a576af,Ivan Tsybulin,uranix@yandex-team.ru,2022-06-21 20:23:32,Added tests to check whether #21023 was really fixed,1
552,be022db2eb669f202219de1cb609d6b8d222aab4,Ivan Tsybulin,uranix@yandex-team.ru,2022-06-21 20:44:22,Corrected test,1
553,9bfb9f2c24804b4cd1aad5f14f30b2e8af52dde4,Ivan Tsybulin,uranix@yandex-team.ru,2022-06-21 20:46:51,lint,1
554,f75010a5670e941358863cbd762ba908223a6385,Ivan Tsybulin,tsybulinhome@gmail.com,2022-07-16 17:53:10,"fixed preserving float32 dtype in mean, var and std",2
555,a15163b4e934ffa83e27c4be0c355ff413d6f447,Ivan Tsybulin,tsybulinhome@gmail.com,2022-07-16 19:13:19,fixed deprecated kwarg dtype in ufunc,1
556,4021d05069cff06b1ac5547ccbad304fe6f864d7,Ivan Tsybulin,tsybulinhome@gmail.com,2022-07-18 19:37:51,Add lost view of type(self),1
557,f3f52df8123e6b60fe6538fe6a583271882071ce,Prateek Garg,gargprateek35@gmail.com,2022-06-21 10:58:01,added string support to in1d function to optimize it for string arrays,1
558,e3247b4bacd67e80ead43b3e2154023522bbef84,Prateek Garg,gargprateek35@gmail.com,2022-06-21 11:08:35,removed minor test bug,1
559,15b5759c79ca03d18147472fccff56e2ce0d7946,Prateek Garg,gargprateek35@gmail.com,2022-06-21 11:20:25,linting test improvement,1
560,be4fc94cede67c9286eeccee358cc1285426b62e,Meekail Zain,zainmeekail@gmail.com,2022-06-20 12:24:54,Initial work towards structured equality assertion,2
561,c1650c436b3f84cc64711e255b8fc06ed5173e0f,Meekail Zain,zainmeekail@gmail.com,2022-06-26 18:59:44,"Merge branch 'main' into structured_equality

Also included minor refactor of recursive path",32
562,8230560ea2eaf8232d73bd5cf3804c6e623ae213,Meekail Zain,zainmeekail@gmail.com,2022-07-01 18:29:52,Neaten,1
563,3bb2733caa1b2d89250f9b9492e6bc786f3e8ea4,Meekail Zain,zainmeekail@gmail.com,2022-07-01 18:30:16,Neaten,1
564,a09efb69afd6221e3c135c7e426cd9a84eb7016c,Meekail Zain,zainmeekail@gmail.com,2022-07-01 19:58:06,"Significant simplification of structured check and test corrections

- Test corrected to check against scalars w/ structured dtype, not
single-element ndarrays

- Refactored main check to go from recursive to iterative",4
565,95fbbc1a5dab0366d6f0180ff6d3ee696ff05c8f,Meekail Zain,zainmeekail@gmail.com,2022-07-01 20:34:53,"Flattened recursive helper to iterative, fixed tests",2
566,738d7f3eebfdf0486708c549159ddeb8fdc9f7f5,Meekail Zain,zainmeekail@gmail.com,2022-07-01 20:52:57,Fixed remaining tests,1
567,16f759cbf4ab7c6565922a0193a5a15b7f615d35,Meekail Zain,zainmeekail@gmail.com,2022-07-01 21:04:06,Linting,1
568,d4acb35e4600c8afbedf287fb7a8de87e4b996ba,Meekail Zain,zainmeekail@gmail.com,2022-07-01 21:06:07,Removed old variable,1
569,f17d3e1a49a6c047c0acd77416b0de8bf3186491,Meekail Zain,zainmeekail@gmail.com,2022-07-01 21:07:34,Hopefully final linting change,1
570,f4e88539cf71e8d8924b62a2fff758e38da30dd7,Meekail Zain,zainmeekail@gmail.com,2022-07-01 21:23:25,Reverted accidentally altered conditions for masked arrays,1
571,ea0526022d0607571cf6a11abf3ef252ce359995,Meekail Zain,zainmeekail@gmail.com,2022-07-17 18:23:07,Simplified implementation,3
572,3356fe0cea0a8dae4a3f32d51cb5cd40e74afe87,Meekail Zain,zainmeekail@gmail.com,2022-07-17 18:28:52,Added hypothesis test,1
573,5eef52d046ac6988aea1db2d546d98378f4e4b8a,Meekail Zain,zainmeekail@gmail.com,2022-07-17 18:41:05,Simplified test further,1
574,66d2e29bd892d39a430e7df4baede1386c88248f,Meekail Zain,zainmeekail@gmail.com,2022-07-17 18:47:07,Reverted format change for diff,1
575,8df393fc7f788e07675e23c42c42a2c5d6c786ca,Meekail Zain,zainmeekail@gmail.com,2022-07-17 18:47:27,Merge branch 'main' into structured_equality,132
576,b581620126514088453c3bb68c6ba48ef031069e,Meekail Zain,zainmeekail@gmail.com,2022-07-17 19:00:31,Simplify assertion error raising,1
577,5435d2ed362050e0ccdb051ae33d2543301abbff,Meekail Zain,zainmeekail@gmail.com,2022-07-17 19:02:54,inlined function,1
578,0d1ddef499265a8324e73a459bb7ed957f318295,Meekail Zain,zainmeekail@gmail.com,2022-07-17 21:36:02,Fixed bug,1
579,ffe84e517294116236cbd9867ed3d5ab7dc52325,Meekail Zain,zainmeekail@gmail.com,2022-07-17 21:37:26,Updated test,1
580,f2fbcfe869aa22ac5e2f551aa0614de612083638,Meekail Zain,zainmeekail@gmail.com,2022-07-18 02:34:15,Newline for linter,1
581,6210139061f090585deb640fce8d2e1252f4a0e0,Meekail Zain,zainmeekail@gmail.com,2022-07-18 03:41:13,Simplified variable passing,1
582,6afb3f57011882db52e43c70faa7fefb8053374e,Meekail Zain,zainmeekail@gmail.com,2022-07-18 14:33:18,Removed trivial if statement,1
583,23ef813cb0fa523875f1a98716121103abbf57be,Meekail Zain,zainmeekail@gmail.com,2022-07-22 22:46:55,Merge branch 'main' into structured_equality,27
584,5ffae65f6f44a104a2061c6cdeb6475f904c4d23,warren,warren.weckesser@gmail.com,2022-06-20 00:47:53,ENH: lib: Allow usecols to be a callable in loadtxt().,8
585,10f1d08920586deb191856dde68443336deed3a1,warren,warren.weckesser@gmail.com,2022-06-21 14:27:26,Fix check of the result of PyObject_CallFunction(),1
586,0d8d3c55c80952ba45d671ee27888e48db1f1bea,warren,warren.weckesser@gmail.com,2022-06-23 18:11:28,Lots of updates. (Squash this commit!),11
587,571a5e6334d4465a719f80a6ef8e4cda1c30b931,warren,warren.weckesser@gmail.com,2022-06-28 18:26:26,BUG: Fix free_conv_funcs() declaration and a few compiler warnings.,1
588,6d69407125ada3b95a7c11f7e884c2d6ee061cf9,warren,warren.weckesser@gmail.com,2022-06-28 19:05:00,BUG: remove unnecessary (and incorrect) clause from an assert(),1
589,3e30cd825754bcb018575b51eb9bf89f9b48dc3c,warren,warren.weckesser@gmail.com,2022-06-28 19:08:17,Initialize a var to avoid a compiler warning.,1
590,231321ef1a38326188296b14cc7aae63b0908e65,warren,warren.weckesser@gmail.com,2022-06-28 21:24:05,Ensure PY_SSIZE_T_CLEAN is set before including Python.h,4
591,d48333c437c2d3ebf7f7964c29cc121ab351899c,warren,warren.weckesser@gmail.com,2022-06-29 00:24:08,TMP: Check sizes of integers,1
592,b28370900807bf14764cee0abb1e3071fb8c8df0,warren,warren.weckesser@gmail.com,2022-06-29 00:29:47,TMP: Move code that checks sizes of integers,1
593,700dcb74db172fd70aee48d56356eb92b919852c,warren,warren.weckesser@gmail.com,2022-06-29 01:54:10,Revert previous TMP commit.,1
594,9c7bf60a0796c7f3ddd20a07eb3cd8d7c6877a1d,warren,warren.weckesser@gmail.com,2022-06-29 01:56:09,Remove invalid assert(),1
595,69ab6c3b70adab24df44a9a4edfa4928868af1af,warren,warren.weckesser@gmail.com,2022-07-01 05:31:07,get_usecols_arr_from_callable now handles the initial and subsequent calls.,1
596,b7e02ddc4ed2106dc693b688bc6b84ba7da073f2,warren,warren.weckesser@gmail.com,2022-07-06 04:21:57,Expand some code comments.,2
597,28c32cadaf480cad872688c829fa06f323033058,warren,warren.weckesser@gmail.com,2022-07-06 04:22:22,Split a test in test_loadtxt.py,1
598,f3a344a0c74b1faecb516f87086e8cc91917f795,warren,warren.weckesser@gmail.com,2022-07-06 04:27:58,Merge branch 'main' into usecols-callable,99
599,d1c976ea3af4fedc7db0e35adfe46f28e34c866c,siranipour,si292@cam.ac.uk,2022-06-17 10:32:49,"BUG: fix ediff1d for np.datetime64 types

Type check for np.datetime64 arrays would not acknowledge that the
return dtype will be np.timedelta64 as opposed to np.datetime64.",2
600,b2a85fb6343cfdd623d2d2e5d1adabba2191437a,siranipour,si292@cam.ac.uk,2022-06-17 11:16:55,Cast input ary to timedelta64 and take dtype,1
601,2cff6f3ffa7b96dda9c6ffb9877d1d2f65f008a3,siranipour,si292@cam.ac.uk,2022-06-17 11:35:59,Make return dtype be the required dtype,1
602,b3d875d60a9695a834a5c1246405c092e70564f7,siranipour,si292@cam.ac.uk,2022-06-17 13:53:04,Perform partial calculation to obtain return dtype,1
603,61bc077f8d612b1a416793ded3692e23fe061f0a,siranipour,s.iranipour@gmail.com,2022-06-27 08:26:28,Check for np.datetime64 dtype explicitly,1
604,dd592b3d879e982e6255b158ca806db388a52c82,siranipour,43517072+siranipour@users.noreply.github.com,2022-06-30 15:56:17,"Perform dummy operation on datetime64 inputs

This protects on the special case where the input is big-endian

Co-authored-by: Sebastian Berg <sebastian@sipsolutions.net>",1
605,f3694a908fb8aa90e65b4c340d4f89c0e3698b19,siranipour,s.iranipour@gmail.com,2022-06-30 16:10:19,Add tests for forbidden dtype casts involving datetime64,1
606,dcecf955f40659e380f476f4a5e31c63f4decfa1,Lev Maximov,lev.maximov@gmail.com,2022-06-16 17:59:48,use unicode in jupyter notebooks on windows,1
607,23feb0957fea12d7a99782641797e56cdae85de7,Lev Maximov,lev.maximov@gmail.com,2022-06-16 18:06:25,linter fix,1
608,cc023f96fc169db2204c4e9ca8567f0226bf9de5,Lev Maximov,lev.maximov@gmail.com,2022-06-16 18:43:01,Avoid IPython dependency,1
609,d1a561aae77eecdf20d6685161b6c41cc4988f73,Pieter Eendebak,pieter.eendebak@gmail.com,2023-03-10 09:43:32,MAIN: Make output of Polynomial representations consistent,3
610,f7d286cbcce1613812654b0e1dd819cdfa9e9c8e,Sebastian Berg,sebastian@sipsolutions.net,2022-06-10 03:49:18,"BUG: Fix NaT support for timedelta in median

Median does not currently support Datetimes.  This is because
`mean` does not support datetimes.
The reason for `mean` not supporting datetimes, is that it is
(understandibly) written as `(a + b)/2`, but datetimes cannot
be added so that we would have to use a different scheme, such as
`a + (b - a) / 2`.",3
611,9a7a62579fb480b65b91a5303da08185b9642f18,Sebastian Berg,sebastian@sipsolutions.net,2022-06-10 03:51:28,"BUG: Fix NaT handling for percentile/quantile

Unlike Median, the interpolation formula used by quantile/percentile
does support Datetimes just fine, so this also adds basic tests for
that.
Due to the integral nature, times suffer round-off errors that seem
not ideal.  This is an issue, but distinct from the NaT one?",2
612,7610433c621eea681d0828566cad658206ca58d6,Sebastian Berg,sebastian@sipsolutions.net,2022-06-10 16:28:42,"TST: Remove XFAIL from boolean percentile test

The test was fixed by gh-19857",1
613,30c21ca4cc9472f3e6bb3149ebd823a07d8349f8,Sebastian Berg,sebastian@sipsolutions.net,2022-06-10 17:48:39,"BUG: Fix timedelta64 * float rounding and NaT propagation

This fixes both rounding to be correct and that NaT is propagated
correctly (and used when any overflow occurs).
Unfortunately, this makes the loop a whole lot slower...",1
614,f1fd2355b0f1685b48a83ebd3e607a409ffe5254,m10an,vn.mlshk@gmail.com,2022-05-16 05:54:47,Init masking kwargs and testing #14371,7
615,1f61a5600b77c410013ca6bcb98b66b0251e1bfd,m10an,vn.mlshk@gmail.com,2022-05-28 12:13:35,Add `PyArray_BoolArrayConverter` #14371,2
616,81b2c69743820123922e67d39bcb81468e691dcf,m10an,vn.mlshk@gmail.com,2022-05-28 12:14:50,Use masking in arg methods #14371,2
617,3cea455663838a337a36c5ce69e458e71b753d30,m10an,vn.mlshk@gmail.com,2022-05-28 12:15:26,Update testing and add 2d case #14371,1
618,f93b8179249df7625668e19d4e07ec78e4aa54a5,m10an,vn.mlshk@gmail.com,2022-05-28 13:05:34,Add overloads with `initial` and `where` #14371,2
619,64333cc56961adc1badaa872c1dee285f401b47b,m10an,vn.mlshk@gmail.com,2022-05-28 13:27:56,Update docs #14371,2
620,ffb2bbd34c0f9d54ffb4d01a71714dcc067c34e6,m10an,vn.mlshk@gmail.com,2022-05-28 20:11:02,Remove `initial` and `where` from `MaskedArray` #14371,2
621,b2e729e088c2a17379d1137ae3705e9fd7a9e2fb,m10an,vn.mlshk@gmail.com,2022-05-29 05:13:28,Fix version refrence #14371,1
622,38dbcd2c2e3bdaba0eb6a74d31ff51cb91c913ae,m10an,vn.mlshk@gmail.com,2022-05-29 05:14:26,Add new params to `nanfunctions` #14371,1
623,1ab28c93a43a6190162af255d5f3261012f5e75b,m10an,vn.mlshk@gmail.com,2022-05-29 06:06:26,Fix linter warnings #14371,4
624,9f00da91703c11baa6338d514aec68503fc140d6,m10an,vn.mlshk@gmail.com,2022-05-31 17:53:17,ENH: Update `test_masked_2d` (#14371),1
625,cee30f37dee2dd216945d8accc4c95ffcf6a51fb,m10an,vn.mlshk@gmail.com,2022-05-31 18:27:43,ENH: Fix non-contiguous `where` (#14371),1
626,f94344f109baf96b38dcd13cba3ea298594fb219,m10an,vn.mlshk@gmail.com,2022-05-31 17:59:54,ENH: Add non-contiguous case to `test_masked_2d` (#14371),1
627,93dac93c92b9b8d81bcbc7ac06f1d75bde62bd22,m10an,vn.mlshk@gmail.com,2022-05-31 18:54:07,"ENH: Fix `argmax` and `argmin` overloads (#14371)

As neither `initial` nor `where` affect  the output type,
dtype or shape, they simply should be added to the existing overloads.",2
628,c99b8a746db923d330ac3938c42e3483506120e0,m10an,vn.mlshk@gmail.com,2022-06-20 18:43:27,ENH: Init `where` broadcasting using `NpyIter`,1
629,e45443e05e9bf6c3498bd0bd1200a14159102208,serge-sans-paille,serge.guelton@telecom-bretagne.eu,2022-05-06 05:22:07,[road-to-cxx] scalarmath.c.src -> scalarmath.cpp.src,6
630,e33d472657070b18a52928679fe593a51edfeefc,serge-sans-paille,serge.guelton@telecom-bretagne.eu,2022-05-10 07:31:39,"[road-to-cxx] Convert CONVERT_TO_RESULT to npy_static_cast

npy_static_cast<T>() is roughly equivalent to a static_cast<T>() but it's
designed so that it can be non-intrusively extended for numpy types.

In particular as npy_half is just a type alias on uint16_t, we cannot
speciailize behavior on its type without impacting npy_ushort. so use the
tagging system already used for other C++ parts instead. Ultimately, it would be
great to make npy_half a regular struct to avoid this kind of situation.",1
631,9624a34b62cd8460a4846f50fb839b0e963a6c1d,TeusEE,79349894+TeusEE@users.noreply.github.com,2022-05-06 07:00:53,"DOC: ctypeslib/as_array add desc about obj para

issue : https://github.com/numpy/numpy/issues/21335

In ctypelib api doc, it will be helpful if object parameter have more rich explaination.

add some explain about obj parameter",1
632,e7bc9ec72e2d67b8ee0536df82e1b5aa9e864c6d,TeusEE,79349894+TeusEE@users.noreply.github.com,2022-05-06 09:11:58,"DOC: ctypeslib/as_array add desc with npdoc style

add API Docs about ctypeslib -> as_array function

change short desc -> full desc with numpydoc style",1
633,a69fe0fa7910a7ed14fb921e1da288c11f0ec79a,TeusEE,79349894+TeusEE@users.noreply.github.com,2022-05-06 09:18:55,"DOC: ctypeslib/as_array add desc with npdoc style2

add API Docs about ctypeslib -> as_array function

change short desc -> full desc with numpydoc style

remove longlonglong sentence to long :(",1
634,0beeb4d4ff16423ba708315e0ea0f9012c115bd5,TeusEE,79349894+TeusEE@users.noreply.github.com,2022-05-06 09:36:14,"DOC: ctypeslib/as_array add desc with npdoc style3

add API Docs about ctypeslib -> as_array function

change short desc -> full desc with numpydoc style

remove longlonglong sentence to long :(2",1
635,e71f2eba64819129ab9b53feecf035d72e8405eb,TeusEE,79349894+TeusEE@users.noreply.github.com,2022-05-06 09:48:30,"DOC: ctypeslib/as_array add desc with npdoc style3

add API Docs about ctypeslib -> as_array function

change short desc -> full desc with numpydoc style

remove longlonglong sentence to long :(",1
636,7af95dbad6f3038b832d46414ec248a41f2b14b4,TeusEE,79349894+TeusEE@users.noreply.github.com,2022-05-06 10:28:03,"DOC: ctypeslib/as_array add desc with npdoc style4

add API Docs about ctypeslib -> as_array function

change short desc -> full desc with numpydoc style

remove longlonglong sentence to long :(

+ change see Also link format",1
637,1b045739f376b193fc22d8d27460adf3f478b405,TeusEE,79349894+TeusEE@users.noreply.github.com,2022-05-06 11:25:10,"DOC: ctypeslib/as_array add desc with npdoc style4

add API Docs about ctypeslib -> as_array function

change short desc -> full desc with numpydoc style

remove longlonglong sentence to long :(

+ change see Also link format",1
638,05ecc18f8ce0d6168e7344346fc8b1cd10226e84,TeusEE,79349894+TeusEE@users.noreply.github.com,2022-05-07 12:42:03,"DOC: ctypeslib/as_array add desc with npdoc style5

add API Docs about ctypeslib -> as_array function

change short desc -> full desc with numpydoc style

remove longlonglong sentence to long :(

+ change see Also link format

+ change location http link from see also -> Notes",1
639,c8ca90b3b43ba5637676e3f8f17922da728389d4,TeusEE,79349894+TeusEE@users.noreply.github.com,2022-05-07 12:52:26,"DOC: ctypeslib/as_array add desc with npdoc style5

add API Docs about ctypeslib -> as_array function

change short desc -> full desc with numpydoc style

remove longlonglong sentence to long :(

+ change see Also link format

+ change location http link from see also -> Notes + change link page",1
640,82735f9133b1d31075ce733baaca21337c4dcb77,Charles Harris,charlesr.harris@gmail.com,2022-06-07 16:18:28,MAINT: Grammar updates.,1
641,e1fd5473f9eb8050800b463d4fd3dbdf24ec1093,Charles Harris,charlesr.harris@gmail.com,2022-06-07 16:25:10,MAINT: Fix long line,1
642,6d81bc8b4e182bf27ce66a3482017f57bd463425,Kavi Palmer,kavipalmer@Kavis-MBP.hsd1.tn.comcast.net,2022-05-03 18:15:21,corrcoef - adding covariance param,1
643,4f8f1da954bcf83321d12bf9ee0da8449876e051,Kavi Palmer,kavipalmer@Kavis-MBP.hsd1.tn.comcast.net,2022-05-04 17:26:20,Replace np._NoValue with None,1
644,66c7ebe703868a61b27083f0141b670cc8c98962,Kavi Palmer,kavipalmer@Kavis-MBP.hsd1.tn.comcast.net,2022-05-04 21:02:21,Tests + Corrcoef Changes,2
645,b85cdbd57ea5d7cb928906c24768206857daa410,Kavi Palmer,kavipalmer@Kavis-MacBook-Pro.local,2022-05-07 01:04:23,Test update,1
646,58dc38501b01ebe95cb1d286049b4fe59161f6ed,Ganesh Kathiresan,ganesh3597@gmail.com,2021-06-26 05:20:08,"ENH: Added countbits (popcount)

ENH, DOC: Added countbits (popcount)

ENH: Popcount implementation

ENH: Add popcount to umath

ENH: Added countbits (popcount) to umath `__all__`

ENH: Refined popcount logic

DOC: Added `bit_count`

Co-authored-by: Eric Wieser <wieser.eric@gmail.com>

MAINT: Renamed `countbits` to `bit_count`

MAINT: Fixed 4 1s magic number

DOC: Added `popcount` to docstring

ENH: Added bit_count annotations

ENH: Added GNU/CLANG popcount

DOC: Added `popcount` language example

ENH, BUG: Moved `bitcount` to npy_math.h as `popcount` | Fixed final right shift

ENH: Enable `popcount` for signed

TST: Tests for `bit_count`

BUG, DOC: (BUG) Added missing typecast causing an unwanted upcast
          (DOC) Added more details on `popcount` implementation

MAINT, BUG: (MAINT) Refined `popcount` TC to use typecode
            (BUG) Fixed ufunc.ntypes to include signed ints

ENH: Added windows builtin support

ENH: Added `popcount` implementation for big python ints natively
[1/2] `popcount` object loop changes

ENH: Object loop for `bit_count`
[2/2] `popcount` object loop changes

TST: Refined `bit_count` tests and added object type

ENH: Added `bit_count` to `np.int*`

DOC: Added `np.bit_count` (#19355)

MAINT: Various linting and minor fixes:
1. Fixed passing all args to _internals umath bitcount.
   Note: We use kwargs here that might hinder performance
2. Fixed linting errors.
3. Improved verbosity of logs
4. Made a generic TO_BITS_LEN macro to accomdate more length based
   functions in future

BENCH: Added bit_count (popcount)

MAINT: Style nits | Added signed case

DOC, MAINT: Improved example

ENH: Added annotations for bit_count

TST: Added annotations tests for bit_count

MAINT: Fixed linting errors

MAINT: Moved Magic constants to npy_math_internal

MAINT: Remove python implementation | Added 3.10 check to tests

DOC: Added abs value usage to doc

MAINT: Resolved merge conflicts",17
647,4ba4feb7a468758be6fc36146ef60cf353609f4e,ganesh-k13,ganesh3597@gmail.com,2022-11-26 14:17:39,"ENH: Changed `bit_count` UFunc return to int8

WIP: Fix the typing",5
648,81259909288575b2eff16544b9058482fc23548e,ganesh-k13,ganesh3597@gmail.com,2022-12-02 13:31:07,MAINT: Remove custom `o` `bit_count` and use `P`,2
649,3cf20897a231cc4dbc574e25f6fb37df081291cc,ganesh-k13,ganesh3597@gmail.com,2022-12-05 11:12:30,MAINT: Change `bit_count` UFunc to `bitwise_count`,16
650,3baf052fa0d3787027e9986060ff91b1a1a1e564,ganesh-k13,ganesh3597@gmail.com,2022-12-11 06:31:16,MAINT: Removed method addition of bitwise_count,2
651,6bf74a4cc11a1b89e1468d881d7d3f3a7ef8fae0,ganesh-k13,ganesh3597@gmail.com,2022-12-11 06:43:20,"TST: Misc bitwise_count changes

* Changed popcount -> bitwise_count
* Added comment on why we remove certain function in float64 object
  loops
* Comment on when we skip bitwise_count",3
652,5928575f2f102f45adec193f28eb844e263a7608,ganesh-k13,ganesh3597@gmail.com,2022-12-11 06:46:17,"DOC: Improved `bitwise_count` documentation

* Added return type for integer inputs
* Refined release note
* Refined external references for popcount",2
653,1bdd312e2e30719fe50ce3af51680989effd68c4,Oscar Gustafsson,oscar.gustafsson@gmail.com,2022-04-07 10:43:55,Improve documentation formatting,13
654,32442574d27c555f5b7ab868b8f110d027532019,Brock,jbrockmendel@gmail.com,2022-03-15 04:50:10,ENH: expose datetime.c functions to cython,4
655,843cf595b69cf895e7c09cba65d06a3ea71ba7f9,Brock,jbrockmendel@gmail.com,2022-03-15 20:47:17,tests,4
656,0e9ef3b18f509ffc765af387ee5293348e2b6f9d,Brock,jbrockmendel@gmail.com,2022-03-23 20:20:47,salvage bis of #16364,6
657,9ccf321082e2c2e725f25161c93ba78969df21b7,Brock,jbrockmendel@gmail.com,2022-07-14 20:02:50,"add NUMPY_API to comments, revert includes",9
658,62dfdfe56d5b20b57c044fa232bd4d67110ec453,Brock,jbrockmendel@gmail.com,2022-07-15 16:09:50,try suggestion,2
659,45a338110685bb7e600d6a446480e5f79bf9296f,Brock,jbrockmendel@gmail.com,2023-02-11 23:38:37,fix annotation,1
660,af57ab013d3ad62c16245432f58f53783b88fe35,Brock,jbrockmendel@gmail.com,2023-02-21 23:53:54,Merge branch 'main' into npy_yes_export,125
661,16ce84f39dda9396250c923911883f6160805fef,Brock,jbrockmendel@gmail.com,2023-02-22 15:21:55,Fixup missing self,1
662,d5f2376abf46ba3beb99f41f894a29a629a6aeee,Brock,jbrockmendel@gmail.com,2023-02-28 00:17:26,fix tests,2
663,fcc4b5e5b7ccf73fd10107257fe091aed72e541b,Brock,jbrockmendel@gmail.com,2023-02-28 00:18:01,lint fixup,1
664,3aa2fa4264151450043ea6259fae2b69a0eb5556,Brock,jbrockmendel@gmail.com,2023-02-28 00:23:58,Merge branch 'main' into npy_yes_export,77
665,ceb785f812d8cef35b9e544ed3f40f345619fe34,Brock,jbrockmendel@gmail.com,2023-02-28 16:54:27,"revert accident, update cversions.txt",2
666,e3beb2e78689560e11491df54c72acff18ed4afa,Brock,jbrockmendel@gmail.com,2023-02-28 19:16:53,update C_API_VERSION,3
667,bfa2f915b92eecc1d1983d2c5b5a3be4f302f1e4,Brock,jbrockmendel@gmail.com,2023-03-01 17:14:08,lint fixup,1
668,3f8104d414a7ca7a42266d1fd29ecca28bf77908,Brock,jbrockmendel@gmail.com,2023-03-07 01:40:32,add NpyDatetime_ to names,12
669,c335e7131994f12ecd84f83bfe8ffa46b1db14fc,Brock,jbrockmendel@gmail.com,2023-03-13 23:37:22,whitespace fixup,1
670,4bd253b5339bb21216c535258ac644640bd3f562,Sebastian Berg,sebastianb@nvidia.com,2023-03-15 13:02:29,"MAINT: Modify style, change spelling a bit and fix Cython except",8
671,8adcf57db785fb196663d54e74709cd8c41e3919,Sebastian Berg,sebastianb@nvidia.com,2023-03-15 16:54:43,"MAINT: Remove noexcept again

It is not supported on some older cython versions.  But even for
Cython 3 it should not matter in an extern C blocks...",2
672,b782160e1fddc51b44d330b32c368d1f5a70e25b,Sebastian Berg,sebastianb@nvidia.com,2023-05-16 08:07:17,Merge branch 'main' into npy_yes_export,300
673,67eb41e629335b2d3f20ffd398f3b30619b2374b,Sebastian Berg,sebastianb@nvidia.com,2023-05-16 08:44:09,MAINT: Add MinVersion to API additions,2
674,372771b9658f33d75c02c974edca498f64b2b0a9,Sebastian Berg,sebastianb@nvidia.com,2023-05-16 09:38:31,TST: Make sure cython tests define NPY_TARGET_VERSION to >=1.25,1
675,01a3db0115e87e325f51e4067b21ad445185f5b2,Jérôme Richard,jeromerichard111@msn.com,2022-02-06 06:35:15,ENH: improve the speed of array conversions using AVX2 if available,2
676,2e52b6d11f85f64d865a3d82799883b5bab20f11,Jérôme Richard,jeromerichard111@msn.com,2022-07-16 14:42:41,DOC: fix a syntax error in the added changelog,1
677,c041b9cb30cd3f45fcdb59b30d30a8378e696c24,Sayed Adel,seiko@imavr.com,2022-02-14 05:26:00,ENH(WIP): Add C++ wrapper for universal intrinsics,11
678,ffccf50b5277c9fafc0f78e4360a7b278016698b,Sayed Adel,seiko@imavr.com,2022-02-14 05:27:30,DOC(WIP): add reference for universal intrinsics,3
679,c32788df435fb1ff8ce64f75cab164a69da9ed3c,Sayed Adel,seiko@imavr.com,2022-04-28 03:16:49,DOC: Tweak doxygen config & suppress info messages,1
680,66d28b4685761c62d839627806f84486e76c94a8,Sayed Adel,seiko@imavr.com,2022-04-29 05:44:23,force inline without static on CPP,1
681,e0953e8bd927c09abc927ea256f4d2f908f2ed8d,Sayed Adel,seiko@imavr.com,2022-08-03 04:23:39,"SIMD, TST: Reimplment _simd module in C++",31
682,6309d346cd0a42767e37385f7e80d940eed0c436,Jason Thai,jasonnthaii@gmail.com,2022-01-24 22:31:10,Add equal-nans argument to np.unique,1
683,921b38df5d08844ba6498912e5f91d32fd91a729,Jason Thai,jasonnthaii@gmail.com,2022-01-26 04:02:51,BUG: fixed equal_nans functionality for np.unique when called with axis arg,1
684,e9a32d1fc19ce8380792e264a06a500e4de0f511,Jason Thai,jasonnthaii@gmail.com,2022-01-26 07:35:05,"DOC, TST: Added test for np.unique equals_nan functionality",3
685,fbb3daf59d6c3c4344bf91c4a47296273f8b276d,Jason Thai,jasonnthaii@gmail.com,2022-01-26 08:04:22,DOC: Fix releasenote filename from 20891 to 20896,1
686,d3eca2411390ef7eba2a2b09f500b084115e9898,Jason Thai,jasonnthaii@gmail.com,2022-01-31 21:16:21,MAINT: Fixed Lint warnings for added np.unique equal_nans code,2
687,14fc0879ae435ea4b3038794b3aec26a2561bbae,Jason Thai,jasonnthaii@gmail.com,2022-02-03 01:50:10,MAINT: Simplify logic for np.unique when using equal_nans and axis argument simultaneously,1
688,c9ac89f9b6ecfaf97a73d1014d92df796fc82c48,Lucas Ariel Saavedra,lucasarielsaavedra@hotmail.com,2022-01-25 03:33:59,ENH: add cov parameter to numpy.polynomial.polynomial.polyfit,3
689,7bd4e8d1c292d68cc873fd158d16f20e79089699,Lucas Ariel Saavedra,lucasarielsaavedra@hotmail.com,2022-01-25 03:36:59,linter fix,2
690,6b78a7c750454ce8e276f3be645e29dcc7856230,Lucas Ariel Saavedra,lucasarielsaavedra@hotmail.com,2022-01-31 16:29:32,docstring added and test fixed,3
691,04fdae04e18575f32daa82738bd3d9291611c634,Lucas Ariel Saavedra,lucasarielsaavedra@hotmail.com,2022-01-31 16:43:44,linter fix,2
692,ab23cb87ee009b33717505893ca697c746a8b922,Lucas Ariel Saavedra,lucasarielsaavedra@hotmail.com,2022-01-31 16:47:41,linter fixed again,1
693,5df2d3007b8e1e8a391df8ab99c87d92fd31a1c4,Lucas Ariel Saavedra,lucasarielsaavedra@hotmail.com,2022-01-31 16:49:53,assert improved,1
694,4ff14a30a8804e96c3de083fbcc86ef38ce6d68e,Lucas Ariel Saavedra,46687572+lucasSaavedra123@users.noreply.github.com,2022-02-01 18:01:43,docstring fixed,1
695,d5ea58a9ad04e56f442d6dcb0f4b8d482d51f206,Matthias Bussonnier,bussonniermatthias@gmail.com,2022-01-12 15:43:32,"ENH: Add a numeric __version_info__ to numpy.

This makes it easier and less error prone to write conditional code that
depends on numpy version.

We limit version tuple to be numeric only, and only major/minor/patch.

Dependencies can now check numpy version simply with:

>>> import numpy
... assert numpy.version.__version_info__ > (1, 22)

Without relying on more complex dependencies like
`packaging.version.parse`, or distutils' LooseVersion (which is now
deprecated).

This also prevent roll-out of custom version parsing code that might be
error prone, or worse, comparison of strings.

We do not go as far as Matplotlib that use a named tuple and include
a/b/rc in the fourth component of the name tuple, but this could always
be added latter.

Co-authored-by: Bas van Beek <43369155+BvB93@users.noreply.github.com>
Co-authored-by: Clément Robert <cr52@protonmail.com>",2
696,9294d7bdac6af7c1a784a49ae10940e6ae140e4d,Damien Caliste,dcaliste@free.fr,2020-03-27 10:12:47,"ENH: add inline definition of access rights for Fortran types

Allow to parse type definition with inline acess specifier, like:
 type, public :: foo
 end type foo",1
697,b052f664992eba5c863b4030b254ec7788b33969,Rohit Goswami,rog32@hi.is,2022-01-08 23:11:11,ENH: Add auxiliary functions for derived types,1
698,9033e1f0fc1707eeafb136ed71b0e316406326fb,Rohit Goswami,rog32@hi.is,2022-01-08 23:17:26,MAINT: No failures for cracking intrinsic modules,1
699,727f4135a4157a93eeec07eed85cffaa081b0ed0,Rohit Goswami,rog32@hi.is,2022-01-09 02:48:03,MAINT: Clean for crackfortran to use capi_maps,3
700,07fa5373ec4cd9a1f480c6a4cafffb2f7d956c9a,Rohit Goswami,rog32@hi.is,2022-01-09 04:47:03,ENH: Init and use the iso_c_binding mapping,2
701,c9ad94e04963097d746a49b5a33ad881d0ec456d,Rohit Goswami,rog32@hi.is,2022-01-09 04:50:41,TST: Test the cracked intrinsic module,3
702,f4b03a396c10a4603309c980cabdfbf12cbb4e8f,Rohit Goswami,rog32@hi.is,2022-01-09 01:29:54,TMP: Generate typedefs for derived types,1
703,bc31bf8439ab8d2288326b10c676111d0c2399cf,Rohit Goswami,rog32@hi.is,2022-01-09 16:36:34,"ENH: Initialize simple numeric derived types

These are implemented as dictionaries, and support `c_float`, `c_int`
and `c_double` (along with their extensions)",4
704,0db224309e5305b45b49f1af788c5ec72de3632b,Rohit Goswami,rog32@hi.is,2022-01-09 19:30:01,TST: Init example numeric derived type,2
705,cca4a8f9dc4a894b322f16c00597687a4327d2f6,Rohit Goswami,rog32@hi.is,2022-01-09 20:18:10,MAINT: Pass smoke test,1
706,d31fbdae72718095f50702163a4e160a76293dfb,Rohit Goswami,rog32@hi.is,2023-04-15 20:21:37,MAINT: Fix typo from rebase,1
707,4d0db715dee87e1a7d67e6e1cc3c1e8db73c1bec,Joseph R. Fox-Rabinovitz,jfoxrabinovitz@gmail.com,2022-01-01 13:31:23,ENH: Added np.char.slice_,2
708,4d410ce9eea312d37d62440ebb73c2f697cd4de1,Joseph R. Fox-Rabinovitz,jfoxrabinovitz@gmail.com,2022-01-01 13:40:57,MAINT: Fixed linter errors,2
709,4a1167bf56f461e700c168643fc56e09b2a4658e,Joseph R. Fox-Rabinovitz,jfoxrabinovitz@gmail.com,2022-01-01 15:11:15,MAINT: Fixed remaining linter issues,1
710,430adcb725de2870b701818e2a272ce6aa3e7ff1,Joseph R. Fox-Rabinovitz,jfoxrabinovitz@gmail.com,2022-01-01 15:54:53,ENH: Added support for non-numpy buffers,2
711,0056fda335da603e58304fdc0e21be17e3c6945c,Joseph R. Fox-Rabinovitz,jfoxrabinovitz@gmail.com,2022-01-01 16:10:02,MAINT: Fixed another linter mistake,1
712,da404ded60007e7381fec650491acbe667ab3b97,Joseph R. Fox-Rabinovitz,jfoxrabinovitz@gmail.com,2022-01-02 17:50:38,MAINT: Added release note,1
713,89efa96660e7416fed4e6f5259723b29c2de01da,Joseph R. Fox-Rabinovitz,jfoxrabinovitz@gmail.com,2022-01-02 17:53:56,MAINT: I just want the linter to be happy!,1
714,3fd48e956ca12760b844d7f14c39cc638e444775,Joseph R. Fox-Rabinovitz,jfoxrabinovitz@gmail.com,2022-01-02 18:44:18,BUG: Added missing stacklevel,1
715,01dc74c869245344276fb46eb1d4801386b8bf10,Joseph R. Fox-Rabinovitz,jfoxrabinovitz@gmail.com,2022-01-09 23:43:54,"MAINT: Removed annoying swap of start and stop

Updated tests, docs.
Updated docs in anticipation of updated as_strided",2
716,6717deecea61b398508cd7c116e2c9fe33785d5a,joncrall,jon.crall@kitware.com,2021-12-25 04:09:36,Basic stub,1
717,1a29fcde261b17ad5c66ff7fbe026e84bbfa2d1b,joncrall,jon.crall@kitware.com,2021-12-25 04:21:00,POC weighted bins,1
718,6ad6d5009bfcba57b903fb9a6a45b35f91141b51,David Nicholson,nickledave@users.noreply.github.com,2021-12-23 03:05:54,"DOC: define/use 'selection object' in basics.indexing.rst

Define the term 'selection object' at the top of this page,
and then replace any occurrences of 'selection tuple'
with that term.

Meant to clarify the text, since before this
""selection tuple"" was used
without ever being clearly defined.
Changes are as discussed in #20438.",1
719,b32f10dbd1351b376f1f6ea60a7af3dd99b24e26,Mathieu PATUREL,australie.p@gmail.com,2021-12-09 07:52:11,"BUG: numpy.ma mask nan on __itruediv__

This bug showed up because __itruediv__ differed from __truediv__ (which
does mask the NaN). Unfortunately, both methods use different strategies
to protect against division by 0, which leads to inconsistencies (that
one in particular).",2
720,1b9e8d365fc45473183af149b630980862690600,Per A Brodtkorb,per.andreas.brodtkorb@gmail.com,2021-12-07 09:43:38,"ENH: Extend chebinterpolate to interpolate a multidimensional function

Currently there are no functions in chebyshev.py that do N-dimensional fitting for N>1
This submission is a attempt to fill the above mentioned gap and complements the efforts in #14151.

The multidimensional interpolation method implemented here uses the 1D Discrete Cosine Transform (DCT) instead of the vandermonde method. This is a reimplementation of the chebfitfunc function found in #6071. The accuracy of the new interpolation method is better than the old one especially for polynomials of high degrees.

Also added domain as input to chebinterpolate in order to interpolate the function over any input domain.
Added test_2d_approximation for testing interpolation of a 2D function.
Replaced all references to the missing chebfromfunction with chebinterpolate.
Made doctest of chebinterpolate more robust.",2
721,939293b939a686186352c15db774de078f174a4f,Ivan Gonzalez,scratchmex@gmail.com,2021-12-03 15:21:56,BUG: add type check for `encoding` at `lib/npyio.py`,4
722,a4c8a08b13c3235017972a13968e6a39561b199f,Rohit Goswami,rog32@hi.is,2021-11-28 23:06:45,ENH: Refactor F2PY to follow a logical skeleton,36
723,3065a33cf900c508d998be0ec68ba4bd603e8058,Rohit Goswami,rog32@hi.is,2021-11-28 23:07:05,MAINT: Update distutils for the F2PY structure,2
724,5aabf4cfcdada3404b6cd3aa1a097247ea93c8ad,Rohit Goswami,rog32@hi.is,2021-12-02 16:34:26,DOC: Fix typo,1
725,8db8af7ff76a3cf1f4357e00a8ac1eeb77003415,Rohit Goswami,rog32@hi.is,2021-12-03 13:15:06,"TST: Fix public API test

Co-authored-by: Pearu Peterson <pearu.peterson@gmail.com>
Co-authored-by: melissawm <melissawm.github@gmail.com>",2
726,a3227737e5891e64a3bd40f9083b993651eb88ba,Rohit Goswami,rog32@hi.is,2022-02-14 01:27:19,"MAINT,ENH: Add an F2PY deprecation helper",1
727,1d935fb976066164ebdf3e605e0034fd0e2f09d8,Rohit Goswami,rog32@hi.is,2022-02-14 01:37:40,MAINT: Minor code cleanup,2
728,de87144b84c3b0854efb4887057b3cb67e490c24,Rohit Goswami,rog32@hi.is,2022-02-14 01:51:26,MAINT: Deprecated module shims for F2PY,1
729,7e6aa47fbb8222e4addca041bb04c534ef473d18,Rohit Goswami,rog32@hi.is,2022-02-14 02:08:42,"TMP,MAINT: Fix typo",1
730,d03446c20ba9fc7360a56cc8017ca799c3deeb5e,Rohit Goswami,rog32@hi.is,2022-02-14 02:23:55,MAINT: Handle mislabled new imports,1
731,367f7ce724db37d5723079949466e9d105e99190,Rohit Goswami,rog32@hi.is,2022-02-14 02:24:34,TST: basic tests for the F2PY deprecation helper,1
732,6b954b41fc4c1530125f02377f0ae965bbc4fac1,Rohit Goswami,rog32@hi.is,2022-02-16 19:33:55,"MAINT: Update F2PY private api, pass tests",1
733,7e2e07436ed02fedb45712bbba5560f80a043213,Rohit Goswami,rog32@hi.is,2022-02-16 19:42:36,DOC: Clean up and use numpydoc,1
734,8bb8fef0724892a71ffd4a575b0242b3946d19e8,Rohit Goswami,rog32@hi.is,2022-02-16 20:18:35,"MAINT,TST: Forcibly pass with public_api",1
735,77597f8fb85fbafd8e974209b1bcc0eff520bf39,Rohit Goswami,rog32@hi.is,2022-02-16 20:35:23,"MAINT,BUG: Be more explicit about loading importlib.abc",2
736,20f6a0010fa3fd9183ed8a1a60aac9d4829b34e8,Rohit Goswami,rog32@hi.is,2022-02-16 22:52:32,TST: Clean,5
737,29cd8cb92ed6ecb3a53b78a61e237169e13d17ec,Umar Javed,umarjaved2121@gmail.com,2021-11-12 12:33:55,"ENH: Support bin width estimators for `histogramdd` and `histogram2d`

Resolves gh-20215.
`histogramdd` now uses `_get_bin_edges` for calculating edges of
bins instead of calculating them locally. `_get_bin_edges` allows
specifying an estimator to calculate optimal bin width, which is passed
by `histogramdd` for each dimension.",2
738,29fb5c0c9dd303dfea9b32be38302c3ac486a29d,Umar Javed,umarjaved2121@gmail.com,2021-11-12 13:28:39,"DOC: Bin width estimators in `bins` for `histogramdd` and `histogram2d`

Add information in docstrings about specifying bin width estimators for
`histogramdd` and `histogram2d`.",2
739,21c095b11f4dd4ee9f860aaf98a706d0eda35cfe,David Cortes,david.cortes.rivera@gmail.com,2021-10-31 21:51:39,don't do full sorts for getting medians,1
740,3bcc4cc4eda18f524eb898dfe6caf9c20abf98bd,David Cortes,david.cortes.rivera@gmail.com,2021-10-31 21:59:30,linter,1
741,70b3f703029eb2fe7deca471b209700c159f31ad,David Cortes,david.cortes.rivera@gmail.com,2021-11-01 00:18:49,solve failing tests for NaT and complex,1
742,b9aa5ab0211d70192b3c821df51e51fb5a2f1bed,sayantikabanik,sayantikabanik122@gmail.com,2021-11-12 08:24:58,test metadata modified,3
743,774677634654240f0d69c18872229037e86d7c18,sayantikabanik,sayantikabanik122@gmail.com,2021-11-12 08:25:28,release note added for 20161,1
744,bf8f0feb50a408978c0aed8b2aae49ae03cf1d56,Ganesh Kathiresan,ganesh3597@gmail.com,2021-10-10 05:53:10,ENH: Added float.hex implementation,2
745,ea1858736ff149ee78024571964a02c09ff0c50f,Ganesh Kathiresan,ganesh3597@gmail.com,2021-11-20 07:18:34,ENH: Added float.fromhex implementation,2
746,b8c197dc46aa14442bec73de97ff85fb4e331ec3,Ganesh Kathiresan,ganesh3597@gmail.com,2021-11-21 06:25:50,TST: Added basic `hex` and `fromhex` tests,1
747,9f69c7715472d0fb3b903554290426c77714494c,Ganesh Kathiresan,ganesh3597@gmail.com,2021-11-21 06:26:21,ENH: Various overflow fixes,2
748,0e0b7944e052f224082b50e4958391e26a2ea6ec,Ganesh Kathiresan,ganesh3597@gmail.com,2021-12-07 17:21:20,ENH: Removed npy_half_* functions,2
749,fabdadd668abea2c414990d86b5bfdb5fae319cc,Ganesh Kathiresan,ganesh3597@gmail.com,2021-12-22 15:35:05,TST: Added invalid inputs cases,1
750,546a82e4d4553694e19898ef0101ac7690a89ec4,Ganesh Kathiresan,ganesh3597@gmail.com,2021-12-24 05:47:37,ENH: Handle NULL in input string,2
751,8fff9749b79468b64d2be7d3f481a463a3b378e9,Ganesh Kathiresan,ganesh3597@gmail.com,2021-12-24 06:05:34,TST: Added Whitespace tests,1
752,34b655b0abc0276b5a6b77f27d45018a0626e785,Ganesh Kathiresan,ganesh3597@gmail.com,2021-12-27 14:05:39,"TST: Added test_from_hex

Added the following tests:
* two spellings of infinity, with optional signs; case-insensitive
* nans with optional sign; case insensitive
* variations in input format
* moving the point around
* [WIP] results that should overflow...
* ...and those that round to +-max float
* zeros",1
753,ba0ce33505796a587410445f659ffa906a285440,Ganesh Kathiresan,ganesh3597@gmail.com,2022-01-01 15:14:17,"ENH: Refined handling of half

Improved half handling via:
* Added a new utility function to convert float hex to half
* Split half `hex` and `fromhex` to avoid macro clutter
* Special handling of overflows for half cases
* Few minor comments and string changes.",2
754,de40ef23b14260d152655175785345387f80e8a3,Ganesh Kathiresan,ganesh3597@gmail.com,2022-01-04 14:54:16,"TST: Added test_from_hex and test_ends

test_from_hex:
* values that should underflow to 0

test_ends:
* Added case for MAX, MIN, TINY(smallest subnormal) and EPS

Misc:
* Added asserts. No idea what I was testing without it :)
* Various linting fixes",1
755,e7bfece8e10cd85e0eb597c412c3854c071093b0,Ganesh Kathiresan,ganesh3597@gmail.com,2022-01-08 11:37:18,"TST: Added test_from_hex

Added following cases:
* check round-half-even is working correctly near 0
* b.p.o. 44954 cases

Added TODO for following:
* Overflow end cases
* those that round to +-max float
* ... and near MIN
* ... and near 1.0
* Use proper Mantissa for moving the point around",1
756,178ec33dc6b8a6d24270db9374c310052efb08a6,Ganesh Kathiresan,ganesh3597@gmail.com,2022-01-08 11:42:23,ENH: Added annotations for fromhex,1
757,a7ead44d9124ca1d499213ea51f2569e93de4a33,Ganesh Kathiresan,ganesh3597@gmail.com,2022-01-08 12:49:55,"DOC: Added docs for `hex` and `fromhex`

Added TODO for 128 bit precision loss",1
758,e86042f3ccec0da05d44cbcf1ffe0254eaeb80a1,Ganesh Kathiresan,ganesh3597@gmail.com,2022-01-23 06:46:00,DOC: `hex` and `fromhex` release notes (#20083),1
759,a0112b0206b162722f08eaf07f07862747cab19b,ganesh-k13,ganesh3597@gmail.com,2022-07-02 07:25:15,"TST: Added 64 bit specific tests

Tracking in https://github.com/numpy/numpy/issues/21903

1. moving the point around (pi).
2. Make it go towards NMANT (in ref to [1])
3. results that should overflow...
4. check round-half-even is working correctly near MIN
5. check round-half-even is working correctly near 1.0",1
760,8d7bc55d26ec5b3db35270a4f13b45ae68cafeb3,ganesh-k13,ganesh3597@gmail.com,2023-04-30 17:58:50,MAINT: Changed `fromhex` return type,2
761,865821033df2b0ccccd3a25da638d99b98620bb5,ganesh-k13,ganesh3597@gmail.com,2023-04-30 17:59:38,MAINT: Changed half overflow detection,1
762,ce149f4f74d8ca2c187dbed42bcb3259358652ef,Abbas,42001049+iam-abbas@users.noreply.github.com,2021-10-01 19:16:52,added unit tests for ma.array_equal,1
763,8a020adccf9ffa88bdcd261c9f8000063cbda326,Abbas,42001049+iam-abbas@users.noreply.github.com,2021-10-01 19:23:15,Fix: assert_array fails on nan,1
764,2fb5e969fded3cd468f2ca01d5b954c953545dd9,Abbas,42001049+iam-abbas@users.noreply.github.com,2021-10-01 20:05:21,Handle not equal ndarray using utils,1
765,6cea822b9866c9275355ec945e83bed7d69bdf1d,Tirth Patel,tirthasheshpatel@gmail.com,2021-10-01 10:28:17,BUG: numpy.ma: fix `ma.in1d`,1
766,067c2c63c62c9e529253c47540dacdbc77a7631e,Tirth Patel,tirthasheshpatel@gmail.com,2021-10-01 10:37:43,TST: numpy.ma: add tests for `ma.isin`,1
767,ea5feac8d89ce46b1ed2a3bbc62e506417c1a998,Tirth Patel,tirthasheshpatel@gmail.com,2021-10-01 10:42:50,STY: numpy.ma: Fix lint failures,1
768,b534b6b5af0c709f5f32e90a87d9c48cce79e2f4,Tirth Patel,tirthasheshpatel@gmail.com,2021-10-01 13:13:59,BUG: numpy.ma: use `np.in1d` instead,1
769,6864da9457b161dbddabcc8f2c6daba8a6157256,HowJMay,yuanyanghau@gmail.com,2021-08-29 08:57:44,ENH: Add SIMD implementation for heaviside,7
770,9e4b7bcbdabc6e8a4fe0ee08590d5ee27b784fe5,HowJMay,yuanyanghau@gmail.com,2021-08-30 17:35:15,ENH: Use cmp intrinsics,2
771,3210b1352e285971ffae8e0a55e21d9fabe597b9,Sayed Adel,seiko@imavr.com,2021-09-04 21:18:21,"ENH, SIMD: Prepare a new dispatchable source for general binary fp operations such heaviside.",4
772,10fe327aff50ada3f671e3e9b5656409fdb9c1fa,HowJMay,yuanyanghau@gmail.com,2021-10-02 09:22:39,"ENH, SIMD: Add heaviside in dispatchable source",9
773,9c41b2bf7e1abc54764c4ac53ae70872b5771076,HowJMay,yuanyanghau@gmail.com,2021-08-29 08:34:22,ENHL: Add SIMD implementation for deg2rad,7
774,79d8b853dd2ae1fc38da43525cf37c343f620fb2,Sayed Adel,seiko@imavr.com,2023-03-15 19:12:14,ENH: Implement `np::Slice` represents a one-dimensional subset of an array,1
775,d114a970c386561213745105cd0ee101b87b0488,Sayed Adel,seiko@imavr.com,2023-03-15 19:13:26,ENH: supports copysign for Half,1
776,632597be6512fe4711a98f4608bc1b539b40e32d,Sayed Adel,seiko@imavr.com,2023-03-15 19:14:58,ENH: expose new C++ headers,1
777,5afaa06f989e4ad34dfb2e138cdede8d4ab3d91c,Sayed Adel,seiko@imavr.com,2023-03-15 19:19:12,ENH: Covers most of C API data types,1
778,902ba899bf0e4c8d17011778cbaa53519005caa6,Sayed Adel,seiko@imavr.com,2023-03-15 19:21:37,ENH: reimplement copysign/ones_like using C++,10
779,9ce1c16866f1f70fa4f960a371c480f918fb306b,Sayed Adel,seiko@imavr.com,2023-03-15 19:22:21,ENH: implement the new template class np::UFuncObject,2
780,196949481c915e844bde9b142b979a72986953a2,Sayed Adel,seiko@imavr.com,2023-05-19 22:49:38,"ENH: Use object function rather function pointers

  This another method for defining the inner loops of UFunc,
  Fully meta and doesn't add any overheads as long as there's
  no exported symbols involved e.g. runtime dispatching",2
781,069ed49550064a4e767e5263dd4c4e98eba11a77,Sayed Adel,seiko@imavr.com,2023-05-19 23:24:31,"ENH: replace npy_intp with IntPtr in sim_qsort

  Since C types are no longer in the scope",2
782,9e7c31ba40a176847c86d6ad0d45b9ce42a32181,anabanami,ana.fabelah@gmail.com,2021-08-10 01:35:01,BUG: Added a raise TypeError conditional statement to numpy/fft/helper.py,1
783,0139ca7e18bde4bd325ef9d34f5fc2cc92976ab6,Ivan Gonzalez,scratchmex@gmail.com,2021-07-23 07:18:21,ENH: init ndarray.__array__ impl for numeric types,2
784,52c064aae974450ea7aa23bddaaf823140003eb6,Ivan Gonzalez,scratchmex@gmail.com,2021-07-23 07:54:45,ENH: add init tests for ndarray.__format__,1
785,e85c0ec1c75d6daece485f51ecafe615091976dc,Ivan Gonzalez,scratchmex@gmail.com,2021-07-26 01:45:28,feat: add and parse a mini format spec,1
786,c5d2bee1321fefd1918b4aa10c7a266aec2a34f3,Ivan Gonzalez,scratchmex@gmail.com,2021-07-26 01:46:40,feat: use the format spec parser for non-object dtypes,1
787,db9607b457ff1557e39f5f0cfcf1e755735f8409,Ivan Gonzalez,scratchmex@gmail.com,2021-07-26 01:47:49,tests: base cases for array_format and format spec parser,2
788,c00dd6c50a9cdcf8addac4d31ead6dcc69219d5f,Ivan Gonzalez,scratchmex@gmail.com,2021-07-26 01:56:27,fix: forgot to run tests and missed a typo,1
789,e90b45e37721ce15b0f4fdf8966cc1932af5d08b,Ivan Gonzalez,scratchmex@gmail.com,2021-07-26 03:11:19,fix: wrong detection for object dtype,2
790,3587f958987b212fa143310ebd7b701a12c5000b,Ivan Gonzalez,scratchmex@gmail.com,2021-07-26 03:15:54,fix: python 3.7 compat with f-strings not using = specifier,1
791,421cef0442152b707e112eb96230625b8bc6d5e4,Ivan Gonzalez,scratchmex@gmail.com,2021-07-29 03:06:31,default behaviour when trying to format non-numeric dtypes,2
792,c1828769419f895bb32970c14a23a0bd92be75ba,Ivan Gonzalez,scratchmex@gmail.com,2021-07-29 04:01:58,fix test: wrong dtype,1
793,5e51795f0a7e0a1a64bcde832bcd513f295d5987,Ivan Gonzalez,scratchmex@gmail.com,2021-07-29 05:41:39,fix the fix,1
794,4e28ceb54fc867f6c6f7a5ab74b3fe2e31bac24f,Ivan Gonzalez,scratchmex@gmail.com,2021-08-13 03:51:17,feat: use regex format spec,1
795,cda76adddbf0ebfce5e55432d37315e6186e9cdb,Ivan Gonzalez,scratchmex@gmail.com,2021-08-13 03:52:00,"refactor(strfuncs): forward format(a, """") to str(a)",1
796,ba47505c4d50ec1bade2a5d8f89472161d728c2f,Ivan Gonzalez,scratchmex@gmail.com,2021-08-13 05:00:26,"feat(scalartypes): forward format(a, """") to str(a)

fix #10645",1
797,ab55903c6291020e843376bd90ac2e6995c38fa8,Ivan Gonzalez,scratchmex@gmail.com,2021-08-13 05:48:02,"test(scalar): add tests for cast/rounding 32 to 64 bits

fix #10645",1
798,17526fabef88a5029ce88cec2c7c18992e146307,Ivan Gonzalez,scratchmex@gmail.com,2021-08-13 17:54:28,refactor(strfuncs): forward __format__ of 0d arrays to scalar types,1
799,07ff4bd1bee068833441f3ecbd94b6717f535f52,Ivan Gonzalez,scratchmex@gmail.com,2022-04-15 03:22:04,ENH: normalize 'g' and 'e' format spec behaviour with Python,3
800,c6424e22c6fba361b083331c9f53c1e868e6f0e7,Ivan Gonzalez,scratchmex@gmail.com,2022-04-16 01:28:45,TST: add cases to non-numeric dtype formatting,2
801,9005d5ce608fc0ce14d21419323b1a05c8f12c9a,Ivan Gonzalez,scratchmex@gmail.com,2022-08-24 22:28:10,chore: some typos and things from reviews,3
802,4f0ab305b0269d474111d0f7c791d7e4d99f3739,Ivan Gonzalez,scratchmex@gmail.com,2022-08-24 23:10:28,fix: forgot to enforce the new kwargs,1
803,6b4bd655b28115aaedd69efc7c9e76a3a3180b47,Ivan Gonzalez,scratchmex@gmail.com,2022-08-25 00:55:20,docs: add release note,1
804,c3d2883151d31bb8d5543c6477493fe7d34550df,Ivan Gonzalez,scratchmex@gmail.com,2022-08-25 01:19:01,fix: typo that broke the tests,1
805,c7aaddbdad14a173bada6d4c11103b32094a82a2,Ivan Gonzalez,scratchmex@gmail.com,2022-08-25 18:46:25,"chore,fix: last suggestions and TODO for general format",6
806,367de93bfedcc3d186c63fa89811ab386523466a,Sebastian Berg,sebastian@sipsolutions.net,2022-09-22 09:15:00,"Apply suggestions from code review

Co-authored-by: Matti Picus <matti.picus@gmail.com>",3
807,9fdb396b914e4b4467d1a1ab0be57afa040e3ea4,Sebastian Berg,sebastianb@nvidia.com,2022-09-22 09:44:14,"MAINT: Fully reject format code 'g' for arrays

(Also auto-reformatted some whitespace...)",2
808,c8448d5a820b40aff17cef42d270e68f568e7461,Ivan Gonzalez,scratchmex@gmail.com,2022-10-17 16:02:23,fix: integers should not be able to have precision,2
809,80611cdfb48a054a8ef3a64122d6b8f1a5704ae9,kshitij12345,kshitijkalambarkar@gmail.com,2021-07-17 09:32:16,[fix] trunc: add int->int loop,4
810,cc1f5768c1b26c76dd04a89fadcb1eb0300f7efe,kshitij12345,kshitijkalambarkar@gmail.com,2021-07-17 20:19:30,add test to verify that dtype is preserved,1
811,3282b5265ffd17ac0a7856c4ebf05a28539b6e81,kshitij12345,kshitijkalambarkar@gmail.com,2021-07-17 20:20:09,add file to upcoming_changes,1
812,5e61bd0b2306b8ce27d0293f4094071d765cd8f0,kshitij12345,kshitijkalambarkar@gmail.com,2021-07-17 21:01:38,try to make doc build happy :),1
813,b7bbc67d018ba223c4451af805d028b82650ae10,kshitij12345,kshitijkalambarkar@gmail.com,2021-10-06 07:32:44,address review,5
814,605d92281b0d50aec3e963232f317f198b6a85cb,kshitij12345,kshitijkalambarkar@gmail.com,2021-10-06 07:37:12,retrigger CI,0
815,afb9a128c518f1912d7adf918818e4bad47c71b5,Kshiteej K,kshitijkalambarkar@gmail.com,2021-11-01 11:31:38,Merge branch 'main' into fix/trunc-int-to-int,300
816,12fe29c882d05930d86880f21f9eb9692f33651b,Kshiteej K,kshitijkalambarkar@gmail.com,2021-11-01 11:33:25,fix lint,1
817,05a02f0ffe82f3b65461e856fc78a06a06df954e,Ajith Ramachandran,ajithar204@gmail.com,2021-06-27 19:38:00,Add dtype argument in `np.choose()`,8
818,ad85bd0c3c0003c69e732f5c1318a049841ecbeb,Ajith Ramachandran,ajithar204@gmail.com,2021-06-27 19:38:22,Add tests for `np.choose()`,1
819,f2cb2dde74cba58445c11b55a118225380cea7fb,Ajith Ramachandran,ajithar204@gmail.com,2021-06-27 20:02:18,update docs of `PyArray_Choose()`,1
820,80c3862cbbe6de48e8fba45b944d6aafaf6413d6,quarrying,quarrying@qq.com,2021-05-28 13:09:47,EHN: add numpy.topk,2
821,042e2ecfa39621157e791e75321b2652e6c62f3f,Per A Brodtkorb,per.andreas.brodtkorb@gmail.com,2021-05-10 05:32:24,"ENH: Update piecewise to handle multivariate functions

The new piecewise function allows to evaluate conditionally functions
of the type f(x1, x2,... ,xn), i.e., functions that have arbitrary
number N of input arguments or multivariate functions.
For a single variate function the call is as before (N=1):

np.piecewise(
    arr_like,
    [cond1, cond2, cond3],
    [func1, func2, func3, func_default],
    *func_args, **func_kwargs)

whereas for a multivariate function with N variables the call is updated to (N>1):

np.piecewise[N](
    arr_like_1,
    arr_like_2,
    ....
    arr_like_N,
    [cond1, cond2, cond3],
    [func1, func2, func3, func_default],
    *func_args, **func_kwargs)",3
822,43a6ca011ae9831a43b61d4dd3cc68a61d0b3b5a,Per A Brodtkorb,per.andreas.brodtkorb@gmail.com,2021-05-11 16:26:18,pep8,1
823,f89634edb179fb2ffb2ba12c45bd9adeaf6ca726,Per A Brodtkorb,per.andreas.brodtkorb@gmail.com,2021-05-11 16:30:02,pep8,1
824,b86c8a3959c65e89bef62795801a44c52d1fc931,Misal Raj,34789277+misalraj@users.noreply.github.com,2021-05-09 17:34:55,DOC: Update a page title with proper case (#18962),1
825,18dd6efc471eb51b405aa454ca610765eaf43ee9,Charles Harris,charlesr.harris@gmail.com,2021-05-10 00:00:10,"ENH: Include co-authors in changelog.

Closes #18969",1
826,d22bdc0e40526b4e691f0622f08480b56ea5bb66,Yashasvi Misra,yashasvimisra_bh@srmuniv.edu.in,2021-05-09 16:02:14,"DOC: add note and examples to `isrealobj` docstring

Clarify that `isrealobj` returns True for non-array input rather
than raise an exception, which may be surprising.

Closes gh-12652

Co-authored-by: Mukulikaa <60316606+Mukulikaa@users.noreply.github.com>",1
827,2a42ccb8764b097a19e61bdaac2b83114b046093,Constanza,constanza.fierro94@gmail.com,2021-05-10 05:25:02,"BUG: fix np.ma.masked_where(copy=False) when input has no mask (#18967)

Fixes gh-18946",2
828,8a70ec84440322ab4b18d3da32b9710c1e93b24e,dependabot[bot],49699333+dependabot[bot]@users.noreply.github.com,2021-05-10 08:27:45,"MAINT: Bump pytest from 6.2.3 to 6.2.4

Bumps [pytest](https://github.com/pytest-dev/pytest) from 6.2.3 to 6.2.4.
- [Release notes](https://github.com/pytest-dev/pytest/releases)
- [Changelog](https://github.com/pytest-dev/pytest/blob/main/CHANGELOG.rst)
- [Commits](https://github.com/pytest-dev/pytest/compare/6.2.3...6.2.4)

Signed-off-by: dependabot[bot] <support@github.com>",1
829,e1ada02a2b7c97cd22d11c3e98a758d66396fb4d,dependabot[bot],49699333+dependabot[bot]@users.noreply.github.com,2021-05-10 08:26:50,"MAINT: Bump sphinx from 3.5.4 to 4.0.0

Bumps [sphinx](https://github.com/sphinx-doc/sphinx) from 3.5.4 to 4.0.0.
- [Release notes](https://github.com/sphinx-doc/sphinx/releases)
- [Changelog](https://github.com/sphinx-doc/sphinx/blob/4.x/CHANGES)
- [Commits](https://github.com/sphinx-doc/sphinx/compare/v3.5.4...v4.0.0)

Signed-off-by: dependabot[bot] <support@github.com>",1
830,93d06f79411b91ab7819cb0ee2c9fd37b2409c90,dependabot[bot],49699333+dependabot[bot]@users.noreply.github.com,2021-05-10 13:17:37,"MAINT: Bump hypothesis from 6.10.1 to 6.12.0

Bumps [hypothesis](https://github.com/HypothesisWorks/hypothesis) from 6.10.1 to 6.12.0.
- [Release notes](https://github.com/HypothesisWorks/hypothesis/releases)
- [Commits](https://github.com/HypothesisWorks/hypothesis/compare/hypothesis-python-6.10.1...hypothesis-python-6.12.0)

Signed-off-by: dependabot[bot] <support@github.com>",1
831,9dec72bf1bd340393d430f2abf21b6bb7c4e8384,Charles Harris,charlesr.harris@gmail.com,2021-05-10 14:19:40,"MAINT: Cleanup tools/changelog.py

* Combine author/co-author search.
* Get rid of 'u' prefix, it is no longer needed.
* Use raw strings in regular expressions",1
832,dc86d03d63311ca80135e4edf596289df3c8847e,Sayed Adel,seiko@imavr.com,2021-05-09 19:33:37,"MAINT, SIMD: Hardened the AVX compile-time tests

  To avoid optimizing it out by the compiler so we make
  sure that the assembler is getting involved.",13
833,e319431933cb58f7cb480899c32a1bc08e967652,Robert Kern,robert.kern@gmail.com,2021-05-07 19:22:28,ENH: manually inline code for performance.,1
834,657ba0e2722f4a17e4f0a0c14776f3eb2e4965ac,Charles Harris,charlesr.harris@gmail.com,2021-05-10 15:59:10,REL: Update main after 1.20.3 release.,4
835,90ea60961d41d173100770d70e138eccb8348b63,HowJmay,yuanyanghau@gmail.com,2021-05-03 06:45:50,DOC: Add missing test comment and fix the typo,1
836,3025414d8c7e298d5a6b26e55b6d882e14806ee0,HowJmay,yuanyanghau@gmail.com,2021-05-03 06:44:21,ENH: Add max/min value comparison for integers,7
837,32b2b1ba645230af7d24a7ec0fcb50d2f5fc33e5,Tania Allard,taniar.allard@gmail.com,2021-05-10 10:50:46,DOC: Add troubleshoot items,2
838,aadd74e27a5ab1f2f629ef0989bcbce014784728,Tania Allard,taniar.allard@gmail.com,2021-05-10 11:16:54,DOC: Fix lists and add images,3
839,bda8033bbe59fb9aa2cb6433fedc3937f9a637b4,Tania Allard,taniar.allard@gmail.com,2021-05-10 12:48:24,DOC: Fix list indentation,1
840,a302009349655ab1eb8203b387093d48d1fe43e9,Tania Allard,taniar.allard@gmail.com,2021-05-10 19:20:02,"DOC: Fix indentation

Co-authored-by: Ross Barnowski <rossbar@berkeley.edu>",1
841,59b23e03658c9c035fd66492a0bf613d2394547b,Tania Allard,taniar.allard@gmail.com,2021-05-10 19:20:44,"DOC: Fix lists indentation

Co-authored-by: Ross Barnowski <rossbar@berkeley.edu>",1
842,6eb59f3c10b9c839fc56d1592aed16286c32461b,Tania Allard,taniar.allard@gmail.com,2021-05-10 19:20:57,"DOC: Remove extra --

Co-authored-by: Ross Barnowski <rossbar@berkeley.edu>",1
843,9346e74d78a6032cfb106ee63aa1816efd7671e1,Tania Allard,taniar.allard@gmail.com,2021-05-10 20:00:29,DOC: Make FAQ titles,1
844,9cdbe43725bc8b8029be49334b2fa10d25da4f6d,Tania Allard,taniar.allard@gmail.com,2021-05-10 20:05:52,DOC: Make screenshot labels bigger,1
845,dfa27ec1ad52610dd7672530f3ef843b2ceeb288,Kasia,kati.leszek@gmail.com,2021-05-09 15:17:54,DOC: Improve datetime64 docs #14299,1
846,5b7ff0006f6f4f6c28cef2c3f0ff971f63de0994,Kasia,kati.leszek@gmail.com,2021-05-09 15:24:11,DOC: Improve datetime64 docs #14299,1
847,49112415082325833f27f9d98b127fd968649f26,Kasia,kati.leszek@gmail.com,2021-05-09 15:41:21,DOC: resolves #14299 - deleting the note,1
848,d5ea33cc17619403aae0ae97149f9e6ab366c9ce,Kasia,kati.leszek@gmail.com,2021-05-09 15:56:35,DOC resolves #14299 rephrasing,1
849,a8a4fd6818bb7ce8e88ad1c1c73fc35a9bd3e46c,Kasia,kati.leszek@gmail.com,2021-05-09 16:23:44,DOC: Improve datetime64 docs #14299 - scalars,1
850,2467d3b3772920080f75c7484c0998e104f7aeee,Kasia,kati.leszek@gmail.com,2021-05-10 13:03:18,DOC Improve datetime64 docs - deleting space,1
851,3ce27ee0359804999dd352d6f1aa1337bd0a381e,Kasia,39829548+katleszek@users.noreply.github.com,2021-05-11 07:22:31,"Update numpy/core/_add_newdocs_scalars.py

Co-authored-by: Matti Picus <matti.picus@gmail.com>",1
852,ed432d80a2c54e9f3278fc3aa91161a849405f1c,Kasia,39829548+katleszek@users.noreply.github.com,2021-05-11 07:22:42,"Update numpy/core/_add_newdocs_scalars.py

Co-authored-by: Matti Picus <matti.picus@gmail.com>",1
853,7caefb4434344f77d90c40c3854bc97144f35021,Kasia,39829548+katleszek@users.noreply.github.com,2021-05-11 10:12:13,"Update numpy/core/_add_newdocs_scalars.py

Co-authored-by: Matti Picus <matti.picus@gmail.com>",1
854,e7d575580c6c7d25cbf73f47eb74de53a5e25ae8,Lisa Schwetlick,mail@lisaschwetlick.de,2021-05-09 09:09:19,add casting argument to equal checking functions. With basic tests. Default casting rule is unsafe.,2
855,80588fe5abbcc0a2c0b154708abf8cc981d2748b,Lisa Schwetlick,mail@lisaschwetlick.de,2021-05-09 09:38:12,linting,1
856,86d8b277a84073ee982055a0e37ded0911961585,Lisa Schwetlick,mail@lisaschwetlick.de,2021-05-17 09:50:54,added documentation for casting keyword,1
857,234d621ba561f200f60d644951a512fecdd991ad,Lisa Schwetlick,mail@lisaschwetlick.de,2021-05-17 09:55:24,linting,1
858,fb74a7368350d2dc3d48277ce888759001dbbe8a,Lisa Schwetlick,schwetli@uni-potsdam.de,2021-07-17 08:59:02,"convert error messages to f-strings

Co-authored-by: Bas van Beek <43369155+BvB93@users.noreply.github.com>",1
859,1d26e90ccab40861d1b5228bdcb4bd1ea6e614d0,Lisa Schwetlick,schwetli@uni-potsdam.de,2021-07-17 09:00:06,"check casting in both directions

Co-authored-by: Bas van Beek <43369155+BvB93@users.noreply.github.com>",1
860,751d93eb2bf29e2c20a9d023838a03060f248b40,Lisa Schwetlick,schwetli@uni-potsdam.de,2021-07-17 09:00:32,"set kw to ""same_kind""

Co-authored-by: Bas van Beek <43369155+BvB93@users.noreply.github.com>",1
861,547ee4380a5c70ded5031b9706ac154613bd0110,Lisa Schwetlick,lisa.schwetlick@uni-potsdam.de,2021-07-17 09:06:53,add information to stub file,1
862,42436c0bb5e2af222c448b1a0d1b00df6794ba64,Lisa Schwetlick,lisa.schwetlick@uni-potsdam.de,2021-07-17 09:09:38,Merge branch 'main' into equal,300
863,9f2b73ddb41d0e72b7913faf1724b289322398b2,Lisa Schwetlick,lisa.schwetlick@uni-potsdam.de,2021-07-17 09:14:57,linting,1
864,ee4adebb23ce8a4d39930293e81d404a29d49695,Lisa Schwetlick,lisa.schwetlick@uni-potsdam.de,2021-07-17 09:15:13,Merge branch 'equal' of github.com:lschwetlick/numpy into equal,300
865,0104335a23732f494ad8c97a36f65d2b1fa8057f,Lisa Schwetlick,lisa.schwetlick@uni-potsdam.de,2021-07-17 09:26:44,add bidirectional can_cast to all functions,1
866,908dae6e9fd4d3ec008c5f57d1f01833da3acd64,Lisa Schwetlick,lisa.schwetlick@uni-potsdam.de,2021-07-17 09:32:56,lint some more,1
867,5787098331249f2a0b4df4dd40fb91a83d29e2ae,christos val,cv1038@wildcats.unh.edu,2021-03-21 23:37:34,add asarray to polybase call method,1
868,741b0becbd03934585210556df7478ceec24b000,christos val,cv1038@wildcats.unh.edu,2021-03-21 23:51:03,add release note,1
869,85f0224bbd716ced7f2c25f4dc279c5332dafd35,zolboo1024,erdenebz@dickinson.edu,2021-03-17 12:04:30,tried a bug,1
870,ce57efe4e9f741b45b45ccfb462668e9caa1c9c3,zolboo1024,erdenebz@dickinson.edu,2021-03-17 14:12:31,Implemented a count_nonzero function for masked arrays that counts unmasked values that is 0.,4
871,440af9d8d3232bc28c781b135ca3f3c9f6e74752,zolboo1024,erdenebz@dickinson.edu,2021-03-17 14:17:37,merging master,1
872,6b3afdd68ba24c982571155280cb6a53197f6415,zolboo1024,erdenebz@dickinson.edu,2021-03-17 14:17:47,Merge branch 'master' into ma_count_nonzero,4
873,2d67968f8b5e731febd9c8e81a9e3b611f8bddc6,zolboo1024,erdenebz@dickinson.edu,2021-03-17 15:05:26,fixed formatting issues that were causing automatic tests to fail,3
874,4acf1cbac2962544f64f63cdbc80bceb121a602d,zolboo1024,erdenebz@dickinson.edu,2021-03-23 20:57:27,added a release note to the PR,1
875,d918653bd460b234c3daeade37b006b96602a671,zolboo1024,38169804+zolboo1024@users.noreply.github.com,2021-03-29 01:17:16,Delete numeric.py,1
876,b5a9bed4ceb32f2a0f341b910e4c7f75d6d2865e,zolboo1024,38169804+zolboo1024@users.noreply.github.com,2021-03-29 01:17:34,Delete linalg.py,1
877,e8e9345276ea9629ef066f640de6ee947860aaf1,zolboo1024,38169804+zolboo1024@users.noreply.github.com,2021-03-29 05:52:53,"Revert ""Delete linalg.py""

This reverts commit b5a9bed4ceb32f2a0f341b910e4c7f75d6d2865e.",1
878,dc58f9b0c7b1bfbfeb1178802088b37a8acb19d9,zolboo1024,38169804+zolboo1024@users.noreply.github.com,2021-03-29 05:52:55,"Revert ""Delete numeric.py""

This reverts commit d918653bd460b234c3daeade37b006b96602a671.",1
879,72be21f6e932bcb0fbe174fcbd0f1de5788ec84c,zolboo1024,38169804+zolboo1024@users.noreply.github.com,2021-03-29 01:56:25,Got rid of the long lines,1
880,9d95874fadcdd5101c23916e507ee11c4e5260b0,zolboo1024,38169804+zolboo1024@users.noreply.github.com,2021-04-16 19:54:13,"Update numpy/ma/core.py

Co-authored-by: Charles Harris <charlesr.harris@gmail.com>",1
881,c034d33b36048bf28a12ceb207286a3884520004,Tamara Dakic,tdakic@gmail.com,2021-02-25 20:36:27,"Bug fix for 18435
arr = np.fromstring(""\n"", sep="" "") now retuns []",1
882,70072c36f2101b4068916449446b4ed5fadb27df,Tamara Dakic,tdakic@gmail.com,2021-02-25 20:57:55,removed an unused variable,1
883,a47d5a792ea439d023a53c889b1e9991c7df5327,Tamara Dakic,tdakic@gmail.com,2021-02-25 22:36:20,fixed a typo in a comment,1
884,f2ba5f9ecd85a318ef3916d1d2639af45da31ba9,melissawm,melissawm@gmail.com,2021-02-16 16:56:19,BUG: Raise ValueError on strings with smaller than expected byte-size,3
885,2209ee3fd953b4f524d6fff91f9531943f4fcc77,melissawm,melissawm@gmail.com,2021-03-05 20:57:34,Add tests for other intents,2
886,b5f3a35af40dd85ca78f36fadb5f270acbd30f6d,melissawm,melissawm@gmail.com,2021-03-18 20:08:47,Add linter suggestions.,1
887,2474c4717a40f37eaf5e5a06f608403c5d5c6672,Joseph R. Fox-Rabinovitz,jfoxrabinovitz@gmail.com,2021-02-10 10:21:35,ENH: Added atleast_nd to numpy and ma,14
888,b90bfc8e5dd575fae99474c79d32c8df292b9083,DPDmancul,dp.d-@live.it,2020-12-23 17:05:06,"sqnorm implementation
some norm cases was rewritten to reuse sqnorm",1
889,72fe16dc7848d935f45086a1f5c023446660da9d,DPDmancul,dp.d-@live.it,2020-12-28 17:48:51,sqnorm tests,1
890,25686d19b61d5113ff141a227ed5ae732a72f9a4,serge-sans-paille,serge.guelton@telecom-bretagne.eu,2020-11-21 19:34:29,"Automate signature computation for builtin functions

This improves the compatibility with the inspect module.",3
891,5a0cee28174706cfb8c9b2744d1809fff5630885,Khem Raj,raj.khem@gmail.com,2020-11-15 23:32:39,"numpy/core: Define RISCV-32 support

Helps compile on riscv32

Signed-off-by: Khem Raj <raj.khem@gmail.com>",2
892,fcc2325f751572c7f2dd891afe4a4c2ffd25941a,Niranjan Krishna,realniranjankrishna@gmail.com,2020-10-23 07:37:33,Fixed Bug,1
893,b57d3678954930c19b8aaacf52e7c2afe6e0cf31,Niranjan Krishna,realniranjankrishna@gmail.com,2020-10-23 07:46:43,Fixed Bug,1
894,91cc647f5899887e0e691b2b63e7f44c381b246d,Niranjan Krishna,realniranjankrishna@gmail.com,2020-10-25 03:00:28,Added tests,1
895,19e6413e62bf57a0299e18ba552f7821020fd693,Ganesh Kathiresan,ganesh3597@gmail.com,2020-10-20 09:52:12,ENH: Changed repr of np.bool_,1
896,01146215d37f7c14c6d7fba1de4445fbef3e1268,Ganesh Kathiresan,ganesh3597@gmail.com,2020-10-20 10:50:43,ENH: Used raw boolean value,1
897,6161aec36190a7e146348773d2246345d6ed8450,Ganesh Kathiresan,ganesh3597@gmail.com,2020-10-20 16:55:19,ENH: Refactored to use PyUnicode_FromString,1
898,9d444f47a7add658c4f28237c110910540502bca,Ganesh Kathiresan,ganesh3597@gmail.com,2020-10-21 13:36:32,ENH: Fixed doc-string,1
899,318d1de87afe83fbd827d3979f1304ed5076eecf,Ganesh Kathiresan,ganesh3597@gmail.com,2020-10-26 13:40:42,ENH: Added release notes (#17592),1
900,3b2e6a51a7044bc7407aed1b5e1567bd9e0edee8,Ganesh Kathiresan,ganesh3597@gmail.com,2020-10-27 13:42:29,ENH: Fixed release notes `np.bool_` repr (#17592),1
901,bbaeadda90c035acaa07026dfa95fa9e8882172a,Eric Wieser,wieser.eric@gmail.com,2020-11-01 22:15:43,Update doc/release/upcoming_changes/17592.improvement.rst,1
902,fbe6db7f39d112e2be4c2b19613191f6e8d2508a,Ganesh Kathiresan,ganesh3597@gmail.com,2020-11-20 09:58:00,ENH: Changed repr of ints,1
903,18d91c0b593377bfb19cd699ef9212d76ef05d62,Ganesh Kathiresan,ganesh3597@gmail.com,2020-11-20 10:14:49,ENH: Changed repr of ints to use tp_name,1
904,0ea5427266291d556cd375b073111244169e7b8a,TAnhMinh,47211291+TAnhMinh@users.noreply.github.com,2020-10-14 09:22:37,"Add files via upload

DOC: Add images illustrating how-to-io.rst

Add .. image:: how-to-io-image.pdf and .. image:: how-to-io-image.png and their tex. source file.",3
905,61e90d06d7c1a8aa5d90ffb3c8bb2730d5e5e4ed,TAnhMinh,47211291+TAnhMinh@users.noreply.github.com,2020-10-14 09:28:53,"Merge pull request #1 from TAnhMinh/TAnhMinh-io-images

Add files via upload",3
906,6dc9a1b769c5871fc7fefdf569f3dfab4d086d88,Kurt Mohler,kurtamohler@gmail.com,2020-10-04 17:47:40,"BUG: fix reciprocal of `0+0j` to be `inf+nanj`

This change makes `np.reciprocal(0+0j)` return the same result as
`1 / np.array(0+0j)`. See #17425",2
907,96954eada4a85ed27c403d8029cb5b930b46d93e,Bas van Beek,b.f.van.beek@vu.nl,2020-08-14 15:15:02,BUG: Allow `fillchar` to take array-like object of bytes,1
908,c4cef8b0a7e40b96e89e2e81d7ee167088389f14,Bas van Beek,b.f.van.beek@vu.nl,2020-08-14 15:15:48,TST: Test `fillchar: List[bytes] = ...`,1
909,9114becee335138c6f888c244594c53b2f2d6830,Bas van Beek,b.f.van.beek@vu.nl,2020-08-19 15:57:26,TST: Increase the variety of the `fillchar` tests,1
910,2236da3b0984d7887d377f17ebe2f1590237b5f0,vrakesh,rakesh.nvasudev@gmail.com,2020-08-04 21:56:41,Add deprecation warning to complex ordering comparisons,1
911,163c7114267311b26a4851cabd45c1430f41a452,vrakesh,rakesh.nvasudev@gmail.com,2020-08-08 23:00:57,"Change existing tests, for complex comparisions",7
912,41f2b6e21b30d49fdc5dc181fed51e72a373f3f0,Aaron Meurer,asmeurer@gmail.com,2020-08-04 21:46:57,"Call str on the third argument of assert_equal()

This lets you pass any object, similar to how you would do for a native Python

assert a == b, msg",1
913,06670b5a8e6f5b63685468d4b3e3b5418f32620f,Aaron Meurer,asmeurer@gmail.com,2020-08-06 19:56:31,Add a news entry for 17011,1
914,27d87083fae641c3a7ae243cd633aa80f861621a,Aaron Meurer,asmeurer@gmail.com,2021-06-11 22:46:26,BUG: Fix underlining in release note.,1
915,3817dc85245aa43ea622e808841c156f30f7c5a3,Eric Moore,ewm@redtetrahedron.org,2020-07-24 18:35:21,BENCH: Add benchmark for searchsorted,1
916,235b7318fa93e264fef71d4c80beff498d47275b,Eric Moore,ewm@redtetrahedron.org,2020-05-22 12:14:26,MAINT: Move copycast_isaligned out where it can be used elsewhere.,3
917,327327dddd54ae5d6389a14a7ded8f03cf13eb1d,Eric Moore,ewm@redtetrahedron.org,2020-07-24 18:48:06,MAINT: adjust runtests.py so that bench compare works,1
918,e773aea8252fa8ae6bf79f434c65db199474980e,Eric Moore,ewm@redtetrahedron.org,2020-07-31 01:47:17,"BLD: Merge the npysort library into multiarray

This will no longer build npysort as library that is linked into
multiarray. This library was not installed and was not linked to
anything else.",1
919,c7e991b8e5a1439741e4aadb9e10f712bdd164bf,Eric Moore,ewm@redtetrahedron.org,2020-07-24 18:49:13,"ENH: Don't always make full copies in (arg)searchsorted

fixes gh-13579",3
920,0e4d46cb7dc13cc6183e17f79cf6605f6b8b058f,Alex,aprockhill206@gmail.com,2020-07-23 18:27:45,"attempt at fix, change docs to rst",2
921,f85efe75e5175ec20fb9c91acff16820bf5c99a8,Alex,aprockhill206@gmail.com,2020-07-23 18:52:59,fixed int overflow,1
922,17975bc6df0de7e5089adcbd23e449772243a06c,Alex,aprockhill206@gmail.com,2020-07-23 18:56:06,changed release note,1
923,56668805f1c2615a3c834f651c2eaebb7c441a50,Alex,aprockhill206@gmail.com,2020-07-23 19:04:42,added tests for RunTimeError,2
924,b64488b60ba49345ceea2613574ca608f162ab4b,Alex,aprockhill206@gmail.com,2020-07-24 00:44:13,fixed overflow issues,1
925,0099f650c19ec47de9700aaad52d57684c13f21f,Alex,aprockhill206@gmail.com,2020-07-24 00:45:27,changed to abs,1
926,7b65a9f9e3d64d1e47c4429b9a4de384dc8e2c9e,Alex,aprockhill206@gmail.com,2020-08-10 15:29:56,moved int64 conversion so error is in front,1
927,2c3dad81ddb2555f606daa7b79e4945c1e230b50,Alex,aprockhill206@gmail.com,2020-08-10 16:50:10,added uint64 support,2
928,4d0eefadd636adc64c1684e6bcdb6c4a9b1fae73,r08922129,r08922129@csie.ntu.edu.tw,2020-07-14 11:03:16,ENH:add weight feature into numpy.quantile,3
929,7930b891adcc98adac91b457c46c3f82e39167ee,Sebastian Berg,sebastian@sipsolutions.net,2020-07-12 20:50:42,"API: Allow zero length strings to result in zero length dtypes

The dtype is of zero length strings is no preserved when creating
an array from a scalar in more cases.
This also simplifies the `PyArray_FromScalar` code so that the
(mainly unused) casting branch reuses `PyArray_Pack` to avoid
implementing similar logic multiple times.",4
930,7279a7dfd45368faf6b35b5e1f8790c629886dd9,Sebastian Berg,sebastian@sipsolutions.net,2020-08-13 15:15:49,"Update numpy/core/src/multiarray/scalarapi.c

Co-authored-by: Eric Wieser <wieser.eric@gmail.com>",1
931,b9aaffed669ebf9d091a4072a790ab2722d2fb94,Sebastian Berg,sebastian@sipsolutions.net,2020-08-13 15:17:38,Update numpy/core/src/multiarray/ctors.c,1
932,757864d96cbc9711bb5034b980fc8b08c3ce9404,Sebastian Berg,sebastian@sipsolutions.net,2020-08-13 15:18:07,Update numpy/core/src/multiarray/ctors.c,1
933,efdce58daba309924f42578f4ce69b8bcd1a1842,Charles Harris,charlesr.harris@gmail.com,2021-04-21 22:31:21,"Update numpy/core/tests/test_array_coercion.py

Co-authored-by: Eric Wieser <wieser.eric@gmail.com>",1
934,000dfda49a012bd38efc6fbb89ece58279895bad,Sebastian Berg,sebastian@sipsolutions.net,2020-05-25 16:36:52,"ENH: Implement divmod and remainder for timedelta and int

Also fixes that we should not be giving warnings when the input
is already a NaT.",5
935,301204889b80b9cbd3f121879513975938b5ece5,Pan Jan,rumcajsgajos@gmail.com,2020-04-29 15:50:15,Add some scripts,7
936,092714fdcc363420ac83c3519203edb33b912715,Pan Jan,rumcajsgajos@gmail.com,2020-04-30 06:37:22,Update test_umath_accuracy.py,2
937,5d4ec507d7ab83dc4f3f955ac5411e1608e0858c,Pan Jan,rumcajsgajos@gmail.com,2020-04-30 06:44:56,Minor refactor,3
938,f69782dd5eb27e3855b763d2ec53bb868c53ef76,Sayed Adel,seiko@imavr.com,2020-04-04 09:27:02,ENH: Provides a deep benchmark for universal functions,1
939,5e557b5e28284950898dfd7cee9893f709bdcc5d,Sayed Adel,seiko@imavr.com,2020-08-03 21:52:03,"ENH: Standalone benchmark script for the inner loops of ufunc

    This script only measuring the performance of inner loops
    of ufunc, the idea behind it is to remove umath object calls
    from the equation, in order to reduce the number of noises and
    provides stable ratios.",2
940,519d4640617e925f0dd97bdacf54efdf1e450e06,Sayed Adel,seiko@imavr.com,2020-11-14 19:07:29,improve argument parsing and add new option `--rand-range`,1
941,cd05ff63f20830ede3d270e6327e6dfd1bd51dd1,Sayed Adel,seiko@imavr.com,2020-11-14 19:13:32,print numpy info,1
942,d1378a94ae5494ec8a6a8c1b0ffa869853d10cf2,KoningR,R.M.Koning@student.tudelft.nl,2020-03-23 13:16:30,"ENH: Generalize split function to split matrix into sub-matrices.

Closes #15380

Co-authored-by: KoningR <r.m.koning@student.tudelft.nl>
Co-authored-by: erwinvanthiel <e.l.vanthiel@student.tudelft.nl>",2
943,a7eb9176e7f8732339957337bf53c7940a9f1ce1,KoningR,R.M.Koning@student.tudelft.nl,2020-03-24 17:01:18,Merge branch 'master' of https://github.com/numpy/numpy into generalize-split-for-matrices,7
944,a4d08dbcfc21c9433b84c2a619d581379a1f1fd6,KoningR,R.M.Koning@student.tudelft.nl,2020-03-24 17:01:45,"ENH: Extend split() and array_split() to handle N-dimensional arrays.

Closes #15380

Co-authored-by: KoningR <r.m.koning@student.tudelft.nl>
Co-authored-by: erwinvanthiel <e.l.vanthiel@student.tudelft.nl>",2
945,63ba5cb92a236a658727f1648053030969beff1b,KoningR,R.M.Koning@student.tudelft.nl,2020-03-24 17:20:13,"TST: Remove test_three_dimensional_axis_order because it was a duplicate.

Co-authored-by: KoningR <r.m.koning@student.tudelft.nl>
Co-authored-by: erwinvanthiel <e.l.vanthiel@student.tudelft.nl>",1
946,9367727b65f747cea1ba01eeab261d3a49acb073,KoningR,R.M.Koning@student.tudelft.nl,2020-03-25 11:01:43,Merge branch 'master' of https://github.com/numpy/numpy into generalize-split-for-matrices,10
947,3ac7591a2472d31d5ffd31190f005526b17d909f,KoningR,R.M.Koning@student.tudelft.nl,2020-03-25 11:03:54,"MAINT: Correct examples in split and array_split and change comparison operator in N-dimensional split functionality.

Co-authored-by: KoningR <r.m.koning@student.tudelft.nl>
Co-authored-by: erwinvanthiel <e.l.vanthiel@student.tudelft.nl>",2
948,bc86692a6d6b831f544b9a04fdbb57e7b37f0762,KoningR,R.M.Koning@student.tudelft.nl,2020-04-01 16:53:09,Merge branch 'master' of https://github.com/numpy/numpy into generalize-split-for-matrices,80
949,fe499d000eecfca9767e808d4d558176ebf2903a,KoningR,R.M.Koning@student.tudelft.nl,2020-04-01 16:53:28,"ENH: Change return type of multidimensional split to object array.

Co-authored-by: KoningR <r.m.koning@student.tudelft.nl>
Co-authored-by: erwinvanthiel <e.l.vanthiel@student.tudelft.nl>",3
950,8138dfadab4904d679844bdea7e63d319c3e0eb5,KoningR,R.M.Koning@student.tudelft.nl,2020-04-13 18:27:03,"MAINT: Format examples in split and array_split differently.

Co-authored-by: KoningR <r.m.koning@student.tudelft.nl>
Co-authored-by: erwinvanthiel <e.l.vanthiel@student.tudelft.nl>",1
951,ccdfbb0d48a0363ec32b2d5019b3cd04af95557d,KoningR,R.M.Koning@student.tudelft.nl,2020-04-13 18:29:38,Merge branch 'master' of https://github.com/numpy/numpy into generalize-split-for-matrices,33
952,6504c093227b0c76ea242007c2fb0c07bf98f546,KoningR,r.m.koning@student.tudelft.nl,2021-04-20 20:58:22,"Merge branch 'main' of https://github.com/numpy/numpy into generalize-split-for-matrices

 Conflicts:
	numpy/lib/shape_base.py",300
953,6f27da6ef2aaa5dc594e6e447aa9c371aca6f60d,KoningR,r.m.koning@student.tudelft.nl,2021-04-20 21:24:20,TST: Add test for zero-dimensional split and reformat existing tests.,3
954,069d9c0fb596f1d5b264439aa6ce7edc9ab5a151,KoningR,r.m.koning@student.tudelft.nl,2021-04-20 22:22:37,MAINT: Truncate array_split comments to <80 characters.,1
955,c60382269e799c1c4a3903e789b68f47f802381a,KoningR,r.m.koning@student.tudelft.nl,2021-04-21 09:43:20,Merge branch 'main' of https://github.com/numpy/numpy into generalize-split-for-matrices,3
956,71dfd592080ba6542b36c2c61a11aa7f5850565e,KoningR,r.m.koning@student.tudelft.nl,2021-04-21 09:50:53,MAINT: Change doctest array print.,1
957,417fefcd91268e320c1abc42cc3934ec9dbeb2d5,KoningR,r.m.koning@student.tudelft.nl,2021-04-21 14:09:28,Merge branch 'main' of https://github.com/numpy/numpy into generalize-split-for-matrices,9
958,7264c82c4e5435f4b621611da210f3c7fffc53ae,KoningR,r.m.koning@student.tudelft.nl,2021-04-21 14:10:20,ENH: Allow N-dimensional split with 1 integer.,2
959,0124702548288bca1942ba50c131d5287d962e01,KoningR,r.m.koning@student.tudelft.nl,2021-04-21 15:40:50,Merge branch 'main' of https://github.com/numpy/numpy into generalize-split-for-matrices,2
960,4cf693d1d59cc5050fd3d51e995195125de1bfab,KoningR,r.m.koning@student.tudelft.nl,2021-04-21 15:40:56,MAINT: Reformat doctest for integer split.,1
961,0fd738627783fe4bd092d0f383ab85bb0922eb3a,KoningR,23524378+KoningR@users.noreply.github.com,2022-07-07 13:14:59,"TST: Reshape test array to 2x2.

Co-authored-by: Eric Wieser <wieser.eric@gmail.com>",1
962,3ae13038e3f6f7471737d18886bf4de7d41a26d1,KoningR,R.M.Koning@student.tudelft.nl,2022-07-07 13:26:38,Merge remote-tracking branch 'upstream/main' into generalize-split-for-matrices,300
963,6c57de71b61156c89e886739354614a765e59d4d,Ryan Birmingham,birm@rbirm.us,2020-02-25 06:44:58,"BUG: complex special case for clip

See #15630",4
964,49cd6cb6c6e24f5a4069d57e6547f0bb40355af3,Charles Harris,charlesr.harris@gmail.com,2021-04-12 20:06:27,Merge branch 'main' into clipfix,300
965,e251ea1d778972bf52be36417d31149e5661d39e,Ryan Birmingham,birm@rbirm.us,2022-06-14 21:34:04,pull main into clipfix,300
966,ad6ba2ab5ef610aeb08131172def949eaee0fb2f,Ryan Birmingham,birm@rbirm.us,2022-06-14 21:39:38,add release note,1
967,a955df4d6c8b4250cbf249fb7a8e73f4e25b6746,Melissa Weber Mendonça,melissawm@gmail.com,2020-01-20 13:39:17,"BUG, ENH: Adds support for parameter arrays in fortran code",4
968,5512958332bfec3cdb1538d0e57aab34fc4d6d7e,Rohit Goswami,rog32@hi.is,2023-04-15 19:44:10,"TST: Cleanup rebase issue, no prints in tests",1
969,1e7effb1b55baee78d40958de8a2bce1e25ddbb6,Magdalena Proszewska,magdalena.proszewska@gmail.com,2023-03-30 09:00:11,ENH: Add 'out' in tensordot,2
970,e351fe3eaec1e37d5a762240934be699f5b8583f,Magdalena Proszewska,magdalena.proszewska@gmail.com,2023-03-30 09:01:30,Fix type of error,1
971,7da0de71466bb5e828362e80ccf5d9e01515eeb1,Magdalena Proszewska,magdalena.proszewska@gmail.com,2023-03-30 09:02:56,Fix test,1
972,d624ba3ce3256bfbf7c5468519884b9a3c85746a,Magdalena Proszewska,magdalena.proszewska@gmail.com,2023-03-30 09:03:52,Add copy check,1
973,effc457c4be84888bed4f038d1cbc3ffce29e837,Magdalena Proszewska,magdalena.proszewska@gmail.com,2023-03-30 09:05:44,Check return array,1
974,288c1b8cf6a974b962bd98b95000f0b5759e8db8,Magdalena Proszewska,magdalena.proszewska@gmail.com,2023-03-30 09:08:03,Fix umath test,1
975,df69d78467f07703b51d677f7172b68a0715994c,Lars Grueter,lagru@mailbox.org,2019-12-26 12:04:55,"ENH: Add nd-support to trim_zeros

Add support for trimming nd-arrays with trim_zeros while preserving the
old behavior for 1D input. The new parameter `axis` can specify a single
dimension to be trimmed (reducing all other dimensions to the envelope
of absolute values). If None or multiple values are specified, all or
the selected dimensions are trimmed iteratively.

This should make the function applicable to more use cases.

Additionally provide the `atol`, `rtol` and `return_lengths` parameters.
The first two control what is considered  a ""zero"" to be trimmed, the
latter provides the user with the on how much was trimmed.",1
976,935b1c810ecd9477307f891c8686d9d41cfed39a,Lars Grueter,lagru@mailbox.org,2019-12-26 13:18:06,"MAINT: Address empty and all-zero input

in trim_zeros.",1
977,571348ef3ef517a1e54f86adb98dc8593733c96e,Lars Grueter,lagru@mailbox.org,2019-12-26 17:42:52,"MAINT: Honor trim order

In case the user passes in an all-zero array and string to `trim` that
starts with ""b"", the last dimension should be sliced first. In all other
cases the first dimension takes precedence.",1
978,9fd1bbfcd39090a46235b71bd1167a1891345bd8,Lars Grueter,lagru@mailbox.org,2019-12-27 10:03:42,"MAINT: Remove atol and rtol from trim_zeros

It's easy to emulate this behavior by assigning zeros appropriately
beforehand.",1
979,5d6b9d1c99c1763bd9b64abb45babf10ddbbe086,Lars Grueter,lagru@mailbox.org,2020-01-13 15:53:39,TST: Test basic nd-support for trim_zeros,1
980,c75168bd348c766dd32c3515e0c1a06baabb592e,Lars Grueter,lagru@mailbox.org,2020-01-13 15:52:51,"ENH: Add arg_trim_zeros

as it's own function. trim_zeros uses its output to newly support the
nd-case.",1
981,53ebda1e9eb39f603f5bf622115bd0318ee28fc1,Lars Grueter,lagru@mailbox.org,2020-01-13 16:45:53,ENH: Support trimming nd-arrays that are all-zero,2
982,aa422b7c391a28dc1d09ba9dbd8e2945b54a9537,Lars Grueter,lagru@mailbox.org,2020-01-13 19:59:27,MAINT: Address attribute error in trim_zeros,2
983,fa9a0a7a2a498ec433f001beceeafdb002e53758,Lars Grueter,lagru@mailbox.org,2020-01-14 10:19:23,"MAINT: Make arg_trim_zeros output consistent

Ensure that the returned start and stop arrays of indices have exactly
one dimension.",1
984,a64927c1b3ef774fac35a9c48255d865afa8142f,mpro,magdalena.proszewska@gmail.com,2019-12-26 12:05:39,"Add warning in median, percentile and quantile",1
985,2b6978055d669d1df62df5528ffd4239dd9fe012,mpro,magdalena.proszewska@gmail.com,2019-12-26 12:11:41,"Add warning in median, percentile and quantile",1
986,0c8fbb668e4ed11826c1eaa454e18cc89ec347ac,mpro,magdalena.proszewska@gmail.com,2019-12-26 12:16:19,Remove newline,1
987,6c47c0424475a19d8ac9d5665c5494b340c341a7,mpro,magdalena.proszewska@gmail.com,2019-12-26 14:59:13,Fix warnings,1
988,1a935f247298ff331a02e3986b2195ca03da4939,mproszewska,magdalena.proszewska@gmail.com,2020-01-13 18:01:24,Mention ma.median in median,1
989,818ca42fab6f6a47a2cec10f67acee534d57f228,mproszewska,magdalena.proszewska@gmail.com,2020-01-13 18:02:55,Fix note,1
990,3373ae72e5639faffefecf6850344ea511fe434e,psimaj,przemyslaw.simajchel@gmail.com,2019-12-10 17:38:32,ENH: add the array_of_lists_to_array function,1
991,4f7f2b4482a2dc74ba96de288a447349f69c552a,psimaj,przemyslaw.simajchel@gmail.com,2019-12-10 17:42:32,TEST: add array_of_lists_to_array tests,1
992,dcc6476f7e95d605f050dd371deb053e953a5701,psimaj,przemyslaw.simajchel@gmail.com,2019-12-10 21:01:04,ENH: add the array_to_array_of_lists function,1
993,9e9180cd81e7830154553eb097bc6d712868d826,psimaj,przemyslaw.simajchel@gmail.com,2019-12-10 21:02:05,TEST: add array_to_array_of_lists tests,1
994,05fd835164468db879930d5243a869259644d7fc,Audrey Jones,aujones@umich.edu,2019-12-10 03:28:58,Added offset to fill_diagonal,2
995,df7b0cc68b852aa518fb4adf1b457f275ea736c9,Audrey Jones,aujones@umich.edu,2019-12-10 03:32:54,Added comment explaining new offset parameter in fill_diagonal,1
996,16bf51e3067077c40d09127c4fd5cb1f21bda8cd,mpro,magdalena.proszewska@gmail.com,2019-11-27 09:58:57,ENH: Add datatime64 support in np.interp,2
997,7753262971430eb0e3d040ab30e6fa8b07768462,mpro,magdalena.proszewska@gmail.com,2019-11-27 17:16:07,Add test with TypeError,1
998,be7bc4b4cb757d7e516b112726c50910a4c10fdc,mpro,magdalena.proszewska@gmail.com,2019-11-28 13:28:30,Add example in np.interp,1
999,853472890a59610aebad4303d53ee8b432849004,mpro,magdalena.proszewska@gmail.com,2019-12-07 18:47:30,Delete assert,1
1000,a4a70cb64c5dbbeee94f7500c95ab288feab4ae5,mpro,magdalena.proszewska@gmail.com,2019-12-10 17:51:25,Fix typo and run tests again,1
1001,3c0c22457c218a4295fc6adda479ed3189ea67f8,Kevin Mader,kmader@users.noreply.github.com,2019-11-11 11:06:03,"Adding parameters to unwrap

Adding optional min_val and max_val to unwrap without changing normal behavior (discont is overwritten unless it is explicitly specified)",1
1002,6cab782035e95c477804527a6da0057d9eb76135,Kevin Mader,kmader@users.noreply.github.com,2019-11-11 11:14:26,BUG: fixing typos and cleaning up arguments,1
1003,6053aebd1cbea332b759def6b22ae7cf1e7723e8,Kevin Mader,kmader@users.noreply.github.com,2019-11-11 11:26:04,"BUG: updating signature, changed documentation",1
1004,b778acab5fe41e6045e9bef3ae2b5426a9108962,Kevin Mader,kmader@users.noreply.github.com,2019-11-11 16:42:12,"Update numpy/lib/function_base.py

Co-Authored-By: Eric Wieser <wieser.eric@gmail.com>",1
1005,125435a6f7a9546c23458bbeb8e8e3327c045cf1,Kevin Mader,kmader@users.noreply.github.com,2019-11-11 16:42:19,"Update numpy/lib/function_base.py

Co-Authored-By: Eric Wieser <wieser.eric@gmail.com>",1
1006,8f691633bdbbd575f47d702674e2256db080e386,Kevin Mader,kmader@users.noreply.github.com,2019-11-11 16:42:55,"Update numpy/lib/function_base.py

Co-Authored-By: Eric Wieser <wieser.eric@gmail.com>",1
1007,5a229955b5a96ac5a0ba200f7be245d252868f97,Kevin Mader,kmader@users.noreply.github.com,2019-11-11 16:43:05,"Update numpy/lib/function_base.py

Co-Authored-By: Eric Wieser <wieser.eric@gmail.com>",1
1008,5cff7aa8050b4624c0aa9d1d1494e02cb665e0a9,Kevin Mader,kmader@users.noreply.github.com,2019-11-11 16:43:10,"Update numpy/lib/function_base.py

Co-Authored-By: Eric Wieser <wieser.eric@gmail.com>",1
1009,675abb1e97dadbe5117dbd6d08ed96444ab32324,Kevin Mader,kmader@users.noreply.github.com,2019-11-14 13:05:13,"DOC: adding more documentation

improving documentation in response to input from @eric-wieser",1
1010,328968747c02a72f8fe321ec851961c47f6f6ca7,Kevin Mader,kmader@users.noreply.github.com,2019-11-14 13:23:20,"adding minmax argument tests

adding tests",1
1011,99969df0f7d5bc9de872e3f25874520b38c5ef79,Kevin Mader,kmader@users.noreply.github.com,2019-11-14 13:56:26,improving tests to cover discont!=(max_val-min_val)/2,1
1012,c991aa35397a0e257ae7b71d2fd4073479092b6a,Kevin Mader,kmader@users.noreply.github.com,2019-11-14 22:51:33,adding `np.` for functions that needed it,1
1013,1aafaf19118e830bc5f21f1ad477782cd7ecaef9,Kevin Mader,kmader@users.noreply.github.com,2019-11-14 23:00:56,DOC: updating docstring,1
1014,a961eed7b326208bca21d2318b4259594d2b6fe1,Kevin Mader,kmader@users.noreply.github.com,2019-11-15 09:11:23,adding parens to docstring,1
1015,ce6ca0c10a8600b1454689a220d5e94d7ebdcbe3,Kevin Mader,kmader@users.noreply.github.com,2019-11-15 09:25:30,adding release note,1
1016,73616d8e28c43d38affa6f1ffa8785ce006f0261,Kevin Mader,kmader@users.noreply.github.com,2019-11-27 22:10:19,"Update doc/release/upcoming_changes/14877. new_feature.rst

Co-Authored-By: Eric Wieser <wieser.eric@gmail.com>",1
1017,55628cfddf671f1ab303c724d6457c584c45c46a,Kevin Mader,kmader@users.noreply.github.com,2019-11-27 22:11:04,"Update doc/release/upcoming_changes/14877. new_feature.rst

Co-Authored-By: Eric Wieser <wieser.eric@gmail.com>",1
1018,d7c570f54f2afa83a7956f344b7e348fc9627536,Kevin Mader,kmader@users.noreply.github.com,2019-11-27 22:14:12,"Update 14877. new_feature.rst

fixing underline",1
1019,ba36d30720ec65f9cfdf34d1449d7036dec80a02,Kevin Mader,kmader@users.noreply.github.com,2019-11-27 22:37:21,"adding explicit sequences

changing the input and adding explicit sequences",1
1020,317738ecd0e2a62dd19d092d63c4b72517ed4159,Kevin Mader,kmader@users.noreply.github.com,2019-11-29 11:21:57,"Update function_base.py

updating examples",1
1021,ec1d6483976f5c558012e3f053c429b8ab8733f9,Michael Haas,micha2718l@gmail.com,2019-11-05 22:07:27,"Merge pull request #1 from numpy/master

catch up to numpy",28
1022,090554129bca98c71ceb2327b1d0c548c6fd10dd,Michael Haas,micha2718l@gmail.com,2019-11-06 06:37:33,pushing all args out of casting errors,1
1023,9dbbe6b7ca12e7e26f18f4351d9e8028ed45550f,Michael Haas,micha2718l@gmail.com,2019-11-06 06:38:21,format more explicit error messages for output,1
1024,0cae4f0343f98d5b9f3fbe288b2288e07eeced18,Michael Haas,micha2718l@gmail.com,2019-11-06 19:45:12,"add input casting message, clean up",1
1025,e3852d788524d8a7ccf17b2ea618aeb912dacdd9,Michael Haas,micha2718l@gmail.com,2019-11-06 19:45:57,from-to TO operands-dtypes,1
1026,938b913e6e9bec2ff93c6aa29558ff3bceb30e3b,Michael Haas,micha2718l@gmail.com,2019-11-06 20:02:36,clean out code,1
1027,38a919753f0c0a6c16b2e02625f1e056c14ac5f4,Michael Haas,micha2718l@gmail.com,2019-11-06 20:23:08,"Merge pull request #3 from numpy/master

catch up to master",3
1028,3e4b2f080fd463a259461c68dcf45240ae3b8c61,Michael Haas,micha2718l@gmail.com,2019-11-10 22:14:04,add check for NULL in froms/tos and add Py_INCREF due to PyTupleSET_ITEM,1
1029,028686d5a510f24c2c074d040c95ad1eed281ade,Michael Haas,micha2718l@gmail.com,2019-11-10 22:24:21,add check for missing operands,1
1030,114c70586fcf98efc0c630b09ce1a00ab376f358,Michael Haas,micha2718l@gmail.com,2019-11-10 23:37:34,adding missing Py_INCREF,1
1031,ce2587573e817ac8bb39a4d22f61b0ba5570ff1a,michael,micha2718l@gmail.com,2019-11-11 00:55:53,adjusting test to accommodate new cast error,1
1032,d71f6bbd4340de21a53fa556017b2b518c08d429,Michael Haas,micha2718l@gmail.com,2019-11-11 01:25:58,change return from NULL to -1,1
1033,56b39ef61286c036979c9118da7342a4975be88f,Michael Haas,micha2718l@gmail.com,2019-11-13 01:48:34,"fixing deprecation warning, show relevant dtypes",1
1034,c0b020fbb871e0d39f3faf4560c3a65b826e8ab7,Eric Wieser,wieser.eric@gmail.com,2020-04-21 11:30:21,STY: Fix whitespace style issues,2
1035,fe7e76179e0b734ad9786a005366bf5f79994d75,Eric Wieser,wieser.eric@gmail.com,2020-04-21 11:35:05,STY: More whitespace and declaration fixes,2
1036,e399cdccd3440dc0f551b1a65062ac6e4fa5c211,Eric Wieser,wieser.eric@gmail.com,2020-04-21 11:38:09,STY: space after for keyword,1
1037,bae2dbc118e485ba50d2bd3dafba42b0703a58ad,Michael Haas,micha2718l@gmail.com,2020-10-18 19:02:28,"Merge pull request #5 from numpy/master

merge origin nump/numpy",300
1038,0327900da510a5bbbb84b34d5009c4a41cbb6418,Michael Haas,micha2718l@gmail.com,2020-10-19 18:51:52,[DOC] issue-14828 updating error message in guide,1
1039,b14b380150035d68b6870ce98b196caa3caf7e01,Michael Haas,micha2718l@gmail.com,2020-10-26 20:12:34,[ENH][DOC] cleaning up duplicated code,1
1040,58ba2a399a4c5779325974054d45a09b67b5dba3,Michael Haas,micha2718l@gmail.com,2020-10-27 14:41:53,[ENH][DOC] fixing ref counting in Py_BuildValue,1
1041,c5a01066d742685c4b9dcb6fe07116b192d95c06,Michael Haas,micha2718l@gmail.com,2020-10-27 19:31:53,[ENH][DOC] clean up code around 'outs' portion of error message,1
1042,d55b23f4d3ab338ebcb2ca9cba47035fc9eaf21c,Michael Haas,micha2718l@gmail.com,2020-10-28 13:18:51,[ENH][DOC] fixing last from/to _outs strings and removing np from message,1
1043,be2d94fd1dd334907fb807821424e101dd72e373,Michael Haas,micha2718l@gmail.com,2020-10-28 13:40:42,[ENH][DOC] updating quickstart to not include np in output error,1
1044,18302570c659ecacbec55112720b40e991f9a60a,Debsankha Manik,dmanik@gwdg.de,2019-03-31 07:58:01,ENH: linspace works with datetime64 and timedelta64.,2
1045,857a7ae78844ab7f6770dd2dadb28730db7ec6b7,Debsankha manik,dmanik@nld.ds.mpg.de,2019-12-11 08:21:05,"ENH: In linspace, replaced an assert by a ValueError in response to code review",1
1046,3bcd121927f5d4b06b4d30a836069e682e4096ac,Debsankha manik,dmanik@nld.ds.mpg.de,2019-12-11 09:56:41,ENH: Refactored linspace taking into account code review in PR 14700,1
1047,6491a3ee01f7b025401c71e37fe9a0e0a15de547,Debsankha manik,dmanik@nld.ds.mpg.de,2019-12-11 10:10:34,"ENH: Refactored linspace, producing sensible error message if NaT is passed.",1
1048,85be35ba86145097aab5cb271264365c136213fa,Debsankha manik,dmanik@nld.ds.mpg.de,2019-12-11 18:54:30,"ENH: Improved error messages in linspace, as per sebastian's comments in code review.",1
1049,1d6a890a903850edb7a2a9a24be040156c9118c5,Debsankha Manik,dmanik@gwdg.de,2019-12-16 22:05:40,"ENH: Refactored linspace to no longer use unitless step, as per Sebastian's comments",1
1050,1395a94ffafc51ebd1197c056ebfba25f802ef3c,Sebastian Höffner,info@sebastian-hoeffner.de,2019-10-09 13:09:30,DOC: typos in np.average,1
1051,f4dd7705c9c6087fec1dfc1a1ba174d911115eac,Sebastian Höffner,info@sebastian-hoeffner.de,2019-10-09 13:15:03,"ENH: ma.average like np.average; allow weight mask

This commit makes ma.average to behave more like np.average regarding
dtypes and result handling.

The change required code similar to the code in np.mean, as suggested by
Sebastian Berg, but also some handling in np.ma.average. As a result,
ma.mean handles dtypes like to np.mean. Similar changes have been done
to ma.var, so that it also keeps proper dtypes and uses np.float64 for
integral types.

While getting my head around the code, I inevitably introduced a change
in weights handling: np.ma.average now handles masked weights such that
only values which are not masked in either the data or the weights are
taken into account.

Additional tests and updated documentation are included.

Resolves #14462.",4
1052,4218fd85655b21219bedc30e8a2bf314dc74cd23,Sebastian Höffner,info@sebastian-hoeffner.de,2020-01-08 00:47:42,TST: Adding dtype tests to ma.var and ma.mean,1
1053,a1348a20245766a617fffaba38d1b56448277c83,Sebastian Höffner,info@sebastian-hoeffner.de,2020-01-08 00:54:46,"MAINT: numpy.ma: Use scalar types instead of dtype

Uses scalar types like np.float64 instead of dtype instances in ma.mean
and ma.var.",1
1054,37b49480afa2f818ab39944d5f23c075b0441ef4,Sebastian Höffner,info@sebastian-hoeffner.de,2020-01-08 00:55:50,"MAINT: numpy.ma: Masking DIV0 entries

To retain backwards compatibility, division by 0 entries in masked
arrays are masked out in the results by using true_divide from
numpy.ma rather than a simple /.",2
1055,dcebaa6683c011f9005efb58b1cb06877394b138,Sebastian Höffner,info@sebastian-hoeffner.de,2020-01-08 01:19:24,DOC: ma.average: Setting versionchanged to 1.19.0,1
1056,0fc1c0d1c4709d6a9a2b77434efd9fed3e08874e,Sebastian Höffner,info@sebastian-hoeffner.de,2020-03-16 12:45:34,"MAINT: Removing upcast to float32 in var method.

Adding tests to check if var and mean behave equal to their non-masked counterparts.",2
1057,982637f34bab39ea8b84ebec5ea1023fe05586cd,Sebastian Höffner,info@sebastian-hoeffner.de,2020-03-16 15:27:21,FIX: Removing np.float128 from ma.var/ma.mean tests.,1
1058,9d70a42459200871cf84f38a6aca645ace209221,Sebastian Höffner,info@sebastian-hoeffner.de,2020-03-18 14:56:40,FIX: Using np.[long]double in ma.var/ma.mean tests.,1
1059,c5414aea8de7bfe7e859b128f67cf87f2115274d,Ben Walsh,b@wumpster.com,2019-09-29 20:02:39,"BUG: datetime64 hash.

https://github.com/numpy/numpy/issues/3836",6
1060,13fe5e59f6e6e85a5a1dd2d220cab35b99d91d1f,Christopher Bradshaw,christopher.peter.bradshaw+github@gmail.com,2019-09-27 01:28:55,"Use the fast histogram algorithm with provided bins, if possible",1
1061,afce76584fdcbc35e8e1c9d4dfe6ea9fb6039dff,Christopher Bradshaw,christopher.peter.bradshaw+github@gmail.com,2019-09-27 03:15:22,correctly check that widths are equal within numerical precision,1
1062,56bf1fca7ad6c0d2559f886bdf677b49288d8c11,Christopher Bradshaw,christopher.peter.bradshaw+github@gmail.com,2019-10-09 08:05:17,Add fast kwarg to histogram. Improve numerical precision check,2
1063,e074caa47691a8fcd4df562e9e9a974942d61794,Christopher Bradshaw,christopher.peter.bradshaw+github@gmail.com,2019-10-09 08:38:43,cleanup and handle edge cases,2
1064,0a376a7ba5f1e0e426cb38f525b0978f64e17c37,Alexandre Brilhante,alexandre.brilhante@gmail.com,2019-09-16 22:06:48,raised precision of np.var in float16,1
1065,24c722da66a06a76a66f4264f01932cd6b940498,Alexandre Brilhante,alexandre.brilhante@gmail.com,2019-09-16 22:19:56,raised precision of np.std in float16,1
1066,21523e3bd3b1f89b8be3db747e2191b509bc2200,Sebastian Berg,sebastian@sipsolutions.net,2019-09-12 05:14:45,"ENH: Allow no conversion to scalar guarantee in ufunc and ufunc.outer

The current commit uses ... which is short to write, but other than
that does not have much reason going for. So we should probably
change that.",2
1067,a8f166b963fb9e44a9d0bb29845e8b616b894f47,Sebastian Berg,sebastian@sipsolutions.net,2019-09-13 19:15:00,WIP: Also do not scalarize reductions (requires tests),1
1068,c09b19cefe230d0c1cb8c9823a8b03a79ad42631,Sebastian Berg,sebastian@sipsolutions.net,2020-02-27 18:51:14,Use np.ndarray as identifier.,1
1069,b683b64e26011502e19535e8a4f854269995754f,Sebastian Berg,sebastian@sipsolutions.net,2020-02-27 22:12:15,use np.ndarray to signal that output is guaranteed a numpy array,2
1070,a6118003beca6cb03a2b76872a4b751064a66f4c,Maxwell Aladago,maxwell.aladago@gmail.com,2019-08-23 16:36:10,EHN: adding support for vector atol and rtol in np.all_isclose and np.isclose,2
1071,6ded786ea594e49bcfaf70e77c2aeb85baf7af78,Maxwell Aladago,maxwell.aladago@gmail.com,2019-08-24 21:18:32,release note,1
1072,d0e9bbe5fb930066b680854129f5def02e3939b7,Maxwell Aladago,maxwell.aladago@gmail.com,2019-08-24 21:51:26,release note,1
1073,db366bdbcac65931844d5d8163f017ed22b24359,Maxwell Aladago,maxwell.aladago@gmail.com,2019-08-24 21:58:01,release note,1
1074,b1226e597262481f3e4f8a6ae835bbf21851521d,Maxwell Aladago,maxwell.aladago@gmail.com,2019-08-26 03:47:35,switched to broadcast_to,1
1075,fbf150c2f2d41a26e141f13cc61848b939b30bca,areeves87,lxndr.rvs@gmail.com,2019-08-14 04:52:14,_report_auto_method reports whether the 'auto' bins setting will use the 'sturges' or 'fd' method. _get_auto_bin_edges() computes the bins used internally by np.histogram(bins='auto') when auto method defaults to 'fd' and there are at least 3 bins to be made.,1
1076,136695988a2f01206d9182e1610b7e5193a42f2d,areeves87,lxndr.rvs@gmail.com,2019-08-14 05:02:52,adjust expected number of bins since empty bins get merged together.,1
1077,e0914bb522dfaabf8cef15bb2aca67bcb3d653cf,areeves87,lxndr.rvs@gmail.com,2019-08-15 02:55:52,add test that checks for a memory error with the fd method and asserts a small number of bins for the auto method,1
1078,162bb866a82610b79706a5d3a610c19477212ce2,areeves87,lxndr.rvs@gmail.com,2019-08-15 04:34:20,remove MemoryError assertion test,1
1079,e5e96ab664bf43f6d6ede2f7342eb61c1d565980,areeves87,lxndr.rvs@gmail.com,2019-08-16 01:17:06,"Test for string equality with ==. Use 'and', not 'all'",1
1080,eda483d50cebbb1f11a48d5adadbb6e4e390cf87,areeves87,lxndr.rvs@gmail.com,2019-08-17 00:46:47,"now _repor_auto_method notes that it returns strings, either 'fd' or 'sturges', and does not delete range. now _get_auto_bin_edges notes that its n_equal_bins argument will also be > 2.",1
1081,66d12e34573541d388e2f4c068a10e9ba359ad1f,areeves87,lxndr.rvs@gmail.com,2019-10-05 20:58:28,more descriptive variable names. now calculate bins for the unique set of quantized values - produces smaller array and slight performance boost.,1
1082,8e402dead4b1165d85839f7faf81c50ccfedc491,areeves87,lxndr.rvs@gmail.com,2020-01-11 03:51:34,"Update numpy/lib/histograms.py

`_unsigned_subtract` instead of `ptp`

Co-Authored-By: Eric Wieser <wieser.eric@gmail.com>",1
1083,f6391719573fcbc60279d89b41633f64f21537d3,areeves87,lxndr.rvs@gmail.com,2020-01-11 03:52:17,"Update numpy/lib/histograms.py

`concatenate` instead of `append`

Co-Authored-By: Eric Wieser <wieser.eric@gmail.com>",1
1084,791a4f9e6492460317929f08af3b9ca4065d7cd5,areeves87,lxndr.rvs@gmail.com,2020-01-19 19:37:58,"TODO: consider np.unique(a, return_counts=True).",1
1085,f68c7677bddb866aa8d1a0b32a35dec0a279072e,areeves87,lxndr.rvs@gmail.com,2020-01-19 19:38:16,Merge branch 'merge-empty-hist-bins' of https://github.com/areeves87/numpy into merge-empty-hist-bins,1
1086,7c9eb47b3f5125d502c0ef2ae379f8bad80a28ec,areeves87,lxndr.rvs@gmail.com,2020-01-19 19:43:59,restrict bin widths so that they don't exceed np.float64 resolution.,1
1087,bdd74411e4e29637b235ea9c79c36070d13e953e,areeves87,lxndr.rvs@gmail.com,2020-01-19 19:52:24,add an extra set of right edges to capture floats that would round up into the empty bins,1
1088,78d75104facbb8c866d7e01bc779584538061361,areeves87,lxndr.rvs@gmail.com,2020-01-19 20:01:22,clean up,1
1089,85aa916f390f2898fc9d773d27663db8063d9e20,areeves87,lxndr.rvs@gmail.com,2020-01-19 20:20:44,update unit tests to account for bin width size restriction and extra right bin edges.,1
1090,a2565010f3cd7d91179cb7321d160eb2d4ebd32a,areeves87,lxndr.rvs@gmail.com,2020-01-19 21:08:33,add a new unit test to verify that merged bins are empty,1
1091,6cf90a860a3c1a8fd27dc354643c994db2a97310,areeves87,lxndr.rvs@gmail.com,2020-01-19 21:11:44,all histogram tests are passing,1
1092,43a070aef08615107796fa8c07574855ae1a274c,areeves87,lxndr.rvs@gmail.com,2020-02-08 04:37:23,clean up,1
1093,c9270961499ad623f3c6faffc5a361d94806a94c,Ansgar Wehrhahn,ansgar.wehrhahn@physics.uu.se,2019-07-29 14:27:08,Polyfit2d initial. Now without unnecessary style changes,2
1094,b7d303ec36f0103b8b266d851513eb2fc8c93908,Ansgar Wehrhahn,ansgar.wehrhahn@physics.uu.se,2019-07-29 15:15:31,"Moved 2d fit into polyutils, similar to the 1d fit",2
1095,fcb83cea953a138df5c6f2d29a4149f297211d5c,Ansgar Wehrhahn,ansgar.wehrhahn@physics.uu.se,2019-07-29 15:29:24,"bugfixes, so that test work",1
1096,9808bf278b57e51e3070ef0960194ac4c0d60b9c,Ansgar Wehrhahn,ansgar.wehrhahn@physics.uu.se,2019-08-05 16:07:13,2d fits for other polynomial classes,13
1097,99986c5e99b81f366511b3079be6aacb34b607f3,Ansgar Wehrhahn,ansgar.wehrhahn@physics.uu.se,2019-08-21 14:20:03,Add assertion of shape for the 2d index,1
1098,5267b0d9fb0e7ef98284c6ba4523d8c85b448304,Ansgar Wehrhahn,ansgar.wehrhahn@physics.uu.se,2019-08-21 14:27:57,Fix long lines,1
1099,bd4489e0229e3038a90096bfe7a84c79194eb8e0,Ansgar Wehrhahn,ansgar.wehrhahn@physics.uu.se,2019-08-21 14:34:29,Fix some typos,1
1100,b09ef7050b7ed19cf5448d404f6d0190ef3baf1b,Ansgar Wehrhahn,ansgar.wehrhahn@physics.uu.se,2019-09-09 11:25:22,"Polyfit with degree mask
Remove shifting of the polynomial
Now scales to the maximum of the input values",6
1101,f9b403cc471a6162e1c4e27e9b83e809dfda9516,AWehrhahn,31626864+AWehrhahn@users.noreply.github.com,2019-10-28 09:51:18,"Update numpy/polynomial/polynomial.py

Co-Authored-By: Eric Wieser <wieser.eric@gmail.com>",1
1102,652cad26bd56126be7a49e1b7ceb17ecb5de6083,Ansgar Wehrhahn,ansgar.wehrhahn@physics.uu.se,2019-10-28 10:22:30,Fix docstrings,6
1103,1ea7e7fa75152e488fec880993a62b32931a6de7,Ansgar Wehrhahn,ansgar.wehrhahn@physics.uu.se,2019-10-28 10:23:44,vectorize coefficient scaling,1
1104,b1e0fdb6a873bb76c79b89e4167eeebf1bee0a14,Ansgar Wehrhahn,ansgar.wehrhahn@physics.uu.se,2019-10-28 10:33:14,Fixed docstring again,5
1105,13674f062e3e2cdfb2ddfb432041302dbb3107a7,Ansgar Wehrhahn,ansgar.wehrhahn@physics.uu.se,2020-05-12 14:48:46,polyfitnd,2
1106,74915598b3ff831fb271d8abafc1b07f2e00fdaf,Ansgar Wehrhahn,ansgar.wehrhahn@physics.uu.se,2020-05-12 17:03:32,Implement N dimensional fit,2
1107,c4069f621c2c80198d59339c463cbbc2ab0b5397,Ansgar Wehrhahn,ansgar.wehrhahn@physics.uu.se,2020-05-12 17:16:17,Fix the fit2d function in the other polynomial types,5
1108,4cd2c036f0e227ff9e1bca9a17b3ba2d64e17d55,Ansgar Wehrhahn,ansgar.wehrhahn@physics.uu.se,2020-05-13 10:02:13,Fix initial checks,1
1109,2a2079072a4ce086241ae8c27e83c663cdafd9f1,Ansgar Wehrhahn,ansgar.wehrhahn@physics.uu.se,2020-05-13 12:27:21,"Fix the vandermode matrix indices
Fix some of the documentation
Fix the tests by using meshgrid
1D case should be consistent with _fit",8
1110,6250ff8b559dc3902932f379917dcb4620681876,Ansgar Wehrhahn,ansgar.wehrhahn@physics.uu.se,2020-05-13 17:54:31,"Fix tests
Fix documentation",13
1111,b79bdd1e2631cbf2081cd0782fc75a2c62fd9a0e,Ansgar Wehrhahn,ansgar.wehrhahn@physics.uu.se,2020-05-13 17:54:40,Fix typo,1
1112,eb23787de6aab045423c16b21a592631e793888f,Ansgar Wehrhahn,ansgar.wehrhahn@physics.uu.se,2020-05-13 19:16:59,Bugfix,1
1113,558821c7a772e0b53127ea876f899eb2b24adcb6,Kexuan Sun,me@kianasun.com,2019-07-07 23:20:58,MAINT: Change behaviors of int and bool in spacing,5
1114,efcdeca95f5dd62fd63b9bbf671f9657ce10f3c5,0x0L,0x0L@github.com,2019-04-04 18:45:40,ufunc helper for variance,8
1115,ed7371e129b6fcbc0a9a9edaf04cf0791502790b,nullptr,3621629+0x0L@users.noreply.github.com,2019-07-24 22:20:51,Merge branch 'master' into var_ufunc,278
1116,7f8dc309e1377602ac1157cf4a23d5d1eab52f12,Allan Haldane,allan.haldane@gmail.com,2019-03-24 04:35:45,ENH: Port single-copy np.block implementation to C,5
1117,73c9d484818067d537db095638ed3239d46d5343,Nick MK Lee,mknicklee@gmail.com,2019-02-23 00:55:38,BUG: fixed np.any() and np.all() for object arrays,2
1118,0f0bb66cf1c882e0c54ffb61ee5100253061110d,Nick MK Lee,mknicklee@gmail.com,2019-02-23 01:17:22,TST: added tests for np.any() and np.all() with object arrays,1
1119,74ac12d8a0fa3120a36f144b7d2043097c300cff,Josh Wilson,person142@users.noreply.github.com,2019-01-28 01:48:43,"MAINT: improve the accuracy of `np.sinc` for real arguments

Since NumPy implements the normalized sinc function, argument
reduction can be performed in the `sin` factor without significant
loss of precision for large arguments. To keep the implementation
sane, `sinc` is reimplemented as a ufunc. For consistency the complex
version is also reimplemented as a ufunc, though the implementation
remains the same as before.",9
1120,31a1011e9439d1dcc9258dc7b6375e323da2296e,Josh Wilson,person142@users.noreply.github.com,2019-05-31 21:04:12,MAINT: fix spacing for `sinc` entry in `generate_umath`,1
1121,98d071fd995d9c0068f14401cbedfb96605a348e,Josh Wilson,person142@users.noreply.github.com,2019-06-01 00:54:31,DOC: fix extraneous closing parenthesis in `sinc` docstring,1
1122,872e97e8eb3652b5a2189c26ccb4d51444e3a78d,Josh Wilson,person142@users.noreply.github.com,2019-06-01 01:20:32,"TST: improve tests for `sinc`

- Paremetrize the basic tests for real/complex to make sure all dtypes
  are tested
- Add a test for improved relative error around zeros of the function",1
1123,06c196c5e5d3ff111e5746da9333d1abfb5eda25,Josh Wilson,person142@users.noreply.github.com,2019-06-01 01:57:10,MAINT: add a `sinc` alias back to `lib/function_base.py`,1
1124,5e4ad69d88defa2e2c50f1a40e9a6de1fec71454,Josh Wilson,person142@users.noreply.github.com,2019-06-01 02:13:15,DOC: add a description of the argument reduction used in `sinc`,1
1125,7f04da662f2d14a2b5c188de010cf0d2a32e8f7d,Mark Harfouche,mark.harfouche@gmail.com,2018-11-10 00:50:57,TST: Add a few tests to fromfile. Some are actually failing.,1
1126,912c9af52e72635e1a9a04240a258a9e5f0c1080,Mark Harfouche,mark.harfouche@gmail.com,2018-11-10 00:51:07,BUG: allow reading from buffered stdout.,1
1127,e53f68337c076ff48823c0fe54b29cdb73ef265c,Antony Lee,anntzer.lee@gmail.com,2018-10-11 16:13:49,"ENH: When histogramming data with integer dtype, force bin width >= 1.

Bins of width < 1 don't make sense for integer data, they just add a
bunch of spurious, unpopulated bins.  (Perhaps an even better
improvement would be to make sure that, when using integer data, the
binwidth is also integer, so that each bin always covers the same number
of possible values, but I guess that's possibly a more domain-specific
issue.)

Before the PR:

    In [1]: np.histogram_bin_edges(np.tile(np.arange(10), 1000), ""auto"")
    Out[1]:
    array([0.  , 0.45, 0.9 , 1.35, 1.8 , 2.25, 2.7 , 3.15, 3.6 , 4.05, 4.5 ,
           4.95, 5.4 , 5.85, 6.3 , 6.75, 7.2 , 7.65, 8.1 , 8.55, 9.  ])

After:

    In [1]: np.histogram_bin_edges(np.tile(np.arange(10), 1000), ""auto"")
    Out[1]: array([0., 1., 2., 3., 4., 5., 6., 7., 8., 9.])",2
1128,c50c9117529a8755f258cfbc5c05c60c37044dd8,Mark Harfouche,mark.harfouche@gmail.com,2018-10-05 16:01:17,"ENH: Add a new type of iterator generator, ndrange",2
1129,9f15f9e798b7226d75d1c2c7b14c83305497af8a,Mark Harfouche,mark.harfouche@gmail.com,2018-10-11 03:43:17,DOC: Add a release note about ndrange,1
1130,2b8ad94632e3572c9b373297ea50e75fde805587,Mark Harfouche,mark.harfouche@gmail.com,2018-10-14 02:53:23,ENH: Add __array__ method to np.ndrange,2
1131,04cf3bf9ae78dddefc2885da789b70d864a26d4b,Mark Harfouche,mark.harfouche@gmail.com,2018-10-14 05:16:28,Add flat and ravel (ravel still untested.),2
1132,b254c723b93624c4cfea02ae2ed67287b31472e2,Mark Harfouche,mark.harfouche@gmail.com,2018-10-14 20:05:48,Add tests for raveled.,2
1133,3912fdd4003e8f257a008125234c6f95b9eb3f4e,Mark Harfouche,mark.harfouche@gmail.com,2018-11-05 15:43:45,Add the ndim property to ndrange,2
1134,9e247ecbb43d140c86707cf91b959e8a30612fae,Mark Harfouche,mark.harfouche@gmail.com,2018-11-05 16:09:28,Update the docs with @ahaldane's suggestions.,1
1135,011c1da272b72b393f5f3123fc9821027d39f15b,Mark Harfouche,mark.harfouche@gmail.com,2018-11-05 17:22:11,fixup: documentation of ndrange (squash me later),1
1136,5fe07268b29e904715b423af6714718722aeef65,Mark Harfouche,mark.harfouche@gmail.com,2018-11-05 18:40:04,update doc on parameters.,1
1137,d3932acb04cf594dc631a093f1cf8da093c11f83,Mark Harfouche,mark.harfouche@gmail.com,2018-11-05 18:40:39,Update index_tricks.py,1
1138,540f120904a56b5145af002e92822b0626232b1e,Mark Harfouche,mark.harfouche@gmail.com,2018-11-06 04:02:42,add some failer tests for step,2
1139,2702a9cb58249d5453032988edb435db4be1d309,Mark Harfouche,mark.harfouche@gmail.com,2022-06-19 11:27:32,DOC: lint docstring for ndrange,1
1140,7d7f60ba88dab8a22babf0b5735ee709481b4173,Mark Harfouche,mark.harfouche@gmail.com,2022-06-19 11:31:53,lint: test files,1
1141,fbd77f47c145c2282ba5ae39433cb0ed36896a12,Mark Harfouche,mark.harfouche@gmail.com,2022-06-19 12:08:22,Fix: import collections abc correctly,1
1142,4fc98bda097d2e515a4ec594e8b55e66faf16a0c,Mark Harfouche,mark.harfouche@gmail.com,2022-06-19 12:53:50,TST: fixup collections_abc,1
1143,a794209262e54392f763d271c39d8a7a9dc8880e,Mark Harfouche,mark.harfouche@gmail.com,2022-06-19 21:22:23,Fixup lib: use collections.abc directly,1
1144,4fdd08cbe4929d96a9a3c281d47ef2e38a30bbbb,Mark Harfouche,mark.harfouche@gmail.com,2022-06-19 21:49:40,Lint implementation,1
1145,b286286d8a3d24aa0749b91ace2052fbc02412d7,Mark Harfouche,mark.harfouche@gmail.com,2022-06-19 21:51:40,lint implementation,1
1146,3b3bf9fd016b2a4c957a5b26e4aa3047956a0022,Cheuk Ting Ho,cheukting.ho@gmail.com,2018-09-01 11:36:21,"BUG: any and all applied to object arrays should return booleans

Closes gh-4352",2
1147,967a665a840af18a20f15954ce0ab317932bb079,Cheuk Ting Ho,cheukting.ho@gmail.com,2018-09-01 11:36:21,"BUG: any and all applied to object arrays should return booleans

Closes gh-4352",2
1148,3535e8c3b5c3836d6c49cc8fa22b20903072f189,Cheukting,cheukting.ho@gmail.com,2022-06-09 16:45:46,Merge branch 'euroscipy18' of github.com:Cheukting/numpy into euroscipy18,0
1149,a2f5a005004f1aa342d5b6e037f77b755f977e0c,Joseph Fox-Rabinovitz,joseph.r.fox-rabinovitz@nasa.gov,2018-03-29 06:02:20,MAINT: Minor fixups to ufunc generation,2
1150,988d55f321fd965905134f462319d757e1fb2574,Joseph Fox-Rabinovitz,joseph.r.fox-rabinovitz@nasa.gov,2018-03-29 06:04:59,"ENH: Added dtype=object to isinf, isnan, and isfinite",3
1151,9311d09e9292065d95a8d98b0dcd5956e27469ff,Joseph Fox-Rabinovitz,joseph.r.fox-rabinovitz@nasa.gov,2018-03-29 06:05:37,"TST: Added tests for dtype=object in isinf, isnan, and isfinite",1
1152,68aded04d2f5949e7f4030eb0214159da0396885,Joseph Fox-Rabinovitz,joseph.r.fox-rabinovitz@nasa.gov,2018-03-29 06:44:33,"DOC: Added changes to release notes

Nothing seemed worth adding to the docs of the functions themselves.",1
1153,c49b3326a4422502461953d9fa11b71b731afaa1,Joseph Fox-Rabinovitz,joseph.r.fox-rabinovitz@nasa.gov,2018-03-29 06:52:25,MAINT: Fixed line lengths,1
1154,4d7b194ad96dacb4a8701128be44cf5b8e9d6f15,Joseph Fox-Rabinovitz,joseph.r.fox-rabinovitz@nasa.gov,2018-03-29 20:00:27,"MAINT: Moved implementation of isnan,isinf,isfinite object support",5
1155,30928b5c19781f36c8d54a4e55e4e1cdc73470a8,Joseph Fox-Rabinovitz,joseph.r.fox-rabinovitz@nasa.gov,2018-03-29 20:00:59,"DOC: Documented updates to isnan,isinf,isfinite",2
1156,277c27c76ef8ee452a5d4a0587749f6c510c13dd,Joseph Fox-Rabinovitz,joseph.r.fox-rabinovitz@nasa.gov,2018-03-29 20:19:10,DOC: Corrected release notes,2
1157,3090d2ea8be76a6512d5f9bc560e69f795f77591,Stephan Hoyer,shoyer@google.com,2018-03-07 07:55:16,timedelta64 and datetime64 inherit from np.timeunit,8
1158,024782b0c6dc00944fa8c4851847f3b2ebad3abf,Stephan Hoyer,shoyer@google.com,2018-03-08 04:53:25,Rename np.timeunit -> np.timebase,6
1159,64f50e05c5cfe91baea760f5c987b985ab2ef108,Stephan Hoyer,shoyer@google.com,2018-03-08 04:55:36,Tests for np.timebase base class.,1
1160,e6c103731cf66003e911705c5e5bab2c53ef45cc,Stephan Hoyer,shoyer@google.com,2018-03-08 05:02:53,Fix timeunit -> timebase,1
1161,9be7c95a780cf72f0fd98d4cee209b0157237c1b,Stephan Hoyer,shoyer@google.com,2018-03-08 05:04:03,assert_raises -> assert_raises_regex,1
1162,dcb8838a9c22e60b9ae781bb80b3e2e69e74c6f3,Stephan Hoyer,shoyer@google.com,2018-03-08 05:34:47,Fix tests,1
1163,47592cd355f4a66cd5885ddcfe399faf4190cb18,Troy de Freitas,troy.defreitas@uptake.com,2018-01-12 00:38:45,"Return outputs from vectorized ufunc as-is if not iterable to match sqrt, exp, etc",1
1164,e6428e80258e5f4ad422a49900e7eab00a56401e,Troy de Freitas,troy.defreitas@uptake.com,2018-01-17 01:27:36,Swap check for iterable for check for dimensions > 0,1
1165,5f4955b0ddbb2df216bd536d35b5b5d5023ec965,Troy de Freitas,troy.defreitas@uptake.com,2018-01-17 01:39:24,Add tests,1
1166,7834753394df33b7846000b2a452c03a99008402,cwyuan,cwyuan@uw.edu,2022-02-25 16:23:39,"ENH: Add weights optional arg to quantile/percentile in lib.function_base
     and nanquantile/nanpercentile in lib.nanfunctions (#9211)",3
1167,85487c4355e50f1b4b41c6f5b4f0993d8167fb6f,cwyuan,cwyuan@uw.edu,2022-03-04 14:49:19,"ENH: Tests and documentation for weights arg to quantile/percentile in lib.function_base and nanquantile/nanpercentile in lib.nanfunctions (#9211).

    Move weights normalization to function_base._validate_and_ureduce_weights(), and speed improvement to conditional statement therein (#9211).

    Additional docs to how weights are applied for weighted quantile calculation in lib.function_base (#9211).

    Consolidate all np.vectorize() algo into one in lib.function_base._quantile() (#9211).

    Better mapping from weight space previous/next indexes to real space in lib.function_base._quantile(), with additional comments. (#9211)",4
1168,a5a4c7007e50a35f17767a4f849da31ddf93aac0,cwyuan,cwyuan@uw.edu,2022-04-18 15:24:57,"ENH: Recover separation between indexing and gamma in _QuantileMethods in lib.function_base (#9211).

    Add tests to ensure consistency 1.) between get_virtual_index/fix_gamma and discrite_shortcut in lib.function_base._QuantileMethods, and 2.) in decimal weights. (#9211)

    Remove nan-index check in function_base._get_indexes. (#9211)",3
1169,a0379bfafa122f0e1345de8c45bfa0cc56117849,cwyuan,cwyuan@uw.edu,2022-07-15 22:44:33,"ENH: Forbid (0, 1) weights in weighted quantile (#9211).

     Place weights kwarg for quantile/percentile behind * for backward compatibility.",4
1170,f3d6edc28c08d34ed213333e0814406bfd1b991d,Tom Bird,Tom Bird,2016-07-28 17:45:14,"ENH: add functionality to return covariance matrix of fitted coeffecients for the fitters in the polynomial module.

Implementation is the same as numpy.polyfit. See issue #7780.",13
1171,08734b1ab72f67c4e5ee5df8f3c8e41edd10e2be,Allan Haldane,allan.haldane@gmail.com,2021-02-21 02:11:14,"ENH: output trailing padding in PEP3118 format strings

Fixes #7797",3
1172,dfc8ec7789ff5115c12f95cc235f9b209eadc47b,Allan Haldane,allan.haldane@gmail.com,2021-02-21 14:55:44,ENH: allow 0-sized elements in PEP3118 format strings to align,4
